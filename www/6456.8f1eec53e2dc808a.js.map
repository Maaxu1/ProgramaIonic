{"version":3,"file":"6456.8f1eec53e2dc808a.js","mappings":"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","names":["addEventListener","el","eventName","callback","opts","listenerOpts","supportsPassive","capture","passive","add","remove","__zone_symbol__addEventListener","node","undefined","_sPassive","Object","defineProperty","get","getDocument","Document","ownerDocument","createGesture","config","hasCapturedPan","hasStartedPan","hasFiredStart","isMoveQueued","finalConfig","assign","disableScroll","direction","gesturePriority","maxAngle","threshold","canStart","onWillStart","onStart","onEnd","notCaptured","onMove","blurOnStart","detail","type","startX","startY","startTime","currentX","currentY","velocityX","velocityY","deltaX","deltaY","currentTime","event","data","pan","createPanRecognizer","thresh","radians","Math","PI","isDirX","maxCosine","cos","dirty","isPan","start","x","y","detect","distance","hypotenuse","sqrt","cosine","isGesture","getDirection","gesture","GESTURE_CONTROLLER","name","gestureName","priority","fireOnMove","tryToCapturePan","then","fireOnStart","blurActiveElement","document","activeElement","blur","reset","release","pointerUp","ev","tmpHasCaptured","tmpHasFiredStart","calcGestureData","pointerEvents","createPointerEvents","pointerDown","pointerMove","options","rmTouchStart","rmTouchMove","rmTouchEnd","rmTouchCancel","rmMouseStart","rmMouseMove","rmMouseUp","lastTouchEvent","handleTouchStart","Date","now","target","handleTouchEnd","handleMouseDown","handleMouseUp","stopTouch","stopMouse","stop","enable","isEnabled","destroy","timeStamp","updateDetail","requestAnimationFrame","abortGesture","prevX","prevY","prevT","timeDelta","changedTouches","length","touch","clientX","clientY","pageX","pageY","CoreDelegate","BaseComponent","Reference","attachViewToDom","_ref2","_asyncToGenerator","parentElement","userComponent","userComponentProps","cssClasses","_a","_b","ChildComponent","createElement","forEach","c","classList","appendChild","Promise","resolve","componentOnReady","children","tagName","contains","append","app","querySelector","body","createComment","parentNode","insertBefore","_x7","_x8","apply","this","arguments","removeViewFromDom","focusableQueryString","focusFirstDescendant","ref","fallbackElement","firstInput","focusElementInContext","focusLastDescendant","inputs","Array","from","querySelectorAll","hostToFocus","elementToFocus","shadowRoot","radioGroup","closest","setFocus","focusVisibleElement","focus","lastOverlayIndex","lastId","activeAnimations","WeakMap","createController","create","createOverlay","dismiss","role","id","dismissOverlay","getTop","getPresentedOverlay","alertController","window","customElements","whenDefined","element","hasController","getAppRoot","focusElementInOverlay","overlay","connectListeners","doc","trapKeyboardFocus","lastOverlay","FOCUS_TRAP_DISABLE_CLASS","trapShadowFocus","lastFocus","trapScopedFocus","overlayRoot","getElementRoot","overlayWrapper","backdropDismiss","register","BACKDROP","win","index9","w","key","overlayTag","reject","getPresentedOverlays","getOverlays","selector","filter","overlayIndex","o","isOverlayHidden","overlays","find","setRootAriaHidden","hidden","viewContainer","setAttribute","removeAttribute","present","_ref","iosEnterAnimation","mdEnterAnimation","presented","BACKDROP_NO_SCROLL","hideUnderlyingOverlaysFromScreenReaders","hideAnimatingOverlayFromScreenReaders","willPresent","emit","willPresentShorthand","mode","getIonMode","animationBuilder","enterAnimation","overlayAnimation","didPresent","didPresentShorthand","restoreElementFocus","keyboardClose","_x","_x2","_x3","_x4","_x5","overlayEl","previousElement","onDidDismiss","_x6","_ref3","iosLeaveAnimation","mdLeaveAnimation","overlaysNotToast","style","setProperty","willDismiss","willDismissShorthand","leaveAnimation","GESTURE","didDismiss","didDismissShorthand","ani","delete","removeProperty","err","printIonError","toLowerCase","revealOverlaysToScreenReaders","_x9","_x0","_x1","_x10","_x11","_ref4","baseEl","animation","animated","getBoolean","duration","beforeAddWrite","matches","activeAni","set","play","_x12","_x13","_x14","_x15","eventMethod","promise","r","onceEvent","handler","removeEventListener","isCancel","defaultGate","h","safeCall","arg","e","createDelegateController","workingDelegate","inline","coreDelegate","getDelegate","force","delegate","_ref5","component","Error","_x16","isPlatform","newTopMostOverlay","i","presentedOverlay","nextPresentedOverlay","hasAttribute","currentOverlay","createLockController","waitPromise","lock","p","getClassMap","classes","map","getClassList","isArray","split","trim","Backdrop","proxyCustomElement","HTMLElement","constructor","super","__registerHost","__attachShadow","ionBackdropTap","createEvent","visible","tappable","stopPropagation","onMouseDown","emitTap","preventDefault","render","Host","class","ios","md","sanitizeDOMString","untrustedString","IonicSafeString","value","isSanitizerEnabled","includes","documentFragment","createDocumentFragment","workingDiv","innerHTML","blockedTags","blockedTag","getElementsToRemove","elementIndex","removeChild","childElements","getElementChildren","childIndex","sanitizeElement","dfChildren","fragmentDiv","getInnerDiv","nodeType","NamedNodeMap","attributes","attribute","item","attributeName","allowedAttributes","attributeValue","propertyValue","childNodes","Ionic","sanitizerEnabled","getCapacitor","Capacitor","ImpactStyle","Heavy","Medium","Light","HapticEngine","getEngine","capacitor","isPluginAvailable","Plugins","Haptics","available","getPlatform","navigator","vibrate","impact","engine","notification","selection","selectionStart","selectionChanged","selectionEnd","hapticAvailable","hapticSelectionStart","hapticSelectionChanged","createButtonActiveGesture","isButton","currentTouchedButton","initialTouchedButton","activateButtonAtPoint","hapticFeedbackFn","elementFromPoint","disabled","clearActiveButton","setActiveButton","button","buttonToModify","writeTask","dispatchClick","click","RippleEffect","addRipple","_this","readTask","rect","getBoundingClientRect","width","height","maxDim","max","maxRadius","unbounded","PADDING","initialSize","floor","INITIAL_ORIGIN_SCALE","finalScale","posX","left","posY","top","styleX","styleY","moveX","moveY","div","setTimeout","removeRipple","ripple","baseAnimation","createAnimation","backdropAnimation","wrapperAnimation","addElement","fromTo","beforeStyles","afterClearStyles","keyframes","offset","opacity","transform","easing","addAnimation","Alert","delegateController","lockController","triggerController","createTriggerController","destroyTriggerInteraction","removeClickListener","addClickListener","trigger","triggerEl","getElementById","targetEl","openOverlay","printIonWarning","customHTMLEnabled","processedInputs","processedButtons","buttons","translucent","isOpen","onBackdropTap","dispatchCancelHandler","cancelButton","b","callButtonHandler","onIsOpenChange","newValue","oldValue","triggerChanged","onKeydown","inputTypes","Set","has","shiftKey","wrapperEl","query","radios","radio","index","findIndex","nextEl","nextProcessed","input","rbClick","buttonsChanged","btn","text","inputsChanged","first","focusable","checked","values","join","inputType","next","placeholder","label","min","cssClass","tabindex","connectedCallback","prepareOverlay","componentWillLoad","htmlAttributes","setOverlayId","disconnectedCallback","componentDidLoad","refEl","raf","unlock","_this2","dismissed","onWillDismiss","selectedInput","activeId","forceUpdate","cbClick","buttonClick","_this3","getValues","returnData","checkedInput","renderAlertInputs","renderCheckbox","renderRadio","renderInput","onClick","tabIndex","_c","_d","inputClass","onInput","renderAlertButtons","buttonClass","renderAlertMessage","msgId","message","header","subHeader","hdrId","subHdrId","ariaLabelledBy","zIndex","a","onIonAlertWillDismiss","onIonBackdropTap","watchers","toString","defineCustomElement","define","defineCustomElement$2","defineCustomElement$1","removeDateTzOffset","date","tzOffset","getTimezoneOffset","setMinutes","getMinutes","Style","Dark","Default","getInfo","AlertController","_AlertController","OverlayBaseController","defineCustomElement$8","_defineProperty","__ngFactoryType__","i0","token","factory","ɵfac","providedIn","AlertPage","_AlertPage","alertInputs","maxlength","alertButtons","console","log","datos","ngOnInit","funcionAlerta1","funcionConsole","setResult","showAlertPersonalizada","i1","selectors","decls","vars","consts","template","rf","ctx","IonicModule","i2","CommonModule","RouterModule","ComponentesModule","i3","encapsulation","routes","path","AlertPageRoutingModule","_AlertPageRoutingModule","forChild","AlertPageModule","_AlertPageModule","FormsModule","GestureDelegate","ctrl","captured","enableScroll","BlockerDelegate","disable","block","disableGesture","unblock","enableGesture","GestureController","gestureId","requestedStart","Map","disabledGestures","disabledScroll","newID","createBlocker","maxPriority","capturedId","clear","CustomEvent","dispatchEvent","size","isDisabled","isCaptured","isScrollDisabled"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/components/index3.js","./node_modules/@ionic/core/components/framework-delegate.js","./node_modules/@ionic/core/components/overlays.js","./node_modules/@ionic/core/components/hardware-back-button.js","./node_modules/@ionic/core/components/lock-controller.js","./node_modules/@ionic/core/components/theme.js","./node_modules/@ionic/core/components/backdrop.js","./node_modules/@ionic/core/components/config.js","./node_modules/@ionic/core/components/capacitor.js","./node_modules/@ionic/core/components/haptic.js","./node_modules/@ionic/core/components/button-active.js","./node_modules/@ionic/core/components/ripple-effect.js","./node_modules/@ionic/core/components/alert.js","./node_modules/@ionic/core/components/ion-alert.js","./node_modules/@ionic/core/components/data.js","./node_modules/@ionic/core/components/modal.js","./node_modules/@ionic/angular/fesm2022/ionic-angular-standalone.mjs","./src/app/paginas/alert/alert.page.ts","./src/app/paginas/alert/alert.page.html","./src/app/paginas/alert/alert-routing.module.ts","./src/app/paginas/alert/alert.module.ts","./node_modules/@ionic/core/components/gesture-controller.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { G as GESTURE_CONTROLLER } from './gesture-controller.js';\n\nconst addEventListener = (el, // TODO(FW-2832): type\neventName, callback, opts) => {\n    // use event listener options when supported\n    // otherwise it's just a boolean for the \"capture\" arg\n    const listenerOpts = supportsPassive(el)\n        ? {\n            capture: false,\n            passive: !!opts.passive,\n        }\n        : false;\n    let add;\n    let remove;\n    if (el['__zone_symbol__addEventListener']) {\n        add = '__zone_symbol__addEventListener';\n        remove = '__zone_symbol__removeEventListener';\n    }\n    else {\n        add = 'addEventListener';\n        remove = 'removeEventListener';\n    }\n    el[add](eventName, callback, listenerOpts);\n    return () => {\n        el[remove](eventName, callback, listenerOpts);\n    };\n};\nconst supportsPassive = (node) => {\n    if (_sPassive === undefined) {\n        try {\n            const opts = Object.defineProperty({}, 'passive', {\n                get: () => {\n                    _sPassive = true;\n                },\n            });\n            node.addEventListener('optsTest', () => {\n                return;\n            }, opts);\n        }\n        catch (e) {\n            _sPassive = false;\n        }\n    }\n    return !!_sPassive;\n};\nlet _sPassive;\n\nconst MOUSE_WAIT = 2000;\n// TODO(FW-2832): types\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\n    let rmTouchStart;\n    let rmTouchMove;\n    let rmTouchEnd;\n    let rmTouchCancel;\n    let rmMouseStart;\n    let rmMouseMove;\n    let rmMouseUp;\n    let lastTouchEvent = 0;\n    const handleTouchStart = (ev) => {\n        lastTouchEvent = Date.now() + MOUSE_WAIT;\n        if (!pointerDown(ev)) {\n            return;\n        }\n        if (!rmTouchMove && pointerMove) {\n            rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n        }\n        /**\n         * Events are dispatched on the element that is tapped and bubble up to\n         * the reference element in the gesture. In the event that the element this\n         * event was first dispatched on is removed from the DOM, the event will no\n         * longer bubble up to our reference element. This leaves the gesture in an\n         * unusable state. To account for this, the touchend and touchcancel listeners\n         * should be added to the event target so that they still fire even if the target\n         * is removed from the DOM.\n         */\n        if (!rmTouchEnd) {\n            rmTouchEnd = addEventListener(ev.target, 'touchend', handleTouchEnd, options);\n        }\n        if (!rmTouchCancel) {\n            rmTouchCancel = addEventListener(ev.target, 'touchcancel', handleTouchEnd, options);\n        }\n    };\n    const handleMouseDown = (ev) => {\n        if (lastTouchEvent > Date.now()) {\n            return;\n        }\n        if (!pointerDown(ev)) {\n            return;\n        }\n        if (!rmMouseMove && pointerMove) {\n            rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n        }\n        if (!rmMouseUp) {\n            rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n        }\n    };\n    const handleTouchEnd = (ev) => {\n        stopTouch();\n        if (pointerUp) {\n            pointerUp(ev);\n        }\n    };\n    const handleMouseUp = (ev) => {\n        stopMouse();\n        if (pointerUp) {\n            pointerUp(ev);\n        }\n    };\n    const stopTouch = () => {\n        if (rmTouchMove) {\n            rmTouchMove();\n        }\n        if (rmTouchEnd) {\n            rmTouchEnd();\n        }\n        if (rmTouchCancel) {\n            rmTouchCancel();\n        }\n        rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n    };\n    const stopMouse = () => {\n        if (rmMouseMove) {\n            rmMouseMove();\n        }\n        if (rmMouseUp) {\n            rmMouseUp();\n        }\n        rmMouseMove = rmMouseUp = undefined;\n    };\n    const stop = () => {\n        stopTouch();\n        stopMouse();\n    };\n    const enable = (isEnabled = true) => {\n        if (!isEnabled) {\n            if (rmTouchStart) {\n                rmTouchStart();\n            }\n            if (rmMouseStart) {\n                rmMouseStart();\n            }\n            rmTouchStart = rmMouseStart = undefined;\n            stop();\n        }\n        else {\n            if (!rmTouchStart) {\n                rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n            }\n            if (!rmMouseStart) {\n                rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n            }\n        }\n    };\n    const destroy = () => {\n        enable(false);\n        pointerUp = pointerMove = pointerDown = undefined;\n    };\n    return {\n        enable,\n        stop,\n        destroy,\n    };\n};\nconst getDocument = (node) => {\n    return node instanceof Document ? node : node.ownerDocument;\n};\n\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\n    const radians = maxAngle * (Math.PI / 180);\n    const isDirX = direction === 'x';\n    const maxCosine = Math.cos(radians);\n    const threshold = thresh * thresh;\n    let startX = 0;\n    let startY = 0;\n    let dirty = false;\n    let isPan = 0;\n    return {\n        start(x, y) {\n            startX = x;\n            startY = y;\n            isPan = 0;\n            dirty = true;\n        },\n        detect(x, y) {\n            if (!dirty) {\n                return false;\n            }\n            const deltaX = x - startX;\n            const deltaY = y - startY;\n            const distance = deltaX * deltaX + deltaY * deltaY;\n            if (distance < threshold) {\n                return false;\n            }\n            const hypotenuse = Math.sqrt(distance);\n            const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n            if (cosine > maxCosine) {\n                isPan = 1;\n            }\n            else if (cosine < -maxCosine) {\n                isPan = -1;\n            }\n            else {\n                isPan = 0;\n            }\n            dirty = false;\n            return true;\n        },\n        isGesture() {\n            return isPan !== 0;\n        },\n        getDirection() {\n            return isPan;\n        },\n    };\n};\n\n// TODO(FW-2832): types\nconst createGesture = (config) => {\n    let hasCapturedPan = false;\n    let hasStartedPan = false;\n    let hasFiredStart = true;\n    let isMoveQueued = false;\n    const finalConfig = Object.assign({ disableScroll: false, direction: 'x', gesturePriority: 0, passive: true, maxAngle: 40, threshold: 10 }, config);\n    const canStart = finalConfig.canStart;\n    const onWillStart = finalConfig.onWillStart;\n    const onStart = finalConfig.onStart;\n    const onEnd = finalConfig.onEnd;\n    const notCaptured = finalConfig.notCaptured;\n    const onMove = finalConfig.onMove;\n    const threshold = finalConfig.threshold;\n    const passive = finalConfig.passive;\n    const blurOnStart = finalConfig.blurOnStart;\n    const detail = {\n        type: 'pan',\n        startX: 0,\n        startY: 0,\n        startTime: 0,\n        currentX: 0,\n        currentY: 0,\n        velocityX: 0,\n        velocityY: 0,\n        deltaX: 0,\n        deltaY: 0,\n        currentTime: 0,\n        event: undefined,\n        data: undefined,\n    };\n    const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n    const gesture = GESTURE_CONTROLLER.createGesture({\n        name: config.gestureName,\n        priority: config.gesturePriority,\n        disableScroll: config.disableScroll,\n    });\n    const pointerDown = (ev) => {\n        const timeStamp = now(ev);\n        if (hasStartedPan || !hasFiredStart) {\n            return false;\n        }\n        updateDetail(ev, detail);\n        detail.startX = detail.currentX;\n        detail.startY = detail.currentY;\n        detail.startTime = detail.currentTime = timeStamp;\n        detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n        detail.event = ev;\n        // Check if gesture can start\n        if (canStart && canStart(detail) === false) {\n            return false;\n        }\n        // Release fallback\n        gesture.release();\n        // Start gesture\n        if (!gesture.start()) {\n            return false;\n        }\n        hasStartedPan = true;\n        if (threshold === 0) {\n            return tryToCapturePan();\n        }\n        pan.start(detail.startX, detail.startY);\n        return true;\n    };\n    const pointerMove = (ev) => {\n        // fast path, if gesture is currently captured\n        // do minimum job to get user-land even dispatched\n        if (hasCapturedPan) {\n            if (!isMoveQueued && hasFiredStart) {\n                isMoveQueued = true;\n                calcGestureData(detail, ev);\n                requestAnimationFrame(fireOnMove);\n            }\n            return;\n        }\n        // gesture is currently being detected\n        calcGestureData(detail, ev);\n        if (pan.detect(detail.currentX, detail.currentY)) {\n            if (!pan.isGesture() || !tryToCapturePan()) {\n                abortGesture();\n            }\n        }\n    };\n    const fireOnMove = () => {\n        // Since fireOnMove is called inside a RAF, onEnd() might be called,\n        // we must double check hasCapturedPan\n        if (!hasCapturedPan) {\n            return;\n        }\n        isMoveQueued = false;\n        if (onMove) {\n            onMove(detail);\n        }\n    };\n    const tryToCapturePan = () => {\n        if (!gesture.capture()) {\n            return false;\n        }\n        hasCapturedPan = true;\n        hasFiredStart = false;\n        // reset start position since the real user-land event starts here\n        // If the pan detector threshold is big, not resetting the start position\n        // will cause a jump in the animation equal to the detector threshold.\n        // the array of positions used to calculate the gesture velocity does not\n        // need to be cleaned, more points in the positions array always results in a\n        // more accurate value of the velocity.\n        detail.startX = detail.currentX;\n        detail.startY = detail.currentY;\n        detail.startTime = detail.currentTime;\n        if (onWillStart) {\n            onWillStart(detail).then(fireOnStart);\n        }\n        else {\n            fireOnStart();\n        }\n        return true;\n    };\n    const blurActiveElement = () => {\n        if (typeof document !== 'undefined') {\n            const activeElement = document.activeElement;\n            if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.blur) {\n                activeElement.blur();\n            }\n        }\n    };\n    const fireOnStart = () => {\n        if (blurOnStart) {\n            blurActiveElement();\n        }\n        if (onStart) {\n            onStart(detail);\n        }\n        hasFiredStart = true;\n    };\n    const reset = () => {\n        hasCapturedPan = false;\n        hasStartedPan = false;\n        isMoveQueued = false;\n        hasFiredStart = true;\n        gesture.release();\n    };\n    // END *************************\n    const pointerUp = (ev) => {\n        const tmpHasCaptured = hasCapturedPan;\n        const tmpHasFiredStart = hasFiredStart;\n        reset();\n        if (!tmpHasFiredStart) {\n            return;\n        }\n        calcGestureData(detail, ev);\n        // Try to capture press\n        if (tmpHasCaptured) {\n            if (onEnd) {\n                onEnd(detail);\n            }\n            return;\n        }\n        // Not captured any event\n        if (notCaptured) {\n            notCaptured(detail);\n        }\n    };\n    const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n        passive,\n    });\n    const abortGesture = () => {\n        reset();\n        pointerEvents.stop();\n        if (notCaptured) {\n            notCaptured(detail);\n        }\n    };\n    return {\n        enable(enable = true) {\n            if (!enable) {\n                if (hasCapturedPan) {\n                    pointerUp(undefined);\n                }\n                reset();\n            }\n            pointerEvents.enable(enable);\n        },\n        destroy() {\n            gesture.destroy();\n            pointerEvents.destroy();\n        },\n    };\n};\nconst calcGestureData = (detail, ev) => {\n    if (!ev) {\n        return;\n    }\n    const prevX = detail.currentX;\n    const prevY = detail.currentY;\n    const prevT = detail.currentTime;\n    updateDetail(ev, detail);\n    const currentX = detail.currentX;\n    const currentY = detail.currentY;\n    const timestamp = (detail.currentTime = now(ev));\n    const timeDelta = timestamp - prevT;\n    if (timeDelta > 0 && timeDelta < 100) {\n        const velocityX = (currentX - prevX) / timeDelta;\n        const velocityY = (currentY - prevY) / timeDelta;\n        detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n        detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n    }\n    detail.deltaX = currentX - detail.startX;\n    detail.deltaY = currentY - detail.startY;\n    detail.event = ev;\n};\nconst updateDetail = (ev, detail) => {\n    // get X coordinates for either a mouse click\n    // or a touch depending on the given event\n    let x = 0;\n    let y = 0;\n    if (ev) {\n        const changedTouches = ev.changedTouches;\n        if (changedTouches && changedTouches.length > 0) {\n            const touch = changedTouches[0];\n            x = touch.clientX;\n            y = touch.clientY;\n        }\n        else if (ev.pageX !== undefined) {\n            x = ev.pageX;\n            y = ev.pageY;\n        }\n    }\n    detail.currentX = x;\n    detail.currentY = y;\n};\nconst now = (ev) => {\n    return ev.timeStamp || Date.now();\n};\n\nexport { GESTURE_CONTROLLER, createGesture };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { c as componentOnReady } from './helpers.js';\n\n// TODO(FW-2832): types\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps, inline) => {\n    var _a;\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (!inline && typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = typeof component === 'string' ? (_a = container.ownerDocument) === null || _a === void 0 ? void 0 : _a.createElement(component) : component;\n    if (cssClasses) {\n        cssClasses.forEach((c) => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    await new Promise((resolve) => componentOnReady(el, resolve));\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\nconst CoreDelegate = () => {\n    let BaseComponent;\n    let Reference;\n    const attachViewToDom = async (parentElement, userComponent, userComponentProps = {}, cssClasses = []) => {\n        var _a, _b;\n        BaseComponent = parentElement;\n        let ChildComponent;\n        /**\n         * If passing in a component via the `component` props\n         * we need to append it inside of our overlay component.\n         */\n        if (userComponent) {\n            /**\n             * If passing in the tag name, create\n             * the element otherwise just get a reference\n             * to the component.\n             */\n            const el = typeof userComponent === 'string' ? (_a = BaseComponent.ownerDocument) === null || _a === void 0 ? void 0 : _a.createElement(userComponent) : userComponent;\n            /**\n             * Add any css classes passed in\n             * via the cssClasses prop on the overlay.\n             */\n            cssClasses.forEach((c) => el.classList.add(c));\n            /**\n             * Add any props passed in\n             * via the componentProps prop on the overlay.\n             */\n            Object.assign(el, userComponentProps);\n            /**\n             * Finally, append the component\n             * inside of the overlay component.\n             */\n            BaseComponent.appendChild(el);\n            ChildComponent = el;\n            await new Promise((resolve) => componentOnReady(el, resolve));\n        }\n        else if (BaseComponent.children.length > 0 &&\n            (BaseComponent.tagName === 'ION-MODAL' || BaseComponent.tagName === 'ION-POPOVER')) {\n            /**\n             * The delegate host wrapper el is only needed for modals and popovers\n             * because they allow the dev to provide custom content to the overlay.\n             */\n            const root = (ChildComponent = BaseComponent.children[0]);\n            if (!root.classList.contains('ion-delegate-host')) {\n                /**\n                 * If the root element is not a delegate host, it means\n                 * that the overlay has not been presented yet and we need\n                 * to create the containing element with the specified classes.\n                 */\n                const el = (_b = BaseComponent.ownerDocument) === null || _b === void 0 ? void 0 : _b.createElement('div');\n                // Add a class to track if the root element was created by the delegate.\n                el.classList.add('ion-delegate-host');\n                cssClasses.forEach((c) => el.classList.add(c));\n                // Move each child from the original template to the new parent element.\n                el.append(...BaseComponent.children);\n                // Append the new parent element to the original parent element.\n                BaseComponent.appendChild(el);\n                /**\n                 * Update the ChildComponent to be the\n                 * newly created div in the event that one\n                 * does not already exist.\n                 */\n                ChildComponent = el;\n            }\n        }\n        /**\n         * Get the root of the app and\n         * add the overlay there.\n         */\n        const app = document.querySelector('ion-app') || document.body;\n        /**\n         * Create a placeholder comment so that\n         * we can return this component to where\n         * it was previously.\n         */\n        Reference = document.createComment('ionic teleport');\n        BaseComponent.parentNode.insertBefore(Reference, BaseComponent);\n        app.appendChild(BaseComponent);\n        /**\n         * We return the child component rather than the overlay\n         * reference itself since modal and popover will\n         * use this to wait for any Ionic components in the child view\n         * to be ready (i.e. componentOnReady) when using the\n         * lazy loaded component bundle.\n         *\n         * However, we fall back to returning BaseComponent\n         * in the event that a modal or popover is presented\n         * with no child content.\n         */\n        return ChildComponent !== null && ChildComponent !== void 0 ? ChildComponent : BaseComponent;\n    };\n    const removeViewFromDom = () => {\n        /**\n         * Return component to where it was previously in the DOM.\n         */\n        if (BaseComponent && Reference) {\n            Reference.parentNode.insertBefore(BaseComponent, Reference);\n            Reference.remove();\n        }\n        return Promise.resolve();\n    };\n    return { attachViewToDom, removeViewFromDom };\n};\n\nexport { CoreDelegate as C, attachComponent as a, detachComponent as d };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { d as doc } from './index9.js';\nimport { h as focusVisibleElement, c as componentOnReady, a as addEventListener, b as removeEventListener, g as getElementRoot } from './helpers.js';\nimport { OVERLAY_BACK_BUTTON_PRIORITY, shouldUseCloseWatcher } from './hardware-back-button.js';\nimport { c as config, a as printIonError, p as printIonWarning } from './index4.js';\nimport { b as getIonMode, a as isPlatform } from './ionic-global.js';\nimport { C as CoreDelegate } from './framework-delegate.js';\nimport { B as BACKDROP_NO_SCROLL } from './gesture-controller.js';\n\n/**\n * This query string selects elements that\n * are eligible to receive focus. We select\n * interactive elements that meet the following\n * criteria:\n * 1. Element does not have a negative tabindex\n * 2. Element does not have `hidden`\n * 3. Element does not have `disabled` for non-Ionic components.\n * 4. Element does not have `disabled` or `disabled=\"true\"` for Ionic components.\n * Note: We need this distinction because `disabled=\"false\"` is\n * valid usage for the disabled property on ion-button.\n */\nconst focusableQueryString = '[tabindex]:not([tabindex^=\"-\"]):not([hidden]):not([disabled]), input:not([type=hidden]):not([tabindex^=\"-\"]):not([hidden]):not([disabled]), textarea:not([tabindex^=\"-\"]):not([hidden]):not([disabled]), button:not([tabindex^=\"-\"]):not([hidden]):not([disabled]), select:not([tabindex^=\"-\"]):not([hidden]):not([disabled]), ion-checkbox:not([tabindex^=\"-\"]):not([hidden]):not([disabled]), ion-radio:not([tabindex^=\"-\"]):not([hidden]):not([disabled]), .ion-focusable:not([tabindex^=\"-\"]):not([hidden]):not([disabled]), .ion-focusable[disabled=\"false\"]:not([tabindex^=\"-\"]):not([hidden])';\n/**\n * Focuses the first descendant in a context\n * that can receive focus. If none exists,\n * a fallback element will be focused.\n * This fallback is typically an ancestor\n * container such as a menu or overlay so focus does not\n * leave the container we are trying to trap focus in.\n *\n * If no fallback is specified then we focus the container itself.\n */\nconst focusFirstDescendant = (ref, fallbackElement) => {\n    const firstInput = ref.querySelector(focusableQueryString);\n    focusElementInContext(firstInput, fallbackElement !== null && fallbackElement !== void 0 ? fallbackElement : ref);\n};\n/**\n * Focuses the last descendant in a context\n * that can receive focus. If none exists,\n * a fallback element will be focused.\n * This fallback is typically an ancestor\n * container such as a menu or overlay so focus does not\n * leave the container we are trying to trap focus in.\n *\n * If no fallback is specified then we focus the container itself.\n */\nconst focusLastDescendant = (ref, fallbackElement) => {\n    const inputs = Array.from(ref.querySelectorAll(focusableQueryString));\n    const lastInput = inputs.length > 0 ? inputs[inputs.length - 1] : null;\n    focusElementInContext(lastInput, fallbackElement !== null && fallbackElement !== void 0 ? fallbackElement : ref);\n};\n/**\n * Focuses a particular element in a context. If the element\n * doesn't have anything focusable associated with it then\n * a fallback element will be focused.\n *\n * This fallback is typically an ancestor\n * container such as a menu or overlay so focus does not\n * leave the container we are trying to trap focus in.\n * This should be used instead of the focus() method\n * on most elements because the focusable element\n * may not be the host element.\n *\n * For example, if an ion-button should be focused\n * then we should actually focus the native <button>\n * element inside of ion-button's shadow root, not\n * the host element itself.\n */\nconst focusElementInContext = (hostToFocus, fallbackElement) => {\n    let elementToFocus = hostToFocus;\n    const shadowRoot = hostToFocus === null || hostToFocus === void 0 ? void 0 : hostToFocus.shadowRoot;\n    if (shadowRoot) {\n        // If there are no inner focusable elements, just focus the host element.\n        elementToFocus = shadowRoot.querySelector(focusableQueryString) || hostToFocus;\n    }\n    if (elementToFocus) {\n        const radioGroup = elementToFocus.closest('ion-radio-group');\n        if (radioGroup) {\n            radioGroup.setFocus();\n        }\n        else {\n            focusVisibleElement(elementToFocus);\n        }\n    }\n    else {\n        // Focus fallback element instead of letting focus escape\n        fallbackElement.focus();\n    }\n};\n\nlet lastOverlayIndex = 0;\nlet lastId = 0;\nconst activeAnimations = new WeakMap();\nconst createController = (tagName) => {\n    return {\n        create(options) {\n            return createOverlay(tagName, options);\n        },\n        dismiss(data, role, id) {\n            return dismissOverlay(document, data, role, tagName, id);\n        },\n        async getTop() {\n            return getPresentedOverlay(document, tagName);\n        },\n    };\n};\nconst alertController = /*@__PURE__*/ createController('ion-alert');\nconst actionSheetController = /*@__PURE__*/ createController('ion-action-sheet');\nconst loadingController = /*@__PURE__*/ createController('ion-loading');\nconst modalController = /*@__PURE__*/ createController('ion-modal');\n/**\n * @deprecated Use the inline ion-picker component instead.\n */\nconst pickerController = /*@__PURE__*/ createController('ion-picker-legacy');\nconst popoverController = /*@__PURE__*/ createController('ion-popover');\nconst toastController = /*@__PURE__*/ createController('ion-toast');\n/**\n * Prepares the overlay element to be presented.\n */\nconst prepareOverlay = (el) => {\n    if (typeof document !== 'undefined') {\n        /**\n         * Adds a single instance of event listeners for application behaviors:\n         *\n         * - Escape Key behavior to dismiss an overlay\n         * - Trapping focus within an overlay\n         * - Back button behavior to dismiss an overlay\n         *\n         * This only occurs when the first overlay is created.\n         */\n        connectListeners(document);\n    }\n    const overlayIndex = lastOverlayIndex++;\n    /**\n     * overlayIndex is used in the overlay components to set a zIndex.\n     * This ensures that the most recently presented overlay will be\n     * on top.\n     */\n    el.overlayIndex = overlayIndex;\n};\n/**\n * Assigns an incrementing id to an overlay element, that does not\n * already have an id assigned to it.\n *\n * Used to track unique instances of an overlay element.\n */\nconst setOverlayId = (el) => {\n    if (!el.hasAttribute('id')) {\n        el.id = `ion-overlay-${++lastId}`;\n    }\n    return el.id;\n};\nconst createOverlay = (tagName, opts) => {\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (typeof window !== 'undefined' && typeof window.customElements !== 'undefined') {\n        return window.customElements.whenDefined(tagName).then(() => {\n            const element = document.createElement(tagName);\n            element.classList.add('overlay-hidden');\n            /**\n             * Convert the passed in overlay options into props\n             * that get passed down into the new overlay.\n             */\n            Object.assign(element, Object.assign(Object.assign({}, opts), { hasController: true }));\n            // append the overlay element to the document body\n            getAppRoot(document).appendChild(element);\n            return new Promise((resolve) => componentOnReady(element, resolve));\n        });\n    }\n    return Promise.resolve();\n};\nconst isOverlayHidden = (overlay) => overlay.classList.contains('overlay-hidden');\n/**\n * Focuses a particular element in an overlay. If the element\n * doesn't have anything focusable associated with it then\n * the overlay itself will be focused.\n * This should be used instead of the focus() method\n * on most elements because the focusable element\n * may not be the host element.\n *\n * For example, if an ion-button should be focused\n * then we should actually focus the native <button>\n * element inside of ion-button's shadow root, not\n * the host element itself.\n */\nconst focusElementInOverlay = (hostToFocus, overlay) => {\n    let elementToFocus = hostToFocus;\n    const shadowRoot = hostToFocus === null || hostToFocus === void 0 ? void 0 : hostToFocus.shadowRoot;\n    if (shadowRoot) {\n        // If there are no inner focusable elements, just focus the host element.\n        elementToFocus = shadowRoot.querySelector(focusableQueryString) || hostToFocus;\n    }\n    if (elementToFocus) {\n        focusVisibleElement(elementToFocus);\n    }\n    else {\n        // Focus overlay instead of letting focus escape\n        overlay.focus();\n    }\n};\n/**\n * Traps keyboard focus inside of overlay components.\n * Based on https://w3c.github.io/aria-practices/examples/dialog-modal/alertdialog.html\n * This includes the following components: Action Sheet, Alert, Loading, Modal,\n * Picker, and Popover.\n * Should NOT include: Toast\n */\nconst trapKeyboardFocus = (ev, doc) => {\n    const lastOverlay = getPresentedOverlay(doc, 'ion-alert,ion-action-sheet,ion-loading,ion-modal,ion-picker-legacy,ion-popover');\n    const target = ev.target;\n    /**\n     * If no active overlay, ignore this event.\n     *\n     * If this component uses the shadow dom,\n     * this global listener is pointless\n     * since it will not catch the focus\n     * traps as they are inside the shadow root.\n     * We need to add a listener to the shadow root\n     * itself to ensure the focus trap works.\n     */\n    if (!lastOverlay || !target) {\n        return;\n    }\n    /**\n     * If the ion-disable-focus-trap class\n     * is present on an overlay, then this component\n     * instance has opted out of focus trapping.\n     * An example of this is when the sheet modal\n     * has a backdrop that is disabled. The content\n     * behind the sheet should be focusable until\n     * the backdrop is enabled.\n     */\n    if (lastOverlay.classList.contains(FOCUS_TRAP_DISABLE_CLASS)) {\n        return;\n    }\n    const trapScopedFocus = () => {\n        /**\n         * If we are focusing the overlay, clear\n         * the last focused element so that hitting\n         * tab activates the first focusable element\n         * in the overlay wrapper.\n         */\n        if (lastOverlay === target) {\n            lastOverlay.lastFocus = undefined;\n            /**\n             * Toasts can be presented from an overlay.\n             * However, focus should still be returned to\n             * the overlay when clicking a toast. Normally,\n             * focus would be returned to the last focusable\n             * descendant in the overlay which may not always be\n             * the button that the toast was presented from. In this case,\n             * the focus may be returned to an unexpected element.\n             * To account for this, we make sure to return focus to the\n             * last focused element in the overlay if focus is\n             * moved to the toast.\n             */\n        }\n        else if (target.tagName === 'ION-TOAST') {\n            focusElementInOverlay(lastOverlay.lastFocus, lastOverlay);\n            /**\n             * Otherwise, we must be focusing an element\n             * inside of the overlay. The two possible options\n             * here are an input/button/etc or the ion-focus-trap\n             * element. The focus trap element is used to prevent\n             * the keyboard focus from leaving the overlay when\n             * using Tab or screen assistants.\n             */\n        }\n        else {\n            /**\n             * We do not want to focus the traps, so get the overlay\n             * wrapper element as the traps live outside of the wrapper.\n             */\n            const overlayRoot = getElementRoot(lastOverlay);\n            if (!overlayRoot.contains(target)) {\n                return;\n            }\n            const overlayWrapper = overlayRoot.querySelector('.ion-overlay-wrapper');\n            if (!overlayWrapper) {\n                return;\n            }\n            /**\n             * If the target is inside the wrapper, let the browser\n             * focus as normal and keep a log of the last focused element.\n             * Additionally, if the backdrop was tapped we should not\n             * move focus back inside the wrapper as that could cause\n             * an interactive elements focus state to activate.\n             */\n            if (overlayWrapper.contains(target) || target === overlayRoot.querySelector('ion-backdrop')) {\n                lastOverlay.lastFocus = target;\n            }\n            else {\n                /**\n                 * Otherwise, we must have focused one of the focus traps.\n                 * We need to wrap the focus to either the first element\n                 * or the last element.\n                 */\n                /**\n                 * Once we call `focusFirstDescendant` and focus the first\n                 * descendant, another focus event will fire which will\n                 * cause `lastOverlay.lastFocus` to be updated before\n                 * we can run the code after that. We will cache the value\n                 * here to avoid that.\n                 */\n                const lastFocus = lastOverlay.lastFocus;\n                // Focus the first element in the overlay wrapper\n                focusFirstDescendant(overlayWrapper, lastOverlay);\n                /**\n                 * If the cached last focused element is the\n                 * same as the active element, then we need\n                 * to wrap focus to the last descendant. This happens\n                 * when the first descendant is focused, and the user\n                 * presses Shift + Tab. The previous line will focus\n                 * the same descendant again (the first one), causing\n                 * last focus to equal the active element.\n                 */\n                if (lastFocus === doc.activeElement) {\n                    focusLastDescendant(overlayWrapper, lastOverlay);\n                }\n                lastOverlay.lastFocus = doc.activeElement;\n            }\n        }\n    };\n    const trapShadowFocus = () => {\n        /**\n         * If the target is inside the wrapper, let the browser\n         * focus as normal and keep a log of the last focused element.\n         */\n        if (lastOverlay.contains(target)) {\n            lastOverlay.lastFocus = target;\n            /**\n             * Toasts can be presented from an overlay.\n             * However, focus should still be returned to\n             * the overlay when clicking a toast. Normally,\n             * focus would be returned to the last focusable\n             * descendant in the overlay which may not always be\n             * the button that the toast was presented from. In this case,\n             * the focus may be returned to an unexpected element.\n             * To account for this, we make sure to return focus to the\n             * last focused element in the overlay if focus is\n             * moved to the toast.\n             */\n        }\n        else if (target.tagName === 'ION-TOAST') {\n            focusElementInOverlay(lastOverlay.lastFocus, lastOverlay);\n        }\n        else {\n            /**\n             * Otherwise, we are about to have focus\n             * go out of the overlay. We need to wrap\n             * the focus to either the first element\n             * or the last element.\n             */\n            /**\n             * Once we call `focusFirstDescendant` and focus the first\n             * descendant, another focus event will fire which will\n             * cause `lastOverlay.lastFocus` to be updated before\n             * we can run the code after that. We will cache the value\n             * here to avoid that.\n             */\n            const lastFocus = lastOverlay.lastFocus;\n            // Focus the first element in the overlay wrapper\n            focusFirstDescendant(lastOverlay);\n            /**\n             * If the cached last focused element is the\n             * same as the active element, then we need\n             * to wrap focus to the last descendant. This happens\n             * when the first descendant is focused, and the user\n             * presses Shift + Tab. The previous line will focus\n             * the same descendant again (the first one), causing\n             * last focus to equal the active element.\n             */\n            if (lastFocus === doc.activeElement) {\n                focusLastDescendant(lastOverlay);\n            }\n            lastOverlay.lastFocus = doc.activeElement;\n        }\n    };\n    if (lastOverlay.shadowRoot) {\n        trapShadowFocus();\n    }\n    else {\n        trapScopedFocus();\n    }\n};\nconst connectListeners = (doc) => {\n    if (lastOverlayIndex === 0) {\n        lastOverlayIndex = 1;\n        doc.addEventListener('focus', (ev) => {\n            trapKeyboardFocus(ev, doc);\n        }, true);\n        // handle back-button click\n        doc.addEventListener('ionBackButton', (ev) => {\n            const lastOverlay = getPresentedOverlay(doc);\n            if (lastOverlay === null || lastOverlay === void 0 ? void 0 : lastOverlay.backdropDismiss) {\n                ev.detail.register(OVERLAY_BACK_BUTTON_PRIORITY, () => {\n                    /**\n                     * Do not return this promise otherwise\n                     * the hardware back button utility will\n                     * be blocked until the overlay dismisses.\n                     * This is important for a modal with canDismiss.\n                     * If the application presents a confirmation alert\n                     * in the \"canDismiss\" callback, then it will be impossible\n                     * to use the hardware back button to dismiss the alert\n                     * dialog because the hardware back button utility\n                     * is blocked on waiting for the modal to dismiss.\n                     */\n                    lastOverlay.dismiss(undefined, BACKDROP);\n                });\n            }\n        });\n        /**\n         * Handle ESC to close overlay.\n         * CloseWatcher also handles pressing the Esc\n         * key, so if a browser supports CloseWatcher then\n         * this behavior will be handled via the ionBackButton\n         * event.\n         */\n        if (!shouldUseCloseWatcher()) {\n            doc.addEventListener('keydown', (ev) => {\n                if (ev.key === 'Escape') {\n                    const lastOverlay = getPresentedOverlay(doc);\n                    if (lastOverlay === null || lastOverlay === void 0 ? void 0 : lastOverlay.backdropDismiss) {\n                        lastOverlay.dismiss(undefined, BACKDROP);\n                    }\n                }\n            });\n        }\n    }\n};\nconst dismissOverlay = (doc, data, role, overlayTag, id) => {\n    const overlay = getPresentedOverlay(doc, overlayTag, id);\n    if (!overlay) {\n        return Promise.reject('overlay does not exist');\n    }\n    return overlay.dismiss(data, role);\n};\n/**\n * Returns a list of all overlays in the DOM even if they are not presented.\n */\nconst getOverlays = (doc, selector) => {\n    if (selector === undefined) {\n        selector = 'ion-alert,ion-action-sheet,ion-loading,ion-modal,ion-picker-legacy,ion-popover,ion-toast';\n    }\n    return Array.from(doc.querySelectorAll(selector)).filter((c) => c.overlayIndex > 0);\n};\n/**\n * Returns a list of all presented overlays.\n * Inline overlays can exist in the DOM but not be presented,\n * so there are times when we want to exclude those.\n * @param doc The document to find the element within.\n * @param overlayTag The selector for the overlay, defaults to Ionic overlay components.\n */\nconst getPresentedOverlays = (doc, overlayTag) => {\n    return getOverlays(doc, overlayTag).filter((o) => !isOverlayHidden(o));\n};\n/**\n * Returns a presented overlay element.\n * @param doc The document to find the element within.\n * @param overlayTag The selector for the overlay, defaults to Ionic overlay components.\n * @param id The unique identifier for the overlay instance.\n * @returns The overlay element or `undefined` if no overlay element is found.\n */\nconst getPresentedOverlay = (doc, overlayTag, id) => {\n    const overlays = getPresentedOverlays(doc, overlayTag);\n    return id === undefined ? overlays[overlays.length - 1] : overlays.find((o) => o.id === id);\n};\n/**\n * When an overlay is presented, the main\n * focus is the overlay not the page content.\n * We need to remove the page content from the\n * accessibility tree otherwise when\n * users use \"read screen from top\" gestures with\n * TalkBack and VoiceOver, the screen reader will begin\n * to read the content underneath the overlay.\n *\n * We need a container where all page components\n * exist that is separate from where the overlays\n * are added in the DOM. For most apps, this element\n * is the top most ion-router-outlet. In the event\n * that devs are not using a router,\n * they will need to add the \"ion-view-container-root\"\n * id to the element that contains all of their views.\n *\n * TODO: If Framework supports having multiple top\n * level router outlets we would need to update this.\n * Example: One outlet for side menu and one outlet\n * for main content.\n */\nconst setRootAriaHidden = (hidden = false) => {\n    const root = getAppRoot(document);\n    const viewContainer = root.querySelector('ion-router-outlet, ion-nav, #ion-view-container-root');\n    if (!viewContainer) {\n        return;\n    }\n    if (hidden) {\n        viewContainer.setAttribute('aria-hidden', 'true');\n    }\n    else {\n        viewContainer.removeAttribute('aria-hidden');\n    }\n};\nconst present = async (overlay, name, iosEnterAnimation, mdEnterAnimation, opts) => {\n    var _a, _b;\n    if (overlay.presented) {\n        return;\n    }\n    /**\n     * Due to accessibility guidelines, toasts do not have\n     * focus traps.\n     *\n     * All other overlays should have focus traps to prevent\n     * the keyboard focus from leaving the overlay.\n     */\n    if (overlay.el.tagName !== 'ION-TOAST') {\n        setRootAriaHidden(true);\n        document.body.classList.add(BACKDROP_NO_SCROLL);\n    }\n    hideUnderlyingOverlaysFromScreenReaders(overlay.el);\n    hideAnimatingOverlayFromScreenReaders(overlay.el);\n    overlay.presented = true;\n    overlay.willPresent.emit();\n    (_a = overlay.willPresentShorthand) === null || _a === void 0 ? void 0 : _a.emit();\n    const mode = getIonMode(overlay);\n    // get the user's animation fn if one was provided\n    const animationBuilder = overlay.enterAnimation\n        ? overlay.enterAnimation\n        : config.get(name, mode === 'ios' ? iosEnterAnimation : mdEnterAnimation);\n    const completed = await overlayAnimation(overlay, animationBuilder, overlay.el, opts);\n    if (completed) {\n        overlay.didPresent.emit();\n        (_b = overlay.didPresentShorthand) === null || _b === void 0 ? void 0 : _b.emit();\n    }\n    /**\n     * When an overlay that steals focus\n     * is dismissed, focus should be returned\n     * to the element that was focused\n     * prior to the overlay opening. Toast\n     * does not steal focus and is excluded\n     * from returning focus as a result.\n     */\n    if (overlay.el.tagName !== 'ION-TOAST') {\n        restoreElementFocus(overlay.el);\n    }\n    /**\n     * If the focused element is already\n     * inside the overlay component then\n     * focus should not be moved from that\n     * to the overlay container.\n     */\n    if (overlay.keyboardClose && (document.activeElement === null || !overlay.el.contains(document.activeElement))) {\n        overlay.el.focus();\n    }\n    /**\n     * If this overlay was previously dismissed without being\n     * the topmost one (such as by manually calling dismiss()),\n     * it would still have aria-hidden on being presented again.\n     * Removing it here ensures the overlay is visible to screen\n     * readers.\n     *\n     * If this overlay was being presented, then it was hidden\n     * from screen readers during the animation. Now that the\n     * animation is complete, we can reveal the overlay to\n     * screen readers.\n     */\n    overlay.el.removeAttribute('aria-hidden');\n};\n/**\n * When an overlay component is dismissed,\n * focus should be returned to the element\n * that presented the overlay. Otherwise\n * focus will be set on the body which\n * means that people using screen readers\n * or tabbing will need to re-navigate\n * to where they were before they\n * opened the overlay.\n */\nconst restoreElementFocus = async (overlayEl) => {\n    let previousElement = document.activeElement;\n    if (!previousElement) {\n        return;\n    }\n    const shadowRoot = previousElement === null || previousElement === void 0 ? void 0 : previousElement.shadowRoot;\n    if (shadowRoot) {\n        // If there are no inner focusable elements, just focus the host element.\n        previousElement = shadowRoot.querySelector(focusableQueryString) || previousElement;\n    }\n    await overlayEl.onDidDismiss();\n    /**\n     * After onDidDismiss, the overlay loses focus\n     * because it is removed from the document\n     *\n     * > An element will also lose focus [...]\n     * > if the element is removed from the document)\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/API/Element/blur_event\n     *\n     * Additionally, `document.activeElement` returns:\n     *\n     * > The Element which currently has focus,\n     * > `<body>` or null if there is\n     * > no focused element.\n     *\n     * https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement#value\n     *\n     * However, if the user has already focused\n     * an element sometime between onWillDismiss\n     * and onDidDismiss (for example, focusing a\n     * text box after tapping a button in an\n     * action sheet) then don't restore focus to\n     * previous element\n     */\n    if (document.activeElement === null || document.activeElement === document.body) {\n        previousElement.focus();\n    }\n};\nconst dismiss = async (overlay, data, role, name, iosLeaveAnimation, mdLeaveAnimation, opts) => {\n    var _a, _b;\n    if (!overlay.presented) {\n        return false;\n    }\n    const presentedOverlays = doc !== undefined ? getPresentedOverlays(doc) : [];\n    /**\n     * For accessibility, toasts lack focus traps and don't receive\n     * `aria-hidden` on the root element when presented.\n     *\n     * All other overlays use focus traps to keep keyboard focus\n     * within the overlay, setting `aria-hidden` on the root element\n     * to enhance accessibility.\n     *\n     * Therefore, we must remove `aria-hidden` from the root element\n     * when the last non-toast overlay is dismissed.\n     */\n    const overlaysNotToast = presentedOverlays.filter((o) => o.tagName !== 'ION-TOAST');\n    const lastOverlayNotToast = overlaysNotToast.length === 1 && overlaysNotToast[0].id === overlay.el.id;\n    /**\n     * If this is the last visible overlay that is not a toast\n     * then we want to re-add the root to the accessibility tree.\n     */\n    if (lastOverlayNotToast) {\n        setRootAriaHidden(false);\n        document.body.classList.remove(BACKDROP_NO_SCROLL);\n    }\n    overlay.presented = false;\n    try {\n        /**\n         * There is no need to show the overlay to screen readers during\n         * the dismiss animation. This is because the overlay will be removed\n         * from the DOM after the animation is complete.\n         */\n        hideAnimatingOverlayFromScreenReaders(overlay.el);\n        // Overlay contents should not be clickable during dismiss\n        overlay.el.style.setProperty('pointer-events', 'none');\n        overlay.willDismiss.emit({ data, role });\n        (_a = overlay.willDismissShorthand) === null || _a === void 0 ? void 0 : _a.emit({ data, role });\n        const mode = getIonMode(overlay);\n        const animationBuilder = overlay.leaveAnimation\n            ? overlay.leaveAnimation\n            : config.get(name, mode === 'ios' ? iosLeaveAnimation : mdLeaveAnimation);\n        // If dismissed via gesture, no need to play leaving animation again\n        if (role !== GESTURE) {\n            await overlayAnimation(overlay, animationBuilder, overlay.el, opts);\n        }\n        overlay.didDismiss.emit({ data, role });\n        (_b = overlay.didDismissShorthand) === null || _b === void 0 ? void 0 : _b.emit({ data, role });\n        // Get a reference to all animations currently assigned to this overlay\n        // Then tear them down to return the overlay to its initial visual state\n        const animations = activeAnimations.get(overlay) || [];\n        animations.forEach((ani) => ani.destroy());\n        activeAnimations.delete(overlay);\n        /**\n         * Make overlay hidden again in case it is being reused.\n         * We can safely remove pointer-events: none as\n         * overlay-hidden will set display: none.\n         */\n        overlay.el.classList.add('overlay-hidden');\n        overlay.el.style.removeProperty('pointer-events');\n        /**\n         * Clear any focus trapping references\n         * when the overlay is dismissed.\n         */\n        if (overlay.el.lastFocus !== undefined) {\n            overlay.el.lastFocus = undefined;\n        }\n    }\n    catch (err) {\n        printIonError(`[${overlay.el.tagName.toLowerCase()}] - `, err);\n    }\n    overlay.el.remove();\n    revealOverlaysToScreenReaders();\n    return true;\n};\nconst getAppRoot = (doc) => {\n    return doc.querySelector('ion-app') || doc.body;\n};\nconst overlayAnimation = async (overlay, animationBuilder, baseEl, opts) => {\n    // Make overlay visible in case it's hidden\n    baseEl.classList.remove('overlay-hidden');\n    const aniRoot = overlay.el;\n    const animation = animationBuilder(aniRoot, opts);\n    if (!overlay.animated || !config.getBoolean('animated', true)) {\n        animation.duration(0);\n    }\n    if (overlay.keyboardClose) {\n        animation.beforeAddWrite(() => {\n            const activeElement = baseEl.ownerDocument.activeElement;\n            if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.matches('input,ion-input, ion-textarea')) {\n                activeElement.blur();\n            }\n        });\n    }\n    const activeAni = activeAnimations.get(overlay) || [];\n    activeAnimations.set(overlay, [...activeAni, animation]);\n    await animation.play();\n    return true;\n};\nconst eventMethod = (element, eventName) => {\n    let resolve;\n    const promise = new Promise((r) => (resolve = r));\n    onceEvent(element, eventName, (event) => {\n        resolve(event.detail);\n    });\n    return promise;\n};\nconst onceEvent = (element, eventName, callback) => {\n    const handler = (ev) => {\n        removeEventListener(element, eventName, handler);\n        callback(ev);\n    };\n    addEventListener(element, eventName, handler);\n};\nconst isCancel = (role) => {\n    return role === 'cancel' || role === BACKDROP;\n};\nconst defaultGate = (h) => h();\n/**\n * Calls a developer provided method while avoiding\n * Angular Zones. Since the handler is provided by\n * the developer, we should throw any errors\n * received so that developer-provided bug\n * tracking software can log it.\n */\nconst safeCall = (handler, arg) => {\n    if (typeof handler === 'function') {\n        const jmp = config.get('_zoneGate', defaultGate);\n        return jmp(() => {\n            try {\n                return handler(arg);\n            }\n            catch (e) {\n                throw e;\n            }\n        });\n    }\n    return undefined;\n};\nconst BACKDROP = 'backdrop';\nconst GESTURE = 'gesture';\nconst OVERLAY_GESTURE_PRIORITY = 39;\n/**\n * Creates a delegate controller.\n *\n * Requires that the component has the following properties:\n * - `el: HTMLElement`\n * - `hasController: boolean`\n * - `delegate?: FrameworkDelegate`\n *\n * @param ref The component class instance.\n */\nconst createDelegateController = (ref) => {\n    let inline = false;\n    let workingDelegate;\n    const coreDelegate = CoreDelegate();\n    /**\n     * Determines whether or not an overlay is being used\n     * inline or via a controller/JS and returns the correct delegate.\n     * By default, subsequent calls to getDelegate will use\n     * a cached version of the delegate.\n     * This is useful for calling dismiss after present,\n     * so that the correct delegate is given.\n     * @param force `true` to force the non-cached version of the delegate.\n     * @returns The delegate to use and whether or not the overlay is inline.\n     */\n    const getDelegate = (force = false) => {\n        if (workingDelegate && !force) {\n            return {\n                delegate: workingDelegate,\n                inline,\n            };\n        }\n        const { el, hasController, delegate } = ref;\n        /**\n         * If using overlay inline\n         * we potentially need to use the coreDelegate\n         * so that this works in vanilla JS apps.\n         * If a developer has presented this component\n         * via a controller, then we can assume\n         * the component is already in the\n         * correct place.\n         */\n        const parentEl = el.parentNode;\n        inline = parentEl !== null && !hasController;\n        workingDelegate = inline ? delegate || coreDelegate : delegate;\n        return { inline, delegate: workingDelegate };\n    };\n    /**\n     * Attaches a component in the DOM. Teleports the component\n     * to the root of the app.\n     * @param component The component to optionally construct and append to the element.\n     */\n    const attachViewToDom = async (component) => {\n        const { delegate } = getDelegate(true);\n        if (delegate) {\n            return await delegate.attachViewToDom(ref.el, component);\n        }\n        const { hasController } = ref;\n        if (hasController && component !== undefined) {\n            throw new Error('framework delegate is missing');\n        }\n        return null;\n    };\n    /**\n     * Moves a component back to its original location in the DOM.\n     */\n    const removeViewFromDom = () => {\n        const { delegate } = getDelegate();\n        if (delegate && ref.el !== undefined) {\n            delegate.removeViewFromDom(ref.el.parentElement, ref.el);\n        }\n    };\n    return {\n        attachViewToDom,\n        removeViewFromDom,\n    };\n};\n/**\n * Constructs a trigger interaction for an overlay.\n * Presents an overlay when the trigger is clicked.\n *\n * Usage:\n * ```ts\n * triggerController = createTriggerController();\n * triggerController.addClickListener(el, trigger);\n * ```\n */\nconst createTriggerController = () => {\n    let destroyTriggerInteraction;\n    /**\n     * Removes the click listener from the trigger element.\n     */\n    const removeClickListener = () => {\n        if (destroyTriggerInteraction) {\n            destroyTriggerInteraction();\n            destroyTriggerInteraction = undefined;\n        }\n    };\n    /**\n     * Adds a click listener to the trigger element.\n     * Presents the overlay when the trigger is clicked.\n     * @param el The overlay element.\n     * @param trigger The ID of the element to add a click listener to.\n     */\n    const addClickListener = (el, trigger) => {\n        removeClickListener();\n        const triggerEl = trigger !== undefined ? document.getElementById(trigger) : null;\n        if (!triggerEl) {\n            printIonWarning(`[${el.tagName.toLowerCase()}] - A trigger element with the ID \"${trigger}\" was not found in the DOM. The trigger element must be in the DOM when the \"trigger\" property is set on an overlay component.`, el);\n            return;\n        }\n        const configureTriggerInteraction = (targetEl, overlayEl) => {\n            const openOverlay = () => {\n                overlayEl.present();\n            };\n            targetEl.addEventListener('click', openOverlay);\n            return () => {\n                targetEl.removeEventListener('click', openOverlay);\n            };\n        };\n        destroyTriggerInteraction = configureTriggerInteraction(triggerEl, el);\n    };\n    return {\n        addClickListener,\n        removeClickListener,\n    };\n};\n/**\n * The overlay that is being animated also needs to hide from screen\n * readers during its animation. This ensures that assistive technologies\n * like TalkBack do not announce or interact with the content until the\n * animation is complete, avoiding confusion for users.\n *\n * When the overlay is presented on an Android device, TalkBack's focus rings\n * may appear in the wrong position due to the transition (specifically\n * `transform` styles). This occurs because the focus rings are initially\n * displayed at the starting position of the elements before the transition\n * begins. This workaround ensures the focus rings do not appear in the\n * incorrect location.\n *\n * If this solution is applied to iOS devices, then it leads to a bug where\n * the overlays cannot be accessed by screen readers. This is due to\n * VoiceOver not being able to update the accessibility tree when the\n * `aria-hidden` is removed.\n *\n * @param overlay - The overlay that is being animated.\n */\nconst hideAnimatingOverlayFromScreenReaders = (overlay) => {\n    if (doc === undefined)\n        return;\n    if (isPlatform('android')) {\n        /**\n         * Once the animation is complete, this attribute will be removed.\n         * This is done at the end of the `present` method.\n         */\n        overlay.setAttribute('aria-hidden', 'true');\n    }\n};\n/**\n * Ensure that underlying overlays have aria-hidden if necessary so that screen readers\n * cannot move focus to these elements. Note that we cannot rely on focus/focusin/focusout\n * events here because those events do not fire when the screen readers moves to a non-focusable\n * element such as text.\n * Without this logic screen readers would be able to move focus outside of the top focus-trapped overlay.\n *\n * @param newTopMostOverlay - The overlay that is being presented. Since the overlay has not been\n * fully presented yet at the time this function is called it will not be included in the getPresentedOverlays result.\n */\nconst hideUnderlyingOverlaysFromScreenReaders = (newTopMostOverlay) => {\n    var _a;\n    if (doc === undefined)\n        return;\n    const overlays = getPresentedOverlays(doc);\n    for (let i = overlays.length - 1; i >= 0; i--) {\n        const presentedOverlay = overlays[i];\n        const nextPresentedOverlay = (_a = overlays[i + 1]) !== null && _a !== void 0 ? _a : newTopMostOverlay;\n        /**\n         * If next overlay has aria-hidden then all remaining overlays will have it too.\n         * Or, if the next overlay is a Toast that does not have aria-hidden then current overlay\n         * should not have aria-hidden either so focus can remain in the current overlay.\n         */\n        if (nextPresentedOverlay.hasAttribute('aria-hidden') || nextPresentedOverlay.tagName !== 'ION-TOAST') {\n            presentedOverlay.setAttribute('aria-hidden', 'true');\n        }\n    }\n};\n/**\n * When dismissing an overlay we need to reveal the new top-most overlay to screen readers.\n * If the top-most overlay is a Toast we potentially need to reveal more overlays since\n * focus is never automatically moved to the Toast.\n */\nconst revealOverlaysToScreenReaders = () => {\n    if (doc === undefined)\n        return;\n    const overlays = getPresentedOverlays(doc);\n    for (let i = overlays.length - 1; i >= 0; i--) {\n        const currentOverlay = overlays[i];\n        /**\n         * If the current we are looking at is a Toast then we can remove aria-hidden.\n         * However, we potentially need to keep looking at the overlay stack because there\n         * could be more Toasts underneath. Additionally, we need to unhide the closest non-Toast\n         * overlay too so focus can move there since focus is never automatically moved to the Toast.\n         */\n        currentOverlay.removeAttribute('aria-hidden');\n        /**\n         * If we found a non-Toast element then we can just remove aria-hidden and stop searching entirely\n         * since this overlay should always receive focus. As a result, all underlying overlays should still\n         * be hidden from screen readers.\n         */\n        if (currentOverlay.tagName !== 'ION-TOAST') {\n            break;\n        }\n    }\n};\nconst FOCUS_TRAP_DISABLE_CLASS = 'ion-disable-focus-trap';\n\nexport { BACKDROP as B, FOCUS_TRAP_DISABLE_CLASS as F, GESTURE as G, OVERLAY_GESTURE_PRIORITY as O, alertController as a, actionSheetController as b, popoverController as c, createDelegateController as d, createTriggerController as e, present as f, dismiss as g, eventMethod as h, isCancel as i, prepareOverlay as j, setOverlayId as k, loadingController as l, modalController as m, focusFirstDescendant as n, getPresentedOverlay as o, pickerController as p, focusLastDescendant as q, safeCall as s, toastController as t };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { w as win } from './index9.js';\nimport { c as config, a as printIonError } from './index4.js';\n\n/**\n * CloseWatcher is a newer API that lets\n * use detect the hardware back button event\n * in a web browser: https://caniuse.com/?search=closewatcher\n * However, not every browser supports it yet.\n *\n * This needs to be a function so that we can\n * check the config once it has been set.\n * Otherwise, this code would be evaluated the\n * moment this file is evaluated which could be\n * before the config is set.\n */\nconst shouldUseCloseWatcher = () => config.get('experimentalCloseWatcher', false) && win !== undefined && 'CloseWatcher' in win;\n/**\n * When hardwareBackButton: false in config,\n * we need to make sure we also block the default\n * webview behavior. If we don't then it will be\n * possible for users to navigate backward while\n * an overlay is still open. Additionally, it will\n * give the appearance that the hardwareBackButton\n * config is not working as the page transition\n * will still happen.\n */\nconst blockHardwareBackButton = () => {\n    document.addEventListener('backbutton', () => { }); // eslint-disable-line\n};\nconst startHardwareBackButton = () => {\n    const doc = document;\n    let busy = false;\n    const backButtonCallback = () => {\n        if (busy) {\n            return;\n        }\n        let index = 0;\n        let handlers = [];\n        const ev = new CustomEvent('ionBackButton', {\n            bubbles: false,\n            detail: {\n                register(priority, handler) {\n                    handlers.push({ priority, handler, id: index++ });\n                },\n            },\n        });\n        doc.dispatchEvent(ev);\n        const executeAction = async (handlerRegister) => {\n            try {\n                if (handlerRegister === null || handlerRegister === void 0 ? void 0 : handlerRegister.handler) {\n                    const result = handlerRegister.handler(processHandlers);\n                    if (result != null) {\n                        await result;\n                    }\n                }\n            }\n            catch (e) {\n                printIonError('[ion-app] - Exception in startHardwareBackButton:', e);\n            }\n        };\n        const processHandlers = () => {\n            if (handlers.length > 0) {\n                let selectedHandler = {\n                    priority: Number.MIN_SAFE_INTEGER,\n                    handler: () => undefined,\n                    id: -1,\n                };\n                handlers.forEach((handler) => {\n                    if (handler.priority >= selectedHandler.priority) {\n                        selectedHandler = handler;\n                    }\n                });\n                busy = true;\n                handlers = handlers.filter((handler) => handler.id !== selectedHandler.id);\n                executeAction(selectedHandler).then(() => (busy = false));\n            }\n        };\n        processHandlers();\n    };\n    /**\n     * If the CloseWatcher is defined then\n     * we don't want to also listen for the native\n     * backbutton event otherwise we may get duplicate\n     * events firing.\n     */\n    if (shouldUseCloseWatcher()) {\n        let watcher;\n        const configureWatcher = () => {\n            watcher === null || watcher === void 0 ? void 0 : watcher.destroy();\n            watcher = new win.CloseWatcher();\n            /**\n             * Once a close request happens\n             * the watcher gets destroyed.\n             * As a result, we need to re-configure\n             * the watcher so we can respond to other\n             * close requests.\n             */\n            watcher.onclose = () => {\n                backButtonCallback();\n                configureWatcher();\n            };\n        };\n        configureWatcher();\n    }\n    else {\n        doc.addEventListener('backbutton', backButtonCallback);\n    }\n};\nconst OVERLAY_BACK_BUTTON_PRIORITY = 100;\nconst MENU_BACK_BUTTON_PRIORITY = 99; // 1 less than overlay priority since menu is displayed behind overlays\n\nexport { MENU_BACK_BUTTON_PRIORITY, OVERLAY_BACK_BUTTON_PRIORITY, blockHardwareBackButton, shouldUseCloseWatcher, startHardwareBackButton };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Creates a lock controller.\n *\n * Claiming a lock means that nothing else can acquire the lock until it is released.\n * This can momentarily prevent execution of code that needs to wait for the earlier code to finish.\n * For example, this can be used to prevent multiple transitions from occurring at the same time.\n */\nconst createLockController = () => {\n    let waitPromise;\n    /**\n     * When lock() is called, the lock is claimed.\n     * Once a lock has been claimed, it cannot be claimed again until it is released.\n     * When this function gets resolved, the lock is released, allowing it to be claimed again.\n     *\n     * @example ```tsx\n     * const unlock = await this.lockController.lock();\n     * // do other stuff\n     * unlock();\n     * ```\n     */\n    const lock = async () => {\n        const p = waitPromise;\n        let resolve;\n        waitPromise = new Promise((r) => (resolve = r));\n        if (p !== undefined) {\n            await p;\n        }\n        return resolve;\n    };\n    return {\n        lock,\n    };\n};\n\nexport { createLockController as c };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return typeof color === 'string' && color.length > 0\n        ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter((c) => c != null)\n            .map((c) => c.trim())\n            .filter((c) => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach((c) => (map[c] = true));\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\n\nconst backdropIosCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\n\nconst backdropMdCss = \":host{left:0;right:0;top:0;bottom:0;display:block;position:absolute;-webkit-transform:translateZ(0);transform:translateZ(0);contain:strict;cursor:pointer;opacity:0.01;-ms-touch-action:none;touch-action:none;z-index:2}:host(.backdrop-hide){background:transparent}:host(.backdrop-no-tappable){cursor:auto}:host{background-color:var(--ion-backdrop-color, #000)}\";\n\nconst Backdrop = /*@__PURE__*/ proxyCustomElement(class Backdrop extends HTMLElement {\n    constructor() {\n        super();\n        this.__registerHost();\n        this.__attachShadow();\n        this.ionBackdropTap = createEvent(this, \"ionBackdropTap\", 7);\n        /**\n         * If `true`, the backdrop will be visible.\n         */\n        this.visible = true;\n        /**\n         * If `true`, the backdrop will can be clicked and will emit the `ionBackdropTap` event.\n         */\n        this.tappable = true;\n        /**\n         * If `true`, the backdrop will stop propagation on tap.\n         */\n        this.stopPropagation = true;\n    }\n    onMouseDown(ev) {\n        this.emitTap(ev);\n    }\n    emitTap(ev) {\n        if (this.stopPropagation) {\n            ev.preventDefault();\n            ev.stopPropagation();\n        }\n        if (this.tappable) {\n            this.ionBackdropTap.emit();\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '7abaf2c310aa399607451b14063265e8a5846938', \"aria-hidden\": \"true\", class: {\n                [mode]: true,\n                'backdrop-hide': !this.visible,\n                'backdrop-no-tappable': !this.tappable,\n            } }));\n    }\n    static get style() { return {\n        ios: backdropIosCss,\n        md: backdropMdCss\n    }; }\n}, [33, \"ion-backdrop\", {\n        \"visible\": [4],\n        \"tappable\": [4],\n        \"stopPropagation\": [4, \"stop-propagation\"]\n    }, [[2, \"click\", \"onMouseDown\"]]]);\nfunction defineCustomElement() {\n    if (typeof customElements === \"undefined\") {\n        return;\n    }\n    const components = [\"ion-backdrop\"];\n    components.forEach(tagName => { switch (tagName) {\n        case \"ion-backdrop\":\n            if (!customElements.get(tagName)) {\n                customElements.define(tagName, Backdrop);\n            }\n            break;\n    } });\n}\n\nexport { Backdrop as B, defineCustomElement as d };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { a as printIonError } from './index4.js';\n\n/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nconst sanitizeDOMString = (untrustedString) => {\n    try {\n        if (untrustedString instanceof IonicSafeString) {\n            return untrustedString.value;\n        }\n        if (!isSanitizerEnabled() || typeof untrustedString !== 'string' || untrustedString === '') {\n            return untrustedString;\n        }\n        /**\n         * onload is fired when appending to a document\n         * fragment in Chrome. If a string\n         * contains onload then we should not\n         * attempt to add this to the fragment.\n         */\n        if (untrustedString.includes('onload=')) {\n            return '';\n        }\n        /**\n         * Create a document fragment\n         * separate from the main DOM,\n         * create a div to do our work in\n         */\n        const documentFragment = document.createDocumentFragment();\n        const workingDiv = document.createElement('div');\n        documentFragment.appendChild(workingDiv);\n        workingDiv.innerHTML = untrustedString;\n        /**\n         * Remove any elements\n         * that are blocked\n         */\n        blockedTags.forEach((blockedTag) => {\n            const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\n            for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n                const element = getElementsToRemove[elementIndex];\n                if (element.parentNode) {\n                    element.parentNode.removeChild(element);\n                }\n                else {\n                    documentFragment.removeChild(element);\n                }\n                /**\n                 * We still need to sanitize\n                 * the children of this element\n                 * as they are left behind\n                 */\n                const childElements = getElementChildren(element);\n                /* eslint-disable-next-line */\n                for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\n                    sanitizeElement(childElements[childIndex]);\n                }\n            }\n        });\n        /**\n         * Go through remaining elements and remove\n         * non-allowed attribs\n         */\n        // IE does not support .children on document fragments, only .childNodes\n        const dfChildren = getElementChildren(documentFragment);\n        /* eslint-disable-next-line */\n        for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\n            sanitizeElement(dfChildren[childIndex]);\n        }\n        // Append document fragment to div\n        const fragmentDiv = document.createElement('div');\n        fragmentDiv.appendChild(documentFragment);\n        // First child is always the div we did our work in\n        const getInnerDiv = fragmentDiv.querySelector('div');\n        return getInnerDiv !== null ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n    }\n    catch (err) {\n        printIonError('sanitizeDOMString', err);\n        return '';\n    }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\n// TODO(FW-2832): type (using Element triggers other type errors as well)\nconst sanitizeElement = (element) => {\n    // IE uses childNodes, so ignore nodes that are not elements\n    if (element.nodeType && element.nodeType !== 1) {\n        return;\n    }\n    /**\n     * If attributes is not a NamedNodeMap\n     * then we should remove the element entirely.\n     * This helps avoid DOM Clobbering attacks where\n     * attributes is overridden.\n     */\n    if (typeof NamedNodeMap !== 'undefined' && !(element.attributes instanceof NamedNodeMap)) {\n        element.remove();\n        return;\n    }\n    for (let i = element.attributes.length - 1; i >= 0; i--) {\n        const attribute = element.attributes.item(i);\n        const attributeName = attribute.name;\n        // remove non-allowed attribs\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n            element.removeAttribute(attributeName);\n            continue;\n        }\n        // clean up any allowed attribs\n        // that attempt to do any JS funny-business\n        const attributeValue = attribute.value;\n        /**\n         * We also need to check the property value\n         * as javascript: can allow special characters\n         * such as &Tab; and still be valid (i.e. java&Tab;script)\n         */\n        const propertyValue = element[attributeName];\n        /* eslint-disable */\n        if ((attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) ||\n            (propertyValue != null && propertyValue.toLowerCase().includes('javascript:'))) {\n            element.removeAttribute(attributeName);\n        }\n        /* eslint-enable */\n    }\n    /**\n     * Sanitize any nested children\n     */\n    const childElements = getElementChildren(element);\n    /* eslint-disable-next-line */\n    for (let i = 0; i < childElements.length; i++) {\n        sanitizeElement(childElements[i]);\n    }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\n// TODO(FW-2832): type\nconst getElementChildren = (el) => {\n    return el.children != null ? el.children : el.childNodes;\n};\nconst isSanitizerEnabled = () => {\n    var _a;\n    const win = window;\n    const config = (_a = win === null || win === void 0 ? void 0 : win.Ionic) === null || _a === void 0 ? void 0 : _a.config;\n    if (config) {\n        if (config.get) {\n            return config.get('sanitizerEnabled', true);\n        }\n        else {\n            return config.sanitizerEnabled === true || config.sanitizerEnabled === undefined;\n        }\n    }\n    return true;\n};\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\nclass IonicSafeString {\n    constructor(value) {\n        this.value = value;\n    }\n}\n\nconst setupConfig = (config) => {\n    const win = window;\n    const Ionic = win.Ionic;\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (Ionic && Ionic.config && Ionic.config.constructor.name !== 'Object') {\n        return;\n    }\n    win.Ionic = win.Ionic || {};\n    win.Ionic.config = Object.assign(Object.assign({}, win.Ionic.config), config);\n    return win.Ionic.config;\n};\nconst getMode = () => {\n    var _a;\n    const win = window;\n    const config = (_a = win === null || win === void 0 ? void 0 : win.Ionic) === null || _a === void 0 ? void 0 : _a.config;\n    if (config) {\n        if (config.mode) {\n            return config.mode;\n        }\n        else {\n            return config.get('mode');\n        }\n    }\n    return 'md';\n};\nconst ENABLE_HTML_CONTENT_DEFAULT = false;\n\nexport { ENABLE_HTML_CONTENT_DEFAULT as E, IonicSafeString as I, sanitizeDOMString as a, getMode as g, setupConfig as s };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { w as win } from './index9.js';\n\nconst getCapacitor = () => {\n    if (win !== undefined) {\n        return win.Capacitor;\n    }\n    return undefined;\n};\n\nexport { getCapacitor as g };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { g as getCapacitor } from './capacitor.js';\n\nvar ImpactStyle;\n(function (ImpactStyle) {\n    /**\n     * A collision between large, heavy user interface elements\n     *\n     * @since 1.0.0\n     */\n    ImpactStyle[\"Heavy\"] = \"HEAVY\";\n    /**\n     * A collision between moderately sized user interface elements\n     *\n     * @since 1.0.0\n     */\n    ImpactStyle[\"Medium\"] = \"MEDIUM\";\n    /**\n     * A collision between small, light user interface elements\n     *\n     * @since 1.0.0\n     */\n    ImpactStyle[\"Light\"] = \"LIGHT\";\n})(ImpactStyle || (ImpactStyle = {}));\nvar NotificationType;\n(function (NotificationType) {\n    /**\n     * A notification feedback type indicating that a task has completed successfully\n     *\n     * @since 1.0.0\n     */\n    NotificationType[\"Success\"] = \"SUCCESS\";\n    /**\n     * A notification feedback type indicating that a task has produced a warning\n     *\n     * @since 1.0.0\n     */\n    NotificationType[\"Warning\"] = \"WARNING\";\n    /**\n     * A notification feedback type indicating that a task has failed\n     *\n     * @since 1.0.0\n     */\n    NotificationType[\"Error\"] = \"ERROR\";\n})(NotificationType || (NotificationType = {}));\nconst HapticEngine = {\n    getEngine() {\n        const capacitor = getCapacitor();\n        if (capacitor === null || capacitor === void 0 ? void 0 : capacitor.isPluginAvailable('Haptics')) {\n            // Capacitor\n            return capacitor.Plugins.Haptics;\n        }\n        return undefined;\n    },\n    available() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return false;\n        }\n        const capacitor = getCapacitor();\n        /**\n         * Developers can manually import the\n         * Haptics plugin in their app which will cause\n         * getEngine to return the Haptics engine. However,\n         * the Haptics engine will throw an error if\n         * used in a web browser that does not support\n         * the Vibrate API. This check avoids that error\n         * if the browser does not support the Vibrate API.\n         */\n        if ((capacitor === null || capacitor === void 0 ? void 0 : capacitor.getPlatform()) === 'web') {\n            // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n            return typeof navigator !== 'undefined' && navigator.vibrate !== undefined;\n        }\n        return true;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        engine.impact({ style: options.style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        engine.notification({ type: options.type });\n    },\n    selection() {\n        this.impact({ style: ImpactStyle.Light });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        engine.selectionStart();\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        engine.selectionChanged();\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        engine.selectionEnd();\n    },\n};\n/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\nconst hapticAvailable = () => {\n    return HapticEngine.available();\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    hapticAvailable() && HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    hapticAvailable() && HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    hapticAvailable() && HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    hapticAvailable() && HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: ImpactStyle.LIGHT }` (or `MEDIUM`/`HEAVY`)\n */\nconst hapticImpact = (options) => {\n    hapticAvailable() && HapticEngine.impact(options);\n};\n\nexport { ImpactStyle as I, hapticSelectionChanged as a, hapticSelectionStart as b, hapticImpact as c, hapticSelection as d, hapticSelectionEnd as h };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { writeTask } from '@stencil/core/internal/client';\nimport { h as hapticSelectionEnd, a as hapticSelectionChanged, b as hapticSelectionStart } from './haptic.js';\nimport { createGesture } from './index3.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target) || target.disabled) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: (ev) => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: (ev) => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        },\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, readTask, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\n\nconst rippleEffectCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:strict;pointer-events:none}:host(.unbounded){contain:layout size style}.ripple-effect{border-radius:50%;position:absolute;background-color:currentColor;color:inherit;contain:strict;opacity:0;-webkit-animation:225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;animation:225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;will-change:transform, opacity;pointer-events:none}.fade-out{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1));-webkit-animation:150ms fadeOutAnimation forwards;animation:150ms fadeOutAnimation forwards}@-webkit-keyframes rippleAnimation{from{-webkit-animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1))}}@keyframes rippleAnimation{from{-webkit-animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1))}}@-webkit-keyframes fadeInAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0}to{opacity:0.16}}@keyframes fadeInAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0}to{opacity:0.16}}@-webkit-keyframes fadeOutAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0.16}to{opacity:0}}@keyframes fadeOutAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0.16}to{opacity:0}}\";\n\nconst RippleEffect = /*@__PURE__*/ proxyCustomElement(class RippleEffect extends HTMLElement {\n    constructor() {\n        super();\n        this.__registerHost();\n        this.__attachShadow();\n        /**\n         * Sets the type of ripple-effect:\n         *\n         * - `bounded`: the ripple effect expands from the user's click position\n         * - `unbounded`: the ripple effect expands from the center of the button and overflows the container.\n         *\n         * NOTE: Surfaces for bounded ripples should have the overflow property set to hidden,\n         * while surfaces for unbounded ripples should have it set to visible.\n         */\n        this.type = 'bounded';\n    }\n    /**\n     * Adds the ripple effect to the parent element.\n     *\n     * @param x The horizontal coordinate of where the ripple should start.\n     * @param y The vertical coordinate of where the ripple should start.\n     */\n    async addRipple(x, y) {\n        return new Promise((resolve) => {\n            readTask(() => {\n                const rect = this.el.getBoundingClientRect();\n                const width = rect.width;\n                const height = rect.height;\n                const hypotenuse = Math.sqrt(width * width + height * height);\n                const maxDim = Math.max(height, width);\n                const maxRadius = this.unbounded ? maxDim : hypotenuse + PADDING;\n                const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\n                const finalScale = maxRadius / initialSize;\n                let posX = x - rect.left;\n                let posY = y - rect.top;\n                if (this.unbounded) {\n                    posX = width * 0.5;\n                    posY = height * 0.5;\n                }\n                const styleX = posX - initialSize * 0.5;\n                const styleY = posY - initialSize * 0.5;\n                const moveX = width * 0.5 - posX;\n                const moveY = height * 0.5 - posY;\n                writeTask(() => {\n                    const div = document.createElement('div');\n                    div.classList.add('ripple-effect');\n                    const style = div.style;\n                    style.top = styleY + 'px';\n                    style.left = styleX + 'px';\n                    style.width = style.height = initialSize + 'px';\n                    style.setProperty('--final-scale', `${finalScale}`);\n                    style.setProperty('--translate-end', `${moveX}px, ${moveY}px`);\n                    const container = this.el.shadowRoot || this.el;\n                    container.appendChild(div);\n                    setTimeout(() => {\n                        resolve(() => {\n                            removeRipple(div);\n                        });\n                    }, 225 + 100);\n                });\n            });\n        });\n    }\n    get unbounded() {\n        return this.type === 'unbounded';\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'ae9d3b1ed6773a9b9bb2267129f7e9af23b6c9fc', role: \"presentation\", class: {\n                [mode]: true,\n                unbounded: this.unbounded,\n            } }));\n    }\n    get el() { return this; }\n    static get style() { return rippleEffectCss; }\n}, [1, \"ion-ripple-effect\", {\n        \"type\": [1],\n        \"addRipple\": [64]\n    }]);\nconst removeRipple = (ripple) => {\n    ripple.classList.add('fade-out');\n    setTimeout(() => {\n        ripple.remove();\n    }, 200);\n};\nconst PADDING = 10;\nconst INITIAL_ORIGIN_SCALE = 0.5;\nfunction defineCustomElement() {\n    if (typeof customElements === \"undefined\") {\n        return;\n    }\n    const components = [\"ion-ripple-effect\"];\n    components.forEach(tagName => { switch (tagName) {\n        case \"ion-ripple-effect\":\n            if (!customElements.get(tagName)) {\n                customElements.define(tagName, RippleEffect);\n            }\n            break;\n    } });\n}\n\nexport { RippleEffect as R, defineCustomElement as d };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, forceUpdate, h, Host } from '@stencil/core/internal/client';\nimport { E as ENABLE_HTML_CONTENT_DEFAULT, a as sanitizeDOMString } from './config.js';\nimport { c as createButtonActiveGesture } from './button-active.js';\nimport { r as raf } from './helpers.js';\nimport { c as createLockController } from './lock-controller.js';\nimport { c as config, p as printIonWarning } from './index4.js';\nimport { d as createDelegateController, e as createTriggerController, B as BACKDROP, i as isCancel, j as prepareOverlay, k as setOverlayId, f as present, g as dismiss, h as eventMethod, s as safeCall } from './overlays.js';\nimport { g as getClassMap } from './theme.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { c as createAnimation } from './animation.js';\nimport { d as defineCustomElement$2 } from './backdrop.js';\nimport { d as defineCustomElement$1 } from './ripple-effect.js';\n\n/**\n * iOS Alert Enter Animation\n */\nconst iosEnterAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation\n        .addElement(baseEl.querySelector('ion-backdrop'))\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).keyframes([\n        { offset: 0, opacity: '0.01', transform: 'scale(1.1)' },\n        { offset: 1, opacity: '1', transform: 'scale(1)' },\n    ]);\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('ease-in-out')\n        .duration(200)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\n/**\n * iOS Alert Leave Animation\n */\nconst iosLeaveAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).keyframes([\n        { offset: 0, opacity: 0.99, transform: 'scale(1)' },\n        { offset: 1, opacity: 0, transform: 'scale(0.9)' },\n    ]);\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('ease-in-out')\n        .duration(200)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\n/**\n * Md Alert Enter Animation\n */\nconst mdEnterAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation\n        .addElement(baseEl.querySelector('ion-backdrop'))\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).keyframes([\n        { offset: 0, opacity: '0.01', transform: 'scale(0.9)' },\n        { offset: 1, opacity: '1', transform: 'scale(1)' },\n    ]);\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('ease-in-out')\n        .duration(150)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\n/**\n * Md Alert Leave Animation\n */\nconst mdLeaveAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).fromTo('opacity', 0.99, 0);\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('ease-in-out')\n        .duration(150)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\nconst alertIosCss = \".sc-ion-alert-ios-h{--min-width:250px;--width:auto;--min-height:auto;--height:auto;--max-height:90%;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;font-family:var(--ion-font-family, inherit);contain:strict;-ms-touch-action:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1001}.overlay-hidden.sc-ion-alert-ios-h{display:none}.alert-top.sc-ion-alert-ios-h{padding-top:50px;-ms-flex-align:start;align-items:flex-start}.alert-wrapper.sc-ion-alert-ios{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:content;opacity:0;z-index:10}.alert-title.sc-ion-alert-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}.alert-sub-title.sc-ion-alert-ios{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;font-weight:normal}.alert-message.sc-ion-alert-ios,.alert-input-group.sc-ion-alert-ios{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-overflow-scrolling:touch;overflow-y:auto;overscroll-behavior-y:contain}.alert-checkbox-label.sc-ion-alert-ios,.alert-radio-label.sc-ion-alert-ios{overflow-wrap:anywhere}@media (any-pointer: coarse){.alert-checkbox-group.sc-ion-alert-ios::-webkit-scrollbar,.alert-radio-group.sc-ion-alert-ios::-webkit-scrollbar,.alert-message.sc-ion-alert-ios::-webkit-scrollbar{display:none}}.alert-input.sc-ion-alert-ios{padding-left:0;padding-right:0;padding-top:10px;padding-bottom:10px;width:100%;border:0;background:inherit;font:inherit;-webkit-box-sizing:border-box;box-sizing:border-box}.alert-button-group.sc-ion-alert-ios{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;width:100%}.alert-button-group-vertical.sc-ion-alert-ios{-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.alert-button.sc-ion-alert-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:block;border:0;font-size:0.875rem;line-height:1.25rem;z-index:0}.alert-button.ion-focused.sc-ion-alert-ios,.alert-tappable.ion-focused.sc-ion-alert-ios{background:var(--ion-color-step-100, var(--ion-background-color-step-100, #e6e6e6))}.alert-button-inner.sc-ion-alert-ios{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit}.alert-input-disabled.sc-ion-alert-ios,.alert-checkbox-button-disabled.sc-ion-alert-ios .alert-button-inner.sc-ion-alert-ios,.alert-radio-button-disabled.sc-ion-alert-ios .alert-button-inner.sc-ion-alert-ios{cursor:default;opacity:0.5;pointer-events:none}.alert-tappable.sc-ion-alert-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;display:-ms-flexbox;display:flex;width:100%;border:0;background:transparent;font-size:inherit;line-height:initial;text-align:start;-webkit-appearance:none;-moz-appearance:none;appearance:none;contain:content}.alert-button.sc-ion-alert-ios,.alert-checkbox.sc-ion-alert-ios,.alert-input.sc-ion-alert-ios,.alert-radio.sc-ion-alert-ios{outline:none}.alert-radio-icon.sc-ion-alert-ios,.alert-checkbox-icon.sc-ion-alert-ios,.alert-checkbox-inner.sc-ion-alert-ios{-webkit-box-sizing:border-box;box-sizing:border-box}textarea.alert-input.sc-ion-alert-ios{min-height:37px;resize:none}.sc-ion-alert-ios-h{--background:var(--ion-overlay-background-color, var(--ion-color-step-100, var(--ion-background-color-step-100, #f9f9f9)));--max-width:clamp(270px, 16.875rem, 324px);--backdrop-opacity:var(--ion-backdrop-opacity, 0.3);font-size:max(14px, 0.875rem)}.alert-wrapper.sc-ion-alert-ios{border-radius:13px;-webkit-box-shadow:none;box-shadow:none;overflow:hidden}.alert-button.sc-ion-alert-ios .alert-button-inner.sc-ion-alert-ios{pointer-events:none}@supports ((-webkit-backdrop-filter: blur(0)) or (backdrop-filter: blur(0))){.alert-translucent.sc-ion-alert-ios-h .alert-wrapper.sc-ion-alert-ios{background:rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.9);-webkit-backdrop-filter:saturate(180%) blur(20px);backdrop-filter:saturate(180%) blur(20px)}}.alert-head.sc-ion-alert-ios{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:12px;padding-bottom:7px;text-align:center}.alert-title.sc-ion-alert-ios{margin-top:8px;color:var(--ion-text-color, #000);font-size:max(17px, 1.0625rem);font-weight:600}.alert-sub-title.sc-ion-alert-ios{color:var(--ion-color-step-600, var(--ion-text-color-step-400, #666666));font-size:max(14px, 0.875rem)}.alert-message.sc-ion-alert-ios,.alert-input-group.sc-ion-alert-ios{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:0;padding-bottom:21px;color:var(--ion-text-color, #000);font-size:max(13px, 0.8125rem);text-align:center}.alert-message.sc-ion-alert-ios{max-height:240px}.alert-message.sc-ion-alert-ios:empty{padding-left:0;padding-right:0;padding-top:0;padding-bottom:12px}.alert-input.sc-ion-alert-ios{border-radius:7px;margin-top:10px;-webkit-padding-start:7px;padding-inline-start:7px;-webkit-padding-end:7px;padding-inline-end:7px;padding-top:7px;padding-bottom:7px;border:0.55px solid var(--ion-color-step-250, var(--ion-background-color-step-250, #bfbfbf));background-color:var(--ion-background-color, #fff);-webkit-appearance:none;-moz-appearance:none;appearance:none;font-size:1rem}.alert-input.sc-ion-alert-ios::-webkit-input-placeholder{color:var(--ion-placeholder-color, var(--ion-color-step-400, var(--ion-text-color-step-600, #999999)));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-ios::-moz-placeholder{color:var(--ion-placeholder-color, var(--ion-color-step-400, var(--ion-text-color-step-600, #999999)));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-ios:-ms-input-placeholder{color:var(--ion-placeholder-color, var(--ion-color-step-400, var(--ion-text-color-step-600, #999999)));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-ios::-ms-input-placeholder{color:var(--ion-placeholder-color, var(--ion-color-step-400, var(--ion-text-color-step-600, #999999)));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-ios::placeholder{color:var(--ion-placeholder-color, var(--ion-color-step-400, var(--ion-text-color-step-600, #999999)));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-ios::-ms-clear{display:none}.alert-input.sc-ion-alert-ios::-webkit-date-and-time-value{height:18px}.alert-radio-group.sc-ion-alert-ios,.alert-checkbox-group.sc-ion-alert-ios{-ms-scroll-chaining:none;overscroll-behavior:contain;max-height:240px;border-top:0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);overflow-y:auto;-webkit-overflow-scrolling:touch}.alert-tappable.sc-ion-alert-ios{min-height:44px}.alert-radio-label.sc-ion-alert-ios{-webkit-padding-start:13px;padding-inline-start:13px;-webkit-padding-end:13px;padding-inline-end:13px;padding-top:13px;padding-bottom:13px;-ms-flex:1;flex:1;-ms-flex-order:0;order:0;color:var(--ion-text-color, #000)}[aria-checked=true].sc-ion-alert-ios .alert-radio-label.sc-ion-alert-ios{color:var(--ion-color-primary, #0054e9)}.alert-radio-icon.sc-ion-alert-ios{position:relative;-ms-flex-order:1;order:1;min-width:30px}[aria-checked=true].sc-ion-alert-ios .alert-radio-inner.sc-ion-alert-ios{top:-7px;position:absolute;width:6px;height:12px;-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--ion-color-primary, #0054e9)}[aria-checked=true].sc-ion-alert-ios .alert-radio-inner.sc-ion-alert-ios{inset-inline-start:7px}.alert-checkbox-label.sc-ion-alert-ios{-webkit-padding-start:13px;padding-inline-start:13px;-webkit-padding-end:13px;padding-inline-end:13px;padding-top:13px;padding-bottom:13px;-ms-flex:1;flex:1;color:var(--ion-text-color, #000)}.alert-checkbox-icon.sc-ion-alert-ios{border-radius:50%;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:6px;margin-inline-end:6px;margin-top:10px;margin-bottom:10px;position:relative;width:min(1.375rem, 55.836px);height:min(1.375rem, 55.836px);border-width:0.125rem;border-style:solid;border-color:var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, var(--ion-background-color-step-250, #c8c7cc))));background-color:var(--ion-item-background, var(--ion-background-color, #fff));contain:strict}[aria-checked=true].sc-ion-alert-ios .alert-checkbox-icon.sc-ion-alert-ios{border-color:var(--ion-color-primary, #0054e9);background-color:var(--ion-color-primary, #0054e9)}[aria-checked=true].sc-ion-alert-ios .alert-checkbox-inner.sc-ion-alert-ios{top:calc(min(1.375rem, 55.836px) / 8);position:absolute;width:calc(min(1.375rem, 55.836px) / 6 + 1px);height:calc(min(1.375rem, 55.836px) * 0.5);-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:0.125rem;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--ion-background-color, #fff)}[aria-checked=true].sc-ion-alert-ios .alert-checkbox-inner.sc-ion-alert-ios{inset-inline-start:calc(min(1.375rem, 55.836px) / 3)}.alert-button-group.sc-ion-alert-ios{-webkit-margin-end:-0.55px;margin-inline-end:-0.55px;-ms-flex-wrap:wrap;flex-wrap:wrap}.alert-button-group-vertical.sc-ion-alert-ios .alert-button.sc-ion-alert-ios{border-right:none}[dir=rtl].sc-ion-alert-ios-h .alert-button-group-vertical.sc-ion-alert-ios .alert-button.sc-ion-alert-ios:last-child,[dir=rtl] .sc-ion-alert-ios-h .alert-button-group-vertical.sc-ion-alert-ios .alert-button.sc-ion-alert-ios:last-child{border-right:none}[dir=rtl].sc-ion-alert-ios .alert-button-group-vertical.sc-ion-alert-ios .alert-button.sc-ion-alert-ios:last-child{border-right:none}@supports selector(:dir(rtl)){.alert-button-group-vertical.sc-ion-alert-ios .alert-button.sc-ion-alert-ios:last-child:dir(rtl){border-right:none}}.alert-button.sc-ion-alert-ios{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:0;-ms-flex:1 1 auto;flex:1 1 auto;min-width:50%;height:max(44px, 2.75rem);border-top:0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);border-right:0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);background-color:transparent;color:var(--ion-color-primary, #0054e9);font-size:max(17px, 1.0625rem);overflow:hidden}[dir=rtl].sc-ion-alert-ios-h .alert-button.sc-ion-alert-ios:first-child,[dir=rtl] .sc-ion-alert-ios-h .alert-button.sc-ion-alert-ios:first-child{border-right:0}[dir=rtl].sc-ion-alert-ios .alert-button.sc-ion-alert-ios:first-child{border-right:0}@supports selector(:dir(rtl)){.alert-button.sc-ion-alert-ios:first-child:dir(rtl){border-right:0}}.alert-button.sc-ion-alert-ios:last-child{border-right:0;font-weight:bold}[dir=rtl].sc-ion-alert-ios-h .alert-button.sc-ion-alert-ios:last-child,[dir=rtl] .sc-ion-alert-ios-h .alert-button.sc-ion-alert-ios:last-child{border-right:0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2)}[dir=rtl].sc-ion-alert-ios .alert-button.sc-ion-alert-ios:last-child{border-right:0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2)}@supports selector(:dir(rtl)){.alert-button.sc-ion-alert-ios:last-child:dir(rtl){border-right:0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2)}}.alert-button.ion-activated.sc-ion-alert-ios{background-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.1)}.alert-button-role-destructive.sc-ion-alert-ios,.alert-button-role-destructive.ion-activated.sc-ion-alert-ios,.alert-button-role-destructive.ion-focused.sc-ion-alert-ios{color:var(--ion-color-danger, #c5000f)}\";\n\nconst alertMdCss = \".sc-ion-alert-md-h{--min-width:250px;--width:auto;--min-height:auto;--height:auto;--max-height:90%;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;font-family:var(--ion-font-family, inherit);contain:strict;-ms-touch-action:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1001}.overlay-hidden.sc-ion-alert-md-h{display:none}.alert-top.sc-ion-alert-md-h{padding-top:50px;-ms-flex-align:start;align-items:flex-start}.alert-wrapper.sc-ion-alert-md{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:content;opacity:0;z-index:10}.alert-title.sc-ion-alert-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}.alert-sub-title.sc-ion-alert-md{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;font-weight:normal}.alert-message.sc-ion-alert-md,.alert-input-group.sc-ion-alert-md{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-overflow-scrolling:touch;overflow-y:auto;overscroll-behavior-y:contain}.alert-checkbox-label.sc-ion-alert-md,.alert-radio-label.sc-ion-alert-md{overflow-wrap:anywhere}@media (any-pointer: coarse){.alert-checkbox-group.sc-ion-alert-md::-webkit-scrollbar,.alert-radio-group.sc-ion-alert-md::-webkit-scrollbar,.alert-message.sc-ion-alert-md::-webkit-scrollbar{display:none}}.alert-input.sc-ion-alert-md{padding-left:0;padding-right:0;padding-top:10px;padding-bottom:10px;width:100%;border:0;background:inherit;font:inherit;-webkit-box-sizing:border-box;box-sizing:border-box}.alert-button-group.sc-ion-alert-md{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;width:100%}.alert-button-group-vertical.sc-ion-alert-md{-ms-flex-direction:column;flex-direction:column;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.alert-button.sc-ion-alert-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;display:block;border:0;font-size:0.875rem;line-height:1.25rem;z-index:0}.alert-button.ion-focused.sc-ion-alert-md,.alert-tappable.ion-focused.sc-ion-alert-md{background:var(--ion-color-step-100, var(--ion-background-color-step-100, #e6e6e6))}.alert-button-inner.sc-ion-alert-md{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit}.alert-input-disabled.sc-ion-alert-md,.alert-checkbox-button-disabled.sc-ion-alert-md .alert-button-inner.sc-ion-alert-md,.alert-radio-button-disabled.sc-ion-alert-md .alert-button-inner.sc-ion-alert-md{cursor:default;opacity:0.5;pointer-events:none}.alert-tappable.sc-ion-alert-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;display:-ms-flexbox;display:flex;width:100%;border:0;background:transparent;font-size:inherit;line-height:initial;text-align:start;-webkit-appearance:none;-moz-appearance:none;appearance:none;contain:content}.alert-button.sc-ion-alert-md,.alert-checkbox.sc-ion-alert-md,.alert-input.sc-ion-alert-md,.alert-radio.sc-ion-alert-md{outline:none}.alert-radio-icon.sc-ion-alert-md,.alert-checkbox-icon.sc-ion-alert-md,.alert-checkbox-inner.sc-ion-alert-md{-webkit-box-sizing:border-box;box-sizing:border-box}textarea.alert-input.sc-ion-alert-md{min-height:37px;resize:none}.sc-ion-alert-md-h{--background:var(--ion-overlay-background-color, var(--ion-background-color, #fff));--max-width:280px;--backdrop-opacity:var(--ion-backdrop-opacity, 0.32);font-size:0.875rem}.alert-wrapper.sc-ion-alert-md{border-radius:4px;-webkit-box-shadow:0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);box-shadow:0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12)}.alert-head.sc-ion-alert-md{-webkit-padding-start:23px;padding-inline-start:23px;-webkit-padding-end:23px;padding-inline-end:23px;padding-top:20px;padding-bottom:15px;text-align:start}.alert-title.sc-ion-alert-md{color:var(--ion-text-color, #000);font-size:1.25rem;font-weight:500}.alert-sub-title.sc-ion-alert-md{color:var(--ion-text-color, #000);font-size:1rem}.alert-message.sc-ion-alert-md,.alert-input-group.sc-ion-alert-md{-webkit-padding-start:24px;padding-inline-start:24px;-webkit-padding-end:24px;padding-inline-end:24px;padding-top:20px;padding-bottom:20px;color:var(--ion-color-step-550, var(--ion-text-color-step-450, #737373))}.alert-message.sc-ion-alert-md{font-size:1rem}@media screen and (max-width: 767px){.alert-message.sc-ion-alert-md{max-height:266px}}.alert-message.sc-ion-alert-md:empty{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}.alert-head.sc-ion-alert-md+.alert-message.sc-ion-alert-md{padding-top:0}.alert-input.sc-ion-alert-md{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;border-bottom:1px solid var(--ion-color-step-150, var(--ion-background-color-step-150, #d9d9d9));color:var(--ion-text-color, #000)}.alert-input.sc-ion-alert-md::-webkit-input-placeholder{color:var(--ion-placeholder-color, var(--ion-color-step-400, var(--ion-text-color-step-600, #999999)));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-md::-moz-placeholder{color:var(--ion-placeholder-color, var(--ion-color-step-400, var(--ion-text-color-step-600, #999999)));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-md:-ms-input-placeholder{color:var(--ion-placeholder-color, var(--ion-color-step-400, var(--ion-text-color-step-600, #999999)));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-md::-ms-input-placeholder{color:var(--ion-placeholder-color, var(--ion-color-step-400, var(--ion-text-color-step-600, #999999)));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-md::placeholder{color:var(--ion-placeholder-color, var(--ion-color-step-400, var(--ion-text-color-step-600, #999999)));font-family:inherit;font-weight:inherit}.alert-input.sc-ion-alert-md::-ms-clear{display:none}.alert-input.sc-ion-alert-md:focus{margin-bottom:4px;border-bottom:2px solid var(--ion-color-primary, #0054e9)}.alert-radio-group.sc-ion-alert-md,.alert-checkbox-group.sc-ion-alert-md{position:relative;border-top:1px solid var(--ion-color-step-150, var(--ion-background-color-step-150, #d9d9d9));border-bottom:1px solid var(--ion-color-step-150, var(--ion-background-color-step-150, #d9d9d9));overflow:auto}@media screen and (max-width: 767px){.alert-radio-group.sc-ion-alert-md,.alert-checkbox-group.sc-ion-alert-md{max-height:266px}}.alert-tappable.sc-ion-alert-md{position:relative;min-height:48px}.alert-radio-label.sc-ion-alert-md{-webkit-padding-start:52px;padding-inline-start:52px;-webkit-padding-end:26px;padding-inline-end:26px;padding-top:13px;padding-bottom:13px;-ms-flex:1;flex:1;color:var(--ion-color-step-850, var(--ion-text-color-step-150, #262626));font-size:1rem}.alert-radio-icon.sc-ion-alert-md{top:0;border-radius:50%;display:block;position:relative;width:20px;height:20px;border-width:2px;border-style:solid;border-color:var(--ion-color-step-550, var(--ion-background-color-step-550, #737373))}.alert-radio-icon.sc-ion-alert-md{inset-inline-start:26px}.alert-radio-inner.sc-ion-alert-md{top:3px;border-radius:50%;position:absolute;width:10px;height:10px;-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);-webkit-transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);background-color:var(--ion-color-primary, #0054e9)}.alert-radio-inner.sc-ion-alert-md{inset-inline-start:3px}[aria-checked=true].sc-ion-alert-md .alert-radio-label.sc-ion-alert-md{color:var(--ion-color-step-850, var(--ion-text-color-step-150, #262626))}[aria-checked=true].sc-ion-alert-md .alert-radio-icon.sc-ion-alert-md{border-color:var(--ion-color-primary, #0054e9)}[aria-checked=true].sc-ion-alert-md .alert-radio-inner.sc-ion-alert-md{-webkit-transform:scale3d(1, 1, 1);transform:scale3d(1, 1, 1)}.alert-checkbox-label.sc-ion-alert-md{-webkit-padding-start:53px;padding-inline-start:53px;-webkit-padding-end:26px;padding-inline-end:26px;padding-top:13px;padding-bottom:13px;-ms-flex:1;flex:1;width:calc(100% - 53px);color:var(--ion-color-step-850, var(--ion-text-color-step-150, #262626));font-size:1rem}.alert-checkbox-icon.sc-ion-alert-md{top:0;border-radius:2px;position:relative;width:16px;height:16px;border-width:2px;border-style:solid;border-color:var(--ion-color-step-550, var(--ion-background-color-step-550, #737373));contain:strict}.alert-checkbox-icon.sc-ion-alert-md{inset-inline-start:26px}[aria-checked=true].sc-ion-alert-md .alert-checkbox-icon.sc-ion-alert-md{border-color:var(--ion-color-primary, #0054e9);background-color:var(--ion-color-primary, #0054e9)}[aria-checked=true].sc-ion-alert-md .alert-checkbox-inner.sc-ion-alert-md{top:0;position:absolute;width:6px;height:10px;-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--ion-color-primary-contrast, #fff)}[aria-checked=true].sc-ion-alert-md .alert-checkbox-inner.sc-ion-alert-md{inset-inline-start:3px}.alert-button-group.sc-ion-alert-md{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;-webkit-box-sizing:border-box;box-sizing:border-box;-ms-flex-wrap:wrap-reverse;flex-wrap:wrap-reverse;-ms-flex-pack:end;justify-content:flex-end}.alert-button.sc-ion-alert-md{border-radius:2px;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px;margin-top:0;margin-bottom:0;-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:10px;padding-bottom:10px;position:relative;background-color:transparent;color:var(--ion-color-primary, #0054e9);font-weight:500;text-align:end;text-transform:uppercase;overflow:hidden}.alert-button-inner.sc-ion-alert-md{-ms-flex-pack:end;justify-content:flex-end}@media screen and (min-width: 768px){.sc-ion-alert-md-h{--max-width:min(100vw - 96px, 560px);--max-height:min(100vh - 96px, 560px)}}\";\n\nconst Alert = /*@__PURE__*/ proxyCustomElement(class Alert extends HTMLElement {\n    constructor() {\n        super();\n        this.__registerHost();\n        this.didPresent = createEvent(this, \"ionAlertDidPresent\", 7);\n        this.willPresent = createEvent(this, \"ionAlertWillPresent\", 7);\n        this.willDismiss = createEvent(this, \"ionAlertWillDismiss\", 7);\n        this.didDismiss = createEvent(this, \"ionAlertDidDismiss\", 7);\n        this.didPresentShorthand = createEvent(this, \"didPresent\", 7);\n        this.willPresentShorthand = createEvent(this, \"willPresent\", 7);\n        this.willDismissShorthand = createEvent(this, \"willDismiss\", 7);\n        this.didDismissShorthand = createEvent(this, \"didDismiss\", 7);\n        this.delegateController = createDelegateController(this);\n        this.lockController = createLockController();\n        this.triggerController = createTriggerController();\n        this.customHTMLEnabled = config.get('innerHTMLTemplatesEnabled', ENABLE_HTML_CONTENT_DEFAULT);\n        this.processedInputs = [];\n        this.processedButtons = [];\n        this.presented = false;\n        /** @internal */\n        this.hasController = false;\n        /**\n         * If `true`, the keyboard will be automatically dismissed when the overlay is presented.\n         */\n        this.keyboardClose = true;\n        /**\n         * Array of buttons to be added to the alert.\n         */\n        this.buttons = [];\n        /**\n         * Array of input to show in the alert.\n         */\n        this.inputs = [];\n        /**\n         * If `true`, the alert will be dismissed when the backdrop is clicked.\n         */\n        this.backdropDismiss = true;\n        /**\n         * If `true`, the alert will be translucent.\n         * Only applies when the mode is `\"ios\"` and the device supports\n         * [`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\n         */\n        this.translucent = false;\n        /**\n         * If `true`, the alert will animate.\n         */\n        this.animated = true;\n        /**\n         * If `true`, the alert will open. If `false`, the alert will close.\n         * Use this if you need finer grained control over presentation, otherwise\n         * just use the alertController or the `trigger` property.\n         * Note: `isOpen` will not automatically be set back to `false` when\n         * the alert dismisses. You will need to do that in your code.\n         */\n        this.isOpen = false;\n        this.onBackdropTap = () => {\n            this.dismiss(undefined, BACKDROP);\n        };\n        this.dispatchCancelHandler = (ev) => {\n            const role = ev.detail.role;\n            if (isCancel(role)) {\n                const cancelButton = this.processedButtons.find((b) => b.role === 'cancel');\n                this.callButtonHandler(cancelButton);\n            }\n        };\n    }\n    onIsOpenChange(newValue, oldValue) {\n        if (newValue === true && oldValue === false) {\n            this.present();\n        }\n        else if (newValue === false && oldValue === true) {\n            this.dismiss();\n        }\n    }\n    triggerChanged() {\n        const { trigger, el, triggerController } = this;\n        if (trigger) {\n            triggerController.addClickListener(el, trigger);\n        }\n    }\n    onKeydown(ev) {\n        var _a;\n        const inputTypes = new Set(this.processedInputs.map((i) => i.type));\n        /**\n         * Based on keyboard navigation requirements, the\n         * checkbox should not respond to the enter keydown event.\n         */\n        if (inputTypes.has('checkbox') && ev.key === 'Enter') {\n            ev.preventDefault();\n            return;\n        }\n        /**\n         * Ensure when alert container is being focused, and the user presses the tab + shift keys, the focus will be set to the last alert button.\n         */\n        if (ev.target.classList.contains('alert-wrapper')) {\n            if (ev.key === 'Tab' && ev.shiftKey) {\n                ev.preventDefault();\n                const lastChildBtn = (_a = this.wrapperEl) === null || _a === void 0 ? void 0 : _a.querySelector('.alert-button:last-child');\n                lastChildBtn.focus();\n                return;\n            }\n        }\n        // The only inputs we want to navigate between using arrow keys are the radios\n        // ignore the keydown event if it is not on a radio button\n        if (!inputTypes.has('radio') ||\n            (ev.target && !this.el.contains(ev.target)) ||\n            ev.target.classList.contains('alert-button')) {\n            return;\n        }\n        // Get all radios inside of the radio group and then\n        // filter out disabled radios since we need to skip those\n        const query = this.el.querySelectorAll('.alert-radio');\n        const radios = Array.from(query).filter((radio) => !radio.disabled);\n        // The focused radio is the one that shares the same id as\n        // the event target\n        const index = radios.findIndex((radio) => radio.id === ev.target.id);\n        // We need to know what the next radio element should\n        // be in order to change the focus\n        let nextEl;\n        // If hitting arrow down or arrow right, move to the next radio\n        // If we're on the last radio, move to the first radio\n        if (['ArrowDown', 'ArrowRight'].includes(ev.key)) {\n            nextEl = index === radios.length - 1 ? radios[0] : radios[index + 1];\n        }\n        // If hitting arrow up or arrow left, move to the previous radio\n        // If we're on the first radio, move to the last radio\n        if (['ArrowUp', 'ArrowLeft'].includes(ev.key)) {\n            nextEl = index === 0 ? radios[radios.length - 1] : radios[index - 1];\n        }\n        if (nextEl && radios.includes(nextEl)) {\n            const nextProcessed = this.processedInputs.find((input) => input.id === (nextEl === null || nextEl === void 0 ? void 0 : nextEl.id));\n            if (nextProcessed) {\n                this.rbClick(nextProcessed);\n                nextEl.focus();\n            }\n        }\n    }\n    buttonsChanged() {\n        const buttons = this.buttons;\n        this.processedButtons = buttons.map((btn) => {\n            return typeof btn === 'string' ? { text: btn, role: btn.toLowerCase() === 'cancel' ? 'cancel' : undefined } : btn;\n        });\n    }\n    inputsChanged() {\n        const inputs = this.inputs;\n        // Get the first input that is not disabled and the checked one\n        // If an enabled checked input exists, set it to be the focusable input\n        // otherwise we default to focus the first input\n        // This will only be used when the input is type radio\n        const first = inputs.find((input) => !input.disabled);\n        const checked = inputs.find((input) => input.checked && !input.disabled);\n        const focusable = checked || first;\n        // An alert can be created with several different inputs. Radios,\n        // checkboxes and inputs are all accepted, but they cannot be mixed.\n        const inputTypes = new Set(inputs.map((i) => i.type));\n        if (inputTypes.has('checkbox') && inputTypes.has('radio')) {\n            printIonWarning(`[ion-alert] - Alert cannot mix input types: ${Array.from(inputTypes.values()).join('/')}. Please see alert docs for more info.`);\n        }\n        this.inputType = inputTypes.values().next().value;\n        this.processedInputs = inputs.map((i, index) => {\n            var _a;\n            return ({\n                type: i.type || 'text',\n                name: i.name || `${index}`,\n                placeholder: i.placeholder || '',\n                value: i.value,\n                label: i.label,\n                checked: !!i.checked,\n                disabled: !!i.disabled,\n                id: i.id || `alert-input-${this.overlayIndex}-${index}`,\n                handler: i.handler,\n                min: i.min,\n                max: i.max,\n                cssClass: (_a = i.cssClass) !== null && _a !== void 0 ? _a : '',\n                attributes: i.attributes || {},\n                tabindex: i.type === 'radio' && i !== focusable ? -1 : 0,\n            });\n        });\n    }\n    connectedCallback() {\n        prepareOverlay(this.el);\n        this.triggerChanged();\n    }\n    componentWillLoad() {\n        var _a;\n        if (!((_a = this.htmlAttributes) === null || _a === void 0 ? void 0 : _a.id)) {\n            setOverlayId(this.el);\n        }\n        this.inputsChanged();\n        this.buttonsChanged();\n    }\n    disconnectedCallback() {\n        this.triggerController.removeClickListener();\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    componentDidLoad() {\n        /**\n         * Only create gesture if:\n         * 1. A gesture does not already exist\n         * 2. App is running in iOS mode\n         * 3. A wrapper ref exists\n         */\n        if (!this.gesture && getIonMode(this) === 'ios' && this.wrapperEl) {\n            this.gesture = createButtonActiveGesture(this.wrapperEl, (refEl) => refEl.classList.contains('alert-button'));\n            this.gesture.enable(true);\n        }\n        /**\n         * If alert was rendered with isOpen=\"true\"\n         * then we should open alert immediately.\n         */\n        if (this.isOpen === true) {\n            raf(() => this.present());\n        }\n        /**\n         * When binding values in frameworks such as Angular\n         * it is possible for the value to be set after the Web Component\n         * initializes but before the value watcher is set up in Stencil.\n         * As a result, the watcher callback may not be fired.\n         * We work around this by manually calling the watcher\n         * callback when the component has loaded and the watcher\n         * is configured.\n         */\n        this.triggerChanged();\n    }\n    /**\n     * Present the alert overlay after it has been created.\n     */\n    async present() {\n        const unlock = await this.lockController.lock();\n        await this.delegateController.attachViewToDom();\n        await present(this, 'alertEnter', iosEnterAnimation, mdEnterAnimation).then(() => {\n            var _a, _b;\n            /**\n             * Check if alert has only one button and no inputs.\n             * If so, then focus on the button. Otherwise, focus the alert wrapper.\n             * This will map to the default native alert behavior.\n             */\n            if (this.buttons.length === 1 && this.inputs.length === 0) {\n                const queryBtn = (_a = this.wrapperEl) === null || _a === void 0 ? void 0 : _a.querySelector('.alert-button');\n                queryBtn.focus();\n            }\n            else {\n                (_b = this.wrapperEl) === null || _b === void 0 ? void 0 : _b.focus();\n            }\n        });\n        unlock();\n    }\n    /**\n     * Dismiss the alert overlay after it has been presented.\n     * This is a no-op if the overlay has not been presented yet. If you want\n     * to remove an overlay from the DOM that was never presented, use the\n     * [remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the alert.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the alert. Some examples include:\n     * `\"cancel\"`, `\"destructive\"`, `\"selected\"`, and `\"backdrop\"`.\n     */\n    async dismiss(data, role) {\n        const unlock = await this.lockController.lock();\n        const dismissed = await dismiss(this, data, role, 'alertLeave', iosLeaveAnimation, mdLeaveAnimation);\n        if (dismissed) {\n            this.delegateController.removeViewFromDom();\n        }\n        unlock();\n        return dismissed;\n    }\n    /**\n     * Returns a promise that resolves when the alert did dismiss.\n     */\n    onDidDismiss() {\n        return eventMethod(this.el, 'ionAlertDidDismiss');\n    }\n    /**\n     * Returns a promise that resolves when the alert will dismiss.\n     */\n    onWillDismiss() {\n        return eventMethod(this.el, 'ionAlertWillDismiss');\n    }\n    rbClick(selectedInput) {\n        for (const input of this.processedInputs) {\n            input.checked = input === selectedInput;\n            input.tabindex = input === selectedInput ? 0 : -1;\n        }\n        this.activeId = selectedInput.id;\n        safeCall(selectedInput.handler, selectedInput);\n        forceUpdate(this);\n    }\n    cbClick(selectedInput) {\n        selectedInput.checked = !selectedInput.checked;\n        safeCall(selectedInput.handler, selectedInput);\n        forceUpdate(this);\n    }\n    async buttonClick(button) {\n        const role = button.role;\n        const values = this.getValues();\n        if (isCancel(role)) {\n            return this.dismiss({ values }, role);\n        }\n        const returnData = await this.callButtonHandler(button, values);\n        if (returnData !== false) {\n            return this.dismiss(Object.assign({ values }, returnData), button.role);\n        }\n        return false;\n    }\n    async callButtonHandler(button, data) {\n        if (button === null || button === void 0 ? void 0 : button.handler) {\n            // a handler has been provided, execute it\n            // pass the handler the values from the inputs\n            const returnData = await safeCall(button.handler, data);\n            if (returnData === false) {\n                // if the return value of the handler is false then do not dismiss\n                return false;\n            }\n            if (typeof returnData === 'object') {\n                return returnData;\n            }\n        }\n        return {};\n    }\n    getValues() {\n        if (this.processedInputs.length === 0) {\n            // this is an alert without any options/inputs at all\n            return undefined;\n        }\n        if (this.inputType === 'radio') {\n            // this is an alert with radio buttons (single value select)\n            // return the one value which is checked, otherwise undefined\n            const checkedInput = this.processedInputs.find((i) => !!i.checked);\n            return checkedInput ? checkedInput.value : undefined;\n        }\n        if (this.inputType === 'checkbox') {\n            // this is an alert with checkboxes (multiple value select)\n            // return an array of all the checked values\n            return this.processedInputs.filter((i) => i.checked).map((i) => i.value);\n        }\n        // this is an alert with text inputs\n        // return an object of all the values with the input name as the key\n        const values = {};\n        this.processedInputs.forEach((i) => {\n            values[i.name] = i.value || '';\n        });\n        return values;\n    }\n    renderAlertInputs() {\n        switch (this.inputType) {\n            case 'checkbox':\n                return this.renderCheckbox();\n            case 'radio':\n                return this.renderRadio();\n            default:\n                return this.renderInput();\n        }\n    }\n    renderCheckbox() {\n        const inputs = this.processedInputs;\n        const mode = getIonMode(this);\n        if (inputs.length === 0) {\n            return null;\n        }\n        return (h(\"div\", { class: \"alert-checkbox-group\" }, inputs.map((i) => (h(\"button\", { type: \"button\", onClick: () => this.cbClick(i), \"aria-checked\": `${i.checked}`, id: i.id, disabled: i.disabled, tabIndex: i.tabindex, role: \"checkbox\", class: Object.assign(Object.assign({}, getClassMap(i.cssClass)), { 'alert-tappable': true, 'alert-checkbox': true, 'alert-checkbox-button': true, 'ion-focusable': true, 'alert-checkbox-button-disabled': i.disabled || false }) }, h(\"div\", { class: \"alert-button-inner\" }, h(\"div\", { class: \"alert-checkbox-icon\" }, h(\"div\", { class: \"alert-checkbox-inner\" })), h(\"div\", { class: \"alert-checkbox-label\" }, i.label)), mode === 'md' && h(\"ion-ripple-effect\", null))))));\n    }\n    renderRadio() {\n        const inputs = this.processedInputs;\n        if (inputs.length === 0) {\n            return null;\n        }\n        return (h(\"div\", { class: \"alert-radio-group\", role: \"radiogroup\", \"aria-activedescendant\": this.activeId }, inputs.map((i) => (h(\"button\", { type: \"button\", onClick: () => this.rbClick(i), \"aria-checked\": `${i.checked}`, disabled: i.disabled, id: i.id, tabIndex: i.tabindex, class: Object.assign(Object.assign({}, getClassMap(i.cssClass)), { 'alert-radio-button': true, 'alert-tappable': true, 'alert-radio': true, 'ion-focusable': true, 'alert-radio-button-disabled': i.disabled || false }), role: \"radio\" }, h(\"div\", { class: \"alert-button-inner\" }, h(\"div\", { class: \"alert-radio-icon\" }, h(\"div\", { class: \"alert-radio-inner\" })), h(\"div\", { class: \"alert-radio-label\" }, i.label)))))));\n    }\n    renderInput() {\n        const inputs = this.processedInputs;\n        if (inputs.length === 0) {\n            return null;\n        }\n        return (h(\"div\", { class: \"alert-input-group\" }, inputs.map((i) => {\n            var _a, _b, _c, _d;\n            if (i.type === 'textarea') {\n                return (h(\"div\", { class: \"alert-input-wrapper\" }, h(\"textarea\", Object.assign({ placeholder: i.placeholder, value: i.value, id: i.id, tabIndex: i.tabindex }, i.attributes, { disabled: (_b = (_a = i.attributes) === null || _a === void 0 ? void 0 : _a.disabled) !== null && _b !== void 0 ? _b : i.disabled, class: inputClass(i), onInput: (e) => {\n                        var _a;\n                        i.value = e.target.value;\n                        if ((_a = i.attributes) === null || _a === void 0 ? void 0 : _a.onInput) {\n                            i.attributes.onInput(e);\n                        }\n                    } }))));\n            }\n            else {\n                return (h(\"div\", { class: \"alert-input-wrapper\" }, h(\"input\", Object.assign({ placeholder: i.placeholder, type: i.type, min: i.min, max: i.max, value: i.value, id: i.id, tabIndex: i.tabindex }, i.attributes, { disabled: (_d = (_c = i.attributes) === null || _c === void 0 ? void 0 : _c.disabled) !== null && _d !== void 0 ? _d : i.disabled, class: inputClass(i), onInput: (e) => {\n                        var _a;\n                        i.value = e.target.value;\n                        if ((_a = i.attributes) === null || _a === void 0 ? void 0 : _a.onInput) {\n                            i.attributes.onInput(e);\n                        }\n                    } }))));\n            }\n        })));\n    }\n    renderAlertButtons() {\n        const buttons = this.processedButtons;\n        const mode = getIonMode(this);\n        const alertButtonGroupClass = {\n            'alert-button-group': true,\n            'alert-button-group-vertical': buttons.length > 2,\n        };\n        return (h(\"div\", { class: alertButtonGroupClass }, buttons.map((button) => (h(\"button\", Object.assign({}, button.htmlAttributes, { type: \"button\", id: button.id, class: buttonClass(button), tabIndex: 0, onClick: () => this.buttonClick(button) }), h(\"span\", { class: \"alert-button-inner\" }, button.text), mode === 'md' && h(\"ion-ripple-effect\", null))))));\n    }\n    renderAlertMessage(msgId) {\n        const { customHTMLEnabled, message } = this;\n        if (customHTMLEnabled) {\n            return h(\"div\", { id: msgId, class: \"alert-message\", innerHTML: sanitizeDOMString(message) });\n        }\n        return (h(\"div\", { id: msgId, class: \"alert-message\" }, message));\n    }\n    render() {\n        const { overlayIndex, header, subHeader, message, htmlAttributes } = this;\n        const mode = getIonMode(this);\n        const hdrId = `alert-${overlayIndex}-hdr`;\n        const msgId = `alert-${overlayIndex}-msg`;\n        const subHdrId = `alert-${overlayIndex}-sub-hdr`;\n        const role = this.inputs.length > 0 || this.buttons.length > 0 ? 'alertdialog' : 'alert';\n        /**\n         * Use both the header and subHeader ids if they are defined.\n         * If only the header is defined, use the header id.\n         * If only the subHeader is defined, use the subHeader id.\n         * If neither are defined, do not set aria-labelledby.\n         */\n        const ariaLabelledBy = header && subHeader ? `${hdrId} ${subHdrId}` : header ? hdrId : subHeader ? subHdrId : null;\n        return (h(Host, { key: '6025440b9cd369d4fac89e7e4296c84a10a0b8e0', tabindex: \"-1\", style: {\n                zIndex: `${20000 + overlayIndex}`,\n            }, class: Object.assign(Object.assign({}, getClassMap(this.cssClass)), { [mode]: true, 'overlay-hidden': true, 'alert-translucent': this.translucent }), onIonAlertWillDismiss: this.dispatchCancelHandler, onIonBackdropTap: this.onBackdropTap }, h(\"ion-backdrop\", { key: '3cd5ca8b99cb95b11dd22ab41a820d841142896f', tappable: this.backdropDismiss }), h(\"div\", { key: '4cc62ae6e21424057d22aeef1e8fc77011e77cd5', tabindex: \"0\", \"aria-hidden\": \"true\" }), h(\"div\", Object.assign({ key: '364057a69f25aa88904df17bdcf7e5bf714e7830', class: \"alert-wrapper ion-overlay-wrapper\", role: role, \"aria-modal\": \"true\", \"aria-labelledby\": ariaLabelledBy, \"aria-describedby\": message !== undefined ? msgId : null, tabindex: \"0\", ref: (el) => (this.wrapperEl = el) }, htmlAttributes), h(\"div\", { key: '78694e3c0db2d408df3899fb1a90859bcc8d14cc', class: \"alert-head\" }, header && (h(\"h2\", { key: 'ec88ff3e4e1ea871b5975133fdcf4cac38b05e0f', id: hdrId, class: \"alert-title\" }, header)), subHeader && !header && (h(\"h2\", { key: '9b09bc8bb68af255ef8b7d22587acc946148e544', id: subHdrId, class: \"alert-sub-title\" }, subHeader)), subHeader && header && (h(\"h3\", { key: '99abe815f75d2df7f1b77c0df9f3436724fea76f', id: subHdrId, class: \"alert-sub-title\" }, subHeader))), this.renderAlertMessage(msgId), this.renderAlertInputs(), this.renderAlertButtons()), h(\"div\", { key: 'a43d0c22c0e46b1ef911f92ffeb253d7911b85f7', tabindex: \"0\", \"aria-hidden\": \"true\" })));\n    }\n    get el() { return this; }\n    static get watchers() { return {\n        \"isOpen\": [\"onIsOpenChange\"],\n        \"trigger\": [\"triggerChanged\"],\n        \"buttons\": [\"buttonsChanged\"],\n        \"inputs\": [\"inputsChanged\"]\n    }; }\n    static get style() { return {\n        ios: alertIosCss,\n        md: alertMdCss\n    }; }\n}, [34, \"ion-alert\", {\n        \"overlayIndex\": [2, \"overlay-index\"],\n        \"delegate\": [16],\n        \"hasController\": [4, \"has-controller\"],\n        \"keyboardClose\": [4, \"keyboard-close\"],\n        \"enterAnimation\": [16, \"enter-animation\"],\n        \"leaveAnimation\": [16, \"leave-animation\"],\n        \"cssClass\": [1, \"css-class\"],\n        \"header\": [1],\n        \"subHeader\": [1, \"sub-header\"],\n        \"message\": [1],\n        \"buttons\": [16],\n        \"inputs\": [1040],\n        \"backdropDismiss\": [4, \"backdrop-dismiss\"],\n        \"translucent\": [4],\n        \"animated\": [4],\n        \"htmlAttributes\": [16, \"html-attributes\"],\n        \"isOpen\": [4, \"is-open\"],\n        \"trigger\": [1],\n        \"present\": [64],\n        \"dismiss\": [64],\n        \"onDidDismiss\": [64],\n        \"onWillDismiss\": [64]\n    }, [[4, \"keydown\", \"onKeydown\"]], {\n        \"isOpen\": [\"onIsOpenChange\"],\n        \"trigger\": [\"triggerChanged\"],\n        \"buttons\": [\"buttonsChanged\"],\n        \"inputs\": [\"inputsChanged\"]\n    }]);\nconst inputClass = (input) => {\n    var _a, _b, _c;\n    return Object.assign(Object.assign({ 'alert-input': true, 'alert-input-disabled': ((_b = (_a = input.attributes) === null || _a === void 0 ? void 0 : _a.disabled) !== null && _b !== void 0 ? _b : input.disabled) || false }, getClassMap(input.cssClass)), getClassMap(input.attributes ? (_c = input.attributes.class) === null || _c === void 0 ? void 0 : _c.toString() : ''));\n};\nconst buttonClass = (button) => {\n    return Object.assign({ 'alert-button': true, 'ion-focusable': true, 'ion-activatable': true, [`alert-button-role-${button.role}`]: button.role !== undefined }, getClassMap(button.cssClass));\n};\nfunction defineCustomElement() {\n    if (typeof customElements === \"undefined\") {\n        return;\n    }\n    const components = [\"ion-alert\", \"ion-backdrop\", \"ion-ripple-effect\"];\n    components.forEach(tagName => { switch (tagName) {\n        case \"ion-alert\":\n            if (!customElements.get(tagName)) {\n                customElements.define(tagName, Alert);\n            }\n            break;\n        case \"ion-backdrop\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$2();\n            }\n            break;\n        case \"ion-ripple-effect\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$1();\n            }\n            break;\n    } });\n}\n\nexport { Alert as A, defineCustomElement as d };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { A as Alert, d as defineCustomElement$1 } from './alert.js';\n\nconst IonAlert = Alert;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonAlert, defineCustomElement };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { p as printIonWarning } from './index4.js';\n\n/**\n * Returns true if the selected day is equal to the reference day\n */\nconst isSameDay = (baseParts, compareParts) => {\n    return (baseParts.month === compareParts.month && baseParts.day === compareParts.day && baseParts.year === compareParts.year);\n};\n/**\n * Returns true is the selected day is before the reference day.\n */\nconst isBefore = (baseParts, compareParts) => {\n    return !!(baseParts.year < compareParts.year ||\n        (baseParts.year === compareParts.year && baseParts.month < compareParts.month) ||\n        (baseParts.year === compareParts.year &&\n            baseParts.month === compareParts.month &&\n            baseParts.day !== null &&\n            baseParts.day < compareParts.day));\n};\n/**\n * Returns true is the selected day is after the reference day.\n */\nconst isAfter = (baseParts, compareParts) => {\n    return !!(baseParts.year > compareParts.year ||\n        (baseParts.year === compareParts.year && baseParts.month > compareParts.month) ||\n        (baseParts.year === compareParts.year &&\n            baseParts.month === compareParts.month &&\n            baseParts.day !== null &&\n            baseParts.day > compareParts.day));\n};\nconst warnIfValueOutOfBounds = (value, min, max) => {\n    const valueArray = Array.isArray(value) ? value : [value];\n    for (const val of valueArray) {\n        if ((min !== undefined && isBefore(val, min)) || (max !== undefined && isAfter(val, max))) {\n            printIonWarning('[ion-datetime] - The value provided to ion-datetime is out of bounds.\\n\\n' +\n                `Min: ${JSON.stringify(min)}\\n` +\n                `Max: ${JSON.stringify(max)}\\n` +\n                `Value: ${JSON.stringify(value)}`);\n            break;\n        }\n    }\n};\n\n/**\n * Determines if given year is a\n * leap year. Returns `true` if year\n * is a leap year. Returns `false`\n * otherwise.\n */\nconst isLeapYear = (year) => {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n};\n/**\n * Determines the hour cycle for a user.\n * If the hour cycle is explicitly defined, just use that.\n * Otherwise, we try to derive it from either the specified\n * locale extension tags or from Intl.DateTimeFormat directly.\n */\nconst getHourCycle = (locale, hourCycle) => {\n    /**\n     * If developer has explicitly enabled 24-hour time\n     * then return early and do not look at the system default.\n     */\n    if (hourCycle !== undefined) {\n        return hourCycle;\n    }\n    /**\n     * If hourCycle was not specified, check the locale\n     * that is set on the user's device. We first check the\n     * Intl.DateTimeFormat hourCycle option as developers can encode this\n     * option into the locale string. Example: `en-US-u-hc-h23`\n     */\n    const formatted = new Intl.DateTimeFormat(locale, { hour: 'numeric' });\n    const options = formatted.resolvedOptions();\n    if (options.hourCycle !== undefined) {\n        return options.hourCycle;\n    }\n    /**\n     * If hourCycle is not specified (either through lack\n     * of browser support or locale information) then fall\n     * back to this slower hourCycle check.\n     */\n    const date = new Date('5/18/2021 00:00');\n    const parts = formatted.formatToParts(date);\n    const hour = parts.find((p) => p.type === 'hour');\n    if (!hour) {\n        throw new Error('Hour value not found from DateTimeFormat');\n    }\n    /**\n     * Midnight for h11 starts at 0:00am\n     * Midnight for h12 starts at 12:00am\n     * Midnight for h23 starts at 00:00\n     * Midnight for h24 starts at 24:00\n     */\n    switch (hour.value) {\n        case '0':\n            return 'h11';\n        case '12':\n            return 'h12';\n        case '00':\n            return 'h23';\n        case '24':\n            return 'h24';\n        default:\n            throw new Error(`Invalid hour cycle \"${hourCycle}\"`);\n    }\n};\n/**\n * Determine if the hour cycle uses a 24-hour format.\n * Returns true for h23 and h24. Returns false otherwise.\n * If you don't know the hourCycle, use getHourCycle above\n * and pass the result into this function.\n */\nconst is24Hour = (hourCycle) => {\n    return hourCycle === 'h23' || hourCycle === 'h24';\n};\n/**\n * Given a date object, returns the number\n * of days in that month.\n * Month value begin at 1, not 0.\n * i.e. January = month 1.\n */\nconst getNumDaysInMonth = (month, year) => {\n    return month === 4 || month === 6 || month === 9 || month === 11\n        ? 30\n        : month === 2\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31;\n};\n/**\n * Certain locales display month then year while\n * others display year then month.\n * We can use Intl.DateTimeFormat to determine\n * the ordering for each locale.\n * The formatOptions param can be used to customize\n * which pieces of a date to compare against the month\n * with. For example, some locales render dd/mm/yyyy\n * while others render mm/dd/yyyy. This function can be\n * used for variations of the same \"month first\" check.\n */\nconst isMonthFirstLocale = (locale, formatOptions = {\n    month: 'numeric',\n    year: 'numeric',\n}) => {\n    /**\n     * By setting month and year we guarantee that only\n     * month, year, and literal (slashes '/', for example)\n     * values are included in the formatToParts results.\n     *\n     * The ordering of the parts will be determined by\n     * the locale. So if the month is the first value,\n     * then we know month should be shown first. If the\n     * year is the first value, then we know year should be shown first.\n     *\n     * This ordering can be controlled by customizing the locale property.\n     */\n    const parts = new Intl.DateTimeFormat(locale, formatOptions).formatToParts(new Date());\n    return parts[0].type === 'month';\n};\n/**\n * Determines if the given locale formats the day period (am/pm) to the\n * left or right of the hour.\n * @param locale The locale to check.\n * @returns `true` if the locale formats the day period to the left of the hour.\n */\nconst isLocaleDayPeriodRTL = (locale) => {\n    const parts = new Intl.DateTimeFormat(locale, { hour: 'numeric' }).formatToParts(new Date());\n    return parts[0].type === 'dayPeriod';\n};\n\nconst ISO_8601_REGEXP = \n// eslint-disable-next-line no-useless-escape\n/^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\n// eslint-disable-next-line no-useless-escape\nconst TIME_REGEXP = /^((\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\n/**\n * Use to convert a string of comma separated numbers or\n * an array of numbers, and clean up any user input\n */\nconst convertToArrayOfNumbers = (input) => {\n    if (input === undefined) {\n        return;\n    }\n    let processedInput = input;\n    if (typeof input === 'string') {\n        // convert the string to an array of strings\n        // auto remove any whitespace and [] characters\n        processedInput = input.replace(/\\[|\\]|\\s/g, '').split(',');\n    }\n    let values;\n    if (Array.isArray(processedInput)) {\n        // ensure each value is an actual number in the returned array\n        values = processedInput.map((num) => parseInt(num, 10)).filter(isFinite);\n    }\n    else {\n        values = [processedInput];\n    }\n    return values;\n};\n/**\n * Extracts date information\n * from a .calendar-day element\n * into DatetimeParts.\n */\nconst getPartsFromCalendarDay = (el) => {\n    return {\n        month: parseInt(el.getAttribute('data-month'), 10),\n        day: parseInt(el.getAttribute('data-day'), 10),\n        year: parseInt(el.getAttribute('data-year'), 10),\n        dayOfWeek: parseInt(el.getAttribute('data-day-of-week'), 10),\n    };\n};\nfunction parseDate(val) {\n    if (Array.isArray(val)) {\n        const parsedArray = [];\n        for (const valStr of val) {\n            const parsedVal = parseDate(valStr);\n            /**\n             * If any of the values weren't parsed correctly, consider\n             * the entire batch incorrect. This simplifies the type\n             * signatures by having \"undefined\" be a general error case\n             * instead of returning (Datetime | undefined)[], which is\n             * harder for TS to perform type narrowing on.\n             */\n            if (!parsedVal) {\n                return undefined;\n            }\n            parsedArray.push(parsedVal);\n        }\n        return parsedArray;\n    }\n    // manually parse IS0 cuz Date.parse cannot be trusted\n    // ISO 8601 format: 1994-12-15T13:47:20Z\n    let parse = null;\n    if (val != null && val !== '') {\n        // try parsing for just time first, HH:MM\n        parse = TIME_REGEXP.exec(val);\n        if (parse) {\n            // adjust the array so it fits nicely with the datetime parse\n            parse.unshift(undefined, undefined);\n            parse[2] = parse[3] = undefined;\n        }\n        else {\n            // try parsing for full ISO datetime\n            parse = ISO_8601_REGEXP.exec(val);\n        }\n    }\n    if (parse === null) {\n        // wasn't able to parse the ISO datetime\n        printIonWarning(`[ion-datetime] - Unable to parse date string: ${val}. Please provide a valid ISO 8601 datetime string.`);\n        return undefined;\n    }\n    // ensure all the parse values exist with at least 0\n    for (let i = 1; i < 8; i++) {\n        parse[i] = parse[i] !== undefined ? parseInt(parse[i], 10) : undefined;\n    }\n    // can also get second and millisecond from parse[6] and parse[7] if needed\n    return {\n        year: parse[1],\n        month: parse[2],\n        day: parse[3],\n        hour: parse[4],\n        minute: parse[5],\n        ampm: parse[4] < 12 ? 'am' : 'pm',\n    };\n}\nconst clampDate = (dateParts, minParts, maxParts) => {\n    if (minParts && isBefore(dateParts, minParts)) {\n        return minParts;\n    }\n    else if (maxParts && isAfter(dateParts, maxParts)) {\n        return maxParts;\n    }\n    return dateParts;\n};\n/**\n * Parses an hour and returns if the value is in the morning (am) or afternoon (pm).\n * @param hour The hour to format, should be 0-23\n * @returns `pm` if the hour is greater than or equal to 12, `am` if less than 12.\n */\nconst parseAmPm = (hour) => {\n    return hour >= 12 ? 'pm' : 'am';\n};\n/**\n * Takes a max date string and creates a DatetimeParts\n * object, filling in any missing information.\n * For example, max=\"2012\" would fill in the missing\n * month, day, hour, and minute information.\n */\nconst parseMaxParts = (max, todayParts) => {\n    const result = parseDate(max);\n    /**\n     * If min was not a valid date then return undefined.\n     */\n    if (result === undefined) {\n        return;\n    }\n    const { month, day, year, hour, minute } = result;\n    /**\n     * When passing in `max` or `min`, developers\n     * can pass in any ISO-8601 string. This means\n     * that not all of the date/time fields are defined.\n     * For example, passing max=\"2012\" is valid even though\n     * there is no month, day, hour, or minute data.\n     * However, all of this data is required when clamping the date\n     * so that the correct initial value can be selected. As a result,\n     * we need to fill in any omitted data with the min or max values.\n     */\n    const yearValue = year !== null && year !== void 0 ? year : todayParts.year;\n    const monthValue = month !== null && month !== void 0 ? month : 12;\n    return {\n        month: monthValue,\n        day: day !== null && day !== void 0 ? day : getNumDaysInMonth(monthValue, yearValue),\n        /**\n         * Passing in \"HH:mm\" is a valid ISO-8601\n         * string, so we just default to the current year\n         * in this case.\n         */\n        year: yearValue,\n        hour: hour !== null && hour !== void 0 ? hour : 23,\n        minute: minute !== null && minute !== void 0 ? minute : 59,\n    };\n};\n/**\n * Takes a min date string and creates a DatetimeParts\n * object, filling in any missing information.\n * For example, min=\"2012\" would fill in the missing\n * month, day, hour, and minute information.\n */\nconst parseMinParts = (min, todayParts) => {\n    const result = parseDate(min);\n    /**\n     * If min was not a valid date then return undefined.\n     */\n    if (result === undefined) {\n        return;\n    }\n    const { month, day, year, hour, minute } = result;\n    /**\n     * When passing in `max` or `min`, developers\n     * can pass in any ISO-8601 string. This means\n     * that not all of the date/time fields are defined.\n     * For example, passing max=\"2012\" is valid even though\n     * there is no month, day, hour, or minute data.\n     * However, all of this data is required when clamping the date\n     * so that the correct initial value can be selected. As a result,\n     * we need to fill in any omitted data with the min or max values.\n     */\n    return {\n        month: month !== null && month !== void 0 ? month : 1,\n        day: day !== null && day !== void 0 ? day : 1,\n        /**\n         * Passing in \"HH:mm\" is a valid ISO-8601\n         * string, so we just default to the current year\n         * in this case.\n         */\n        year: year !== null && year !== void 0 ? year : todayParts.year,\n        hour: hour !== null && hour !== void 0 ? hour : 0,\n        minute: minute !== null && minute !== void 0 ? minute : 0,\n    };\n};\n\nconst twoDigit = (val) => {\n    return ('0' + (val !== undefined ? Math.abs(val) : '0')).slice(-2);\n};\nconst fourDigit = (val) => {\n    return ('000' + (val !== undefined ? Math.abs(val) : '0')).slice(-4);\n};\nfunction convertDataToISO(data) {\n    if (Array.isArray(data)) {\n        return data.map((parts) => convertDataToISO(parts));\n    }\n    // https://www.w3.org/TR/NOTE-datetime\n    let rtn = '';\n    if (data.year !== undefined) {\n        // YYYY\n        rtn = fourDigit(data.year);\n        if (data.month !== undefined) {\n            // YYYY-MM\n            rtn += '-' + twoDigit(data.month);\n            if (data.day !== undefined) {\n                // YYYY-MM-DD\n                rtn += '-' + twoDigit(data.day);\n                if (data.hour !== undefined) {\n                    // YYYY-MM-DDTHH:mm:SS\n                    rtn += `T${twoDigit(data.hour)}:${twoDigit(data.minute)}:00`;\n                }\n            }\n        }\n    }\n    else if (data.hour !== undefined) {\n        // HH:mm\n        rtn = twoDigit(data.hour) + ':' + twoDigit(data.minute);\n    }\n    return rtn;\n}\n/**\n * Converts an 12 hour value to 24 hours.\n */\nconst convert12HourTo24Hour = (hour, ampm) => {\n    if (ampm === undefined) {\n        return hour;\n    }\n    /**\n     * If AM and 12am\n     * then return 00:00.\n     * Otherwise just return\n     * the hour since it is\n     * already in 24 hour format.\n     */\n    if (ampm === 'am') {\n        if (hour === 12) {\n            return 0;\n        }\n        return hour;\n    }\n    /**\n     * If PM and 12pm\n     * just return 12:00\n     * since it is already\n     * in 24 hour format.\n     * Otherwise add 12 hours\n     * to the time.\n     */\n    if (hour === 12) {\n        return 12;\n    }\n    return hour + 12;\n};\nconst getStartOfWeek = (refParts) => {\n    const { dayOfWeek } = refParts;\n    if (dayOfWeek === null || dayOfWeek === undefined) {\n        throw new Error('No day of week provided');\n    }\n    return subtractDays(refParts, dayOfWeek);\n};\nconst getEndOfWeek = (refParts) => {\n    const { dayOfWeek } = refParts;\n    if (dayOfWeek === null || dayOfWeek === undefined) {\n        throw new Error('No day of week provided');\n    }\n    return addDays(refParts, 6 - dayOfWeek);\n};\nconst getNextDay = (refParts) => {\n    return addDays(refParts, 1);\n};\nconst getPreviousDay = (refParts) => {\n    return subtractDays(refParts, 1);\n};\nconst getPreviousWeek = (refParts) => {\n    return subtractDays(refParts, 7);\n};\nconst getNextWeek = (refParts) => {\n    return addDays(refParts, 7);\n};\n/**\n * Given datetime parts, subtract\n * numDays from the date.\n * Returns a new DatetimeParts object\n * Currently can only go backward at most 1 month.\n */\nconst subtractDays = (refParts, numDays) => {\n    const { month, day, year } = refParts;\n    if (day === null) {\n        throw new Error('No day provided');\n    }\n    const workingParts = {\n        month,\n        day,\n        year,\n    };\n    workingParts.day = day - numDays;\n    /**\n     * If wrapping to previous month\n     * update days and decrement month\n     */\n    if (workingParts.day < 1) {\n        workingParts.month -= 1;\n    }\n    /**\n     * If moving to previous year, reset\n     * month to December and decrement year\n     */\n    if (workingParts.month < 1) {\n        workingParts.month = 12;\n        workingParts.year -= 1;\n    }\n    /**\n     * Determine how many days are in the current\n     * month\n     */\n    if (workingParts.day < 1) {\n        const daysInMonth = getNumDaysInMonth(workingParts.month, workingParts.year);\n        /**\n         * Take num days in month and add the\n         * number of underflow days. This number will\n         * be negative.\n         * Example: 1 week before Jan 2, 2021 is\n         * December 26, 2021 so:\n         * 2 - 7 = -5\n         * 31 + (-5) = 26\n         */\n        workingParts.day = daysInMonth + workingParts.day;\n    }\n    return workingParts;\n};\n/**\n * Given datetime parts, add\n * numDays to the date.\n * Returns a new DatetimeParts object\n * Currently can only go forward at most 1 month.\n */\nconst addDays = (refParts, numDays) => {\n    const { month, day, year } = refParts;\n    if (day === null) {\n        throw new Error('No day provided');\n    }\n    const workingParts = {\n        month,\n        day,\n        year,\n    };\n    const daysInMonth = getNumDaysInMonth(month, year);\n    workingParts.day = day + numDays;\n    /**\n     * If wrapping to next month\n     * update days and increment month\n     */\n    if (workingParts.day > daysInMonth) {\n        workingParts.day -= daysInMonth;\n        workingParts.month += 1;\n    }\n    /**\n     * If moving to next year, reset\n     * month to January and increment year\n     */\n    if (workingParts.month > 12) {\n        workingParts.month = 1;\n        workingParts.year += 1;\n    }\n    return workingParts;\n};\n/**\n * Given DatetimeParts, generate the previous month.\n */\nconst getPreviousMonth = (refParts) => {\n    /**\n     * If current month is January, wrap backwards\n     *  to December of the previous year.\n     */\n    const month = refParts.month === 1 ? 12 : refParts.month - 1;\n    const year = refParts.month === 1 ? refParts.year - 1 : refParts.year;\n    const numDaysInMonth = getNumDaysInMonth(month, year);\n    const day = numDaysInMonth < refParts.day ? numDaysInMonth : refParts.day;\n    return { month, year, day };\n};\n/**\n * Given DatetimeParts, generate the next month.\n */\nconst getNextMonth = (refParts) => {\n    /**\n     * If current month is December, wrap forwards\n     *  to January of the next year.\n     */\n    const month = refParts.month === 12 ? 1 : refParts.month + 1;\n    const year = refParts.month === 12 ? refParts.year + 1 : refParts.year;\n    const numDaysInMonth = getNumDaysInMonth(month, year);\n    const day = numDaysInMonth < refParts.day ? numDaysInMonth : refParts.day;\n    return { month, year, day };\n};\nconst changeYear = (refParts, yearDelta) => {\n    const month = refParts.month;\n    const year = refParts.year + yearDelta;\n    const numDaysInMonth = getNumDaysInMonth(month, year);\n    const day = numDaysInMonth < refParts.day ? numDaysInMonth : refParts.day;\n    return { month, year, day };\n};\n/**\n * Given DatetimeParts, generate the previous year.\n */\nconst getPreviousYear = (refParts) => {\n    return changeYear(refParts, -1);\n};\n/**\n * Given DatetimeParts, generate the next year.\n */\nconst getNextYear = (refParts) => {\n    return changeYear(refParts, 1);\n};\n/**\n * If PM, then internal value should\n * be converted to 24-hr time.\n * Does not apply when public\n * values are already 24-hr time.\n */\nconst getInternalHourValue = (hour, use24Hour, ampm) => {\n    if (use24Hour) {\n        return hour;\n    }\n    return convert12HourTo24Hour(hour, ampm);\n};\n/**\n * Unless otherwise stated, all month values are\n * 1 indexed instead of the typical 0 index in JS Date.\n * Example:\n *   January = Month 0 when using JS Date\n *   January = Month 1 when using this datetime util\n */\n/**\n * Given the current datetime parts and a new AM/PM value\n * calculate what the hour should be in 24-hour time format.\n * Used when toggling the AM/PM segment since we store our hours\n * in 24-hour time format internally.\n */\nconst calculateHourFromAMPM = (currentParts, newAMPM) => {\n    const { ampm: currentAMPM, hour } = currentParts;\n    let newHour = hour;\n    /**\n     * If going from AM --> PM, need to update the\n     *\n     */\n    if (currentAMPM === 'am' && newAMPM === 'pm') {\n        newHour = convert12HourTo24Hour(newHour, 'pm');\n        /**\n         * If going from PM --> AM\n         */\n    }\n    else if (currentAMPM === 'pm' && newAMPM === 'am') {\n        newHour = Math.abs(newHour - 12);\n    }\n    return newHour;\n};\n/**\n * Updates parts to ensure that month and day\n * values are valid. For days that do not exist,\n * or are outside the min/max bounds, the closest\n * valid day is used.\n */\nconst validateParts = (parts, minParts, maxParts) => {\n    const { month, day, year } = parts;\n    const partsCopy = clampDate(Object.assign({}, parts), minParts, maxParts);\n    const numDays = getNumDaysInMonth(month, year);\n    /**\n     * If the max number of days\n     * is greater than the day we want\n     * to set, update the DatetimeParts\n     * day field to be the max days.\n     */\n    if (day !== null && numDays < day) {\n        partsCopy.day = numDays;\n    }\n    /**\n     * If value is same day as min day,\n     * make sure the time value is in bounds.\n     */\n    if (minParts !== undefined && isSameDay(partsCopy, minParts)) {\n        /**\n         * If the hour is out of bounds,\n         * update both the hour and minute.\n         * This is done so that the new time\n         * is closest to what the user selected.\n         */\n        if (partsCopy.hour !== undefined && minParts.hour !== undefined) {\n            if (partsCopy.hour < minParts.hour) {\n                partsCopy.hour = minParts.hour;\n                partsCopy.minute = minParts.minute;\n                /**\n                 * If only the minute is out of bounds,\n                 * set it to the min minute.\n                 */\n            }\n            else if (partsCopy.hour === minParts.hour &&\n                partsCopy.minute !== undefined &&\n                minParts.minute !== undefined &&\n                partsCopy.minute < minParts.minute) {\n                partsCopy.minute = minParts.minute;\n            }\n        }\n    }\n    /**\n     * If value is same day as max day,\n     * make sure the time value is in bounds.\n     */\n    if (maxParts !== undefined && isSameDay(parts, maxParts)) {\n        /**\n         * If the hour is out of bounds,\n         * update both the hour and minute.\n         * This is done so that the new time\n         * is closest to what the user selected.\n         */\n        if (partsCopy.hour !== undefined && maxParts.hour !== undefined) {\n            if (partsCopy.hour > maxParts.hour) {\n                partsCopy.hour = maxParts.hour;\n                partsCopy.minute = maxParts.minute;\n                /**\n                 * If only the minute is out of bounds,\n                 * set it to the max minute.\n                 */\n            }\n            else if (partsCopy.hour === maxParts.hour &&\n                partsCopy.minute !== undefined &&\n                maxParts.minute !== undefined &&\n                partsCopy.minute > maxParts.minute) {\n                partsCopy.minute = maxParts.minute;\n            }\n        }\n    }\n    return partsCopy;\n};\n/**\n * Returns the closest date to refParts\n * that also meets the constraints of\n * the *Values params.\n */\nconst getClosestValidDate = ({ refParts, monthValues, dayValues, yearValues, hourValues, minuteValues, minParts, maxParts, }) => {\n    const { hour, minute, day, month, year } = refParts;\n    const copyParts = Object.assign(Object.assign({}, refParts), { dayOfWeek: undefined });\n    if (yearValues !== undefined) {\n        // Filters out years that are out of the min/max bounds\n        const filteredYears = yearValues.filter((year) => {\n            if (minParts !== undefined && year < minParts.year) {\n                return false;\n            }\n            if (maxParts !== undefined && year > maxParts.year) {\n                return false;\n            }\n            return true;\n        });\n        copyParts.year = findClosestValue(year, filteredYears);\n    }\n    if (monthValues !== undefined) {\n        // Filters out months that are out of the min/max bounds\n        const filteredMonths = monthValues.filter((month) => {\n            if (minParts !== undefined && copyParts.year === minParts.year && month < minParts.month) {\n                return false;\n            }\n            if (maxParts !== undefined && copyParts.year === maxParts.year && month > maxParts.month) {\n                return false;\n            }\n            return true;\n        });\n        copyParts.month = findClosestValue(month, filteredMonths);\n    }\n    // Day is nullable but cannot be undefined\n    if (day !== null && dayValues !== undefined) {\n        // Filters out days that are out of the min/max bounds\n        const filteredDays = dayValues.filter((day) => {\n            if (minParts !== undefined && isBefore(Object.assign(Object.assign({}, copyParts), { day }), minParts)) {\n                return false;\n            }\n            if (maxParts !== undefined && isAfter(Object.assign(Object.assign({}, copyParts), { day }), maxParts)) {\n                return false;\n            }\n            return true;\n        });\n        copyParts.day = findClosestValue(day, filteredDays);\n    }\n    if (hour !== undefined && hourValues !== undefined) {\n        // Filters out hours that are out of the min/max bounds\n        const filteredHours = hourValues.filter((hour) => {\n            if ((minParts === null || minParts === void 0 ? void 0 : minParts.hour) !== undefined && isSameDay(copyParts, minParts) && hour < minParts.hour) {\n                return false;\n            }\n            if ((maxParts === null || maxParts === void 0 ? void 0 : maxParts.hour) !== undefined && isSameDay(copyParts, maxParts) && hour > maxParts.hour) {\n                return false;\n            }\n            return true;\n        });\n        copyParts.hour = findClosestValue(hour, filteredHours);\n        copyParts.ampm = parseAmPm(copyParts.hour);\n    }\n    if (minute !== undefined && minuteValues !== undefined) {\n        // Filters out minutes that are out of the min/max bounds\n        const filteredMinutes = minuteValues.filter((minute) => {\n            if ((minParts === null || minParts === void 0 ? void 0 : minParts.minute) !== undefined &&\n                isSameDay(copyParts, minParts) &&\n                copyParts.hour === minParts.hour &&\n                minute < minParts.minute) {\n                return false;\n            }\n            if ((maxParts === null || maxParts === void 0 ? void 0 : maxParts.minute) !== undefined &&\n                isSameDay(copyParts, maxParts) &&\n                copyParts.hour === maxParts.hour &&\n                minute > maxParts.minute) {\n                return false;\n            }\n            return true;\n        });\n        copyParts.minute = findClosestValue(minute, filteredMinutes);\n    }\n    return copyParts;\n};\n/**\n * Finds the value in \"values\" that is\n * numerically closest to \"reference\".\n * This function assumes that \"values\" is\n * already sorted in ascending order.\n * @param reference The reference number to use\n * when finding the closest value\n * @param values The allowed values that will be\n * searched to find the closest value to \"reference\"\n */\nconst findClosestValue = (reference, values) => {\n    let closestValue = values[0];\n    let rank = Math.abs(closestValue - reference);\n    for (let i = 1; i < values.length; i++) {\n        const value = values[i];\n        /**\n         * This code prioritizes the first\n         * closest result. Given two values\n         * with the same distance from reference,\n         * this code will prioritize the smaller of\n         * the two values.\n         */\n        const valueRank = Math.abs(value - reference);\n        if (valueRank < rank) {\n            closestValue = value;\n            rank = valueRank;\n        }\n    }\n    return closestValue;\n};\n\nconst getFormattedDayPeriod = (dayPeriod) => {\n    if (dayPeriod === undefined) {\n        return '';\n    }\n    return dayPeriod.toUpperCase();\n};\n/**\n * Including time zone options may lead to the rendered text showing a\n * different time from what was selected in the Datetime, which could cause\n * confusion.\n */\nconst stripTimeZone = (formatOptions) => {\n    return Object.assign(Object.assign({}, formatOptions), { \n        /**\n         * Setting the time zone to UTC ensures that the value shown is always the\n         * same as what was selected and safeguards against older Safari bugs with\n         * Intl.DateTimeFormat.\n         */\n        timeZone: 'UTC', \n        /**\n         * We do not want to display the time zone name\n         */\n        timeZoneName: undefined });\n};\nconst getLocalizedTime = (locale, refParts, hourCycle, formatOptions = { hour: 'numeric', minute: 'numeric' }) => {\n    const timeParts = {\n        hour: refParts.hour,\n        minute: refParts.minute,\n    };\n    if (timeParts.hour === undefined || timeParts.minute === undefined) {\n        return 'Invalid Time';\n    }\n    return new Intl.DateTimeFormat(locale, Object.assign(Object.assign({}, stripTimeZone(formatOptions)), { \n        /**\n         * We use hourCycle here instead of hour12 due to:\n         * https://bugs.chromium.org/p/chromium/issues/detail?id=1347316&q=hour12&can=2\n         */\n        hourCycle })).format(new Date(convertDataToISO(Object.assign({ \n        /**\n         * JS uses a simplified ISO 8601 format which allows for\n         * date-only formats and date-time formats, but not\n         * time-only formats: https://tc39.es/ecma262/#sec-date-time-string-format\n         * As a result, developers who only pass a time will get\n         * an \"Invalid Date\" error. To account for this, we make sure that\n         * year/day/month values are set when passing to new Date().\n         * The Intl.DateTimeFormat call above only uses the hour/minute\n         * values, so passing these date values should have no impact\n         * on the time output.\n         */\n        year: 2023, day: 1, month: 1 }, timeParts)) + 'Z'));\n};\n/**\n * Adds padding to a time value so\n * that it is always 2 digits.\n */\nconst addTimePadding = (value) => {\n    const valueToString = value.toString();\n    if (valueToString.length > 1) {\n        return valueToString;\n    }\n    return `0${valueToString}`;\n};\n/**\n * Formats 24 hour times so that\n * it always has 2 digits. For\n * 12 hour times it ensures that\n * hour 0 is formatted as '12'.\n */\nconst getFormattedHour = (hour, hourCycle) => {\n    /**\n     * Midnight for h11 starts at 0:00am\n     * Midnight for h12 starts at 12:00am\n     * Midnight for h23 starts at 00:00\n     * Midnight for h24 starts at 24:00\n     */\n    if (hour === 0) {\n        switch (hourCycle) {\n            case 'h11':\n                return '0';\n            case 'h12':\n                return '12';\n            case 'h23':\n                return '00';\n            case 'h24':\n                return '24';\n            default:\n                throw new Error(`Invalid hour cycle \"${hourCycle}\"`);\n        }\n    }\n    const use24Hour = is24Hour(hourCycle);\n    /**\n     * h23 and h24 use 24 hour times.\n     */\n    if (use24Hour) {\n        return addTimePadding(hour);\n    }\n    return hour.toString();\n};\n/**\n * Generates an aria-label to be read by screen readers\n * given a local, a date, and whether or not that date is\n * today's date.\n */\nconst generateDayAriaLabel = (locale, today, refParts) => {\n    if (refParts.day === null) {\n        return null;\n    }\n    /**\n     * MM/DD/YYYY will return midnight in the user's timezone.\n     */\n    const date = getNormalizedDate(refParts);\n    const labelString = new Intl.DateTimeFormat(locale, {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric',\n        timeZone: 'UTC',\n    }).format(date);\n    /**\n     * If date is today, prepend \"Today\" so screen readers indicate\n     * that the date is today.\n     */\n    return today ? `Today, ${labelString}` : labelString;\n};\n/**\n * Given a locale and a date object,\n * return a formatted string that includes\n * the month name and full year.\n * Example: May 2021\n */\nconst getMonthAndYear = (locale, refParts) => {\n    const date = getNormalizedDate(refParts);\n    return new Intl.DateTimeFormat(locale, { month: 'long', year: 'numeric', timeZone: 'UTC' }).format(date);\n};\n/**\n * Given a locale and a date object,\n * return a formatted string that includes\n * the numeric day.\n * Note: Some languages will add literal characters\n * to the end. This function removes those literals.\n * Example: 29\n */\nconst getDay = (locale, refParts) => {\n    return getLocalizedDateTimeParts(locale, refParts, { day: 'numeric' }).find((obj) => obj.type === 'day').value;\n};\n/**\n * Given a locale and a date object,\n * return a formatted string that includes\n * the numeric year.\n * Example: 2022\n */\nconst getYear = (locale, refParts) => {\n    return getLocalizedDateTime(locale, refParts, { year: 'numeric' });\n};\n/**\n * Given reference parts, return a JS Date object\n * with a normalized time.\n */\nconst getNormalizedDate = (refParts) => {\n    var _a, _b, _c;\n    const timeString = refParts.hour !== undefined && refParts.minute !== undefined ? ` ${refParts.hour}:${refParts.minute}` : '';\n    /**\n     * We use / notation here for the date\n     * so we do not need to do extra work and pad values with zeroes.\n     * Values such as YYYY-MM are still valid, so\n     * we add fallback values so we still get\n     * a valid date otherwise we will pass in a string\n     * like \"//2023\". Some browsers, such as Chrome, will\n     * account for this and still return a valid date. However,\n     * this is not a consistent behavior across all browsers.\n     */\n    return new Date(`${(_a = refParts.month) !== null && _a !== void 0 ? _a : 1}/${(_b = refParts.day) !== null && _b !== void 0 ? _b : 1}/${(_c = refParts.year) !== null && _c !== void 0 ? _c : 2023}${timeString} GMT+0000`);\n};\n/**\n * Given a locale, DatetimeParts, and options\n * format the DatetimeParts according to the options\n * and locale combination. This returns a string. If\n * you want an array of the individual pieces\n * that make up the localized date string, use\n * getLocalizedDateTimeParts.\n */\nconst getLocalizedDateTime = (locale, refParts, options) => {\n    const date = getNormalizedDate(refParts);\n    return getDateTimeFormat(locale, stripTimeZone(options)).format(date);\n};\n/**\n * Given a locale, DatetimeParts, and options\n * format the DatetimeParts according to the options\n * and locale combination. This returns an array of\n * each piece of the date.\n */\nconst getLocalizedDateTimeParts = (locale, refParts, options) => {\n    const date = getNormalizedDate(refParts);\n    return getDateTimeFormat(locale, options).formatToParts(date);\n};\n/**\n * Wrapper function for Intl.DateTimeFormat.\n * Allows developers to apply an allowed format to DatetimeParts.\n * This function also has built in safeguards for older browser bugs\n * with Intl.DateTimeFormat.\n */\nconst getDateTimeFormat = (locale, options) => {\n    return new Intl.DateTimeFormat(locale, Object.assign(Object.assign({}, options), { timeZone: 'UTC' }));\n};\n/**\n * Gets a localized version of \"Today\"\n * Falls back to \"Today\" in English for\n * browsers that do not support RelativeTimeFormat.\n */\nconst getTodayLabel = (locale) => {\n    if ('RelativeTimeFormat' in Intl) {\n        const label = new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(0, 'day');\n        return label.charAt(0).toUpperCase() + label.slice(1);\n    }\n    else {\n        return 'Today';\n    }\n};\n/**\n * When calling toISOString(), the browser\n * will convert the date to UTC time by either adding\n * or subtracting the time zone offset.\n * To work around this, we need to either add\n * or subtract the time zone offset to the Date\n * object prior to calling toISOString().\n * This allows us to get an ISO string\n * that is in the user's time zone.\n *\n * Example:\n * Time zone offset is 240\n * Meaning: The browser needs to add 240 minutes\n * to the Date object to get UTC time.\n * What Ionic does: We subtract 240 minutes\n * from the Date object. The browser then adds\n * 240 minutes in toISOString(). The result\n * is a time that is in the user's time zone\n * and not UTC.\n *\n * Note: Some timezones include minute adjustments\n * such as 30 or 45 minutes. This is why we use setMinutes\n * instead of setHours.\n * Example: India Standard Time\n * Timezone offset: -330 = -5.5 hours.\n *\n * List of timezones with 30 and 45 minute timezones:\n * https://www.timeanddate.com/time/time-zones-interesting.html\n */\nconst removeDateTzOffset = (date) => {\n    const tzOffset = date.getTimezoneOffset();\n    date.setMinutes(date.getMinutes() - tzOffset);\n    return date;\n};\nconst DATE_AM = removeDateTzOffset(new Date('2022T01:00'));\nconst DATE_PM = removeDateTzOffset(new Date('2022T13:00'));\n/**\n * Formats the locale's string representation of the day period (am/pm) for a given\n * ref parts day period.\n *\n * @param locale The locale to format the day period in.\n * @param value The date string, in ISO format.\n * @returns The localized day period (am/pm) representation of the given value.\n */\nconst getLocalizedDayPeriod = (locale, dayPeriod) => {\n    const date = dayPeriod === 'am' ? DATE_AM : DATE_PM;\n    const localizedDayPeriod = new Intl.DateTimeFormat(locale, {\n        hour: 'numeric',\n        timeZone: 'UTC',\n    })\n        .formatToParts(date)\n        .find((part) => part.type === 'dayPeriod');\n    if (localizedDayPeriod) {\n        return localizedDayPeriod.value;\n    }\n    return getFormattedDayPeriod(dayPeriod);\n};\n/**\n * Formats the datetime's value to a string, for use in the native input.\n *\n * @param value The value to format, either an ISO string or an array thereof.\n */\nconst formatValue = (value) => {\n    return Array.isArray(value) ? value.join(',') : value;\n};\n\n/**\n * Returns the current date as\n * an ISO string in the user's\n * time zone.\n */\nconst getToday = () => {\n    /**\n     * ion-datetime intentionally does not\n     * parse time zones/do automatic time zone\n     * conversion when accepting user input.\n     * However when we get today's date string,\n     * we want it formatted relative to the user's\n     * time zone.\n     *\n     * When calling toISOString(), the browser\n     * will convert the date to UTC time by either adding\n     * or subtracting the time zone offset.\n     * To work around this, we need to either add\n     * or subtract the time zone offset to the Date\n     * object prior to calling toISOString().\n     * This allows us to get an ISO string\n     * that is in the user's time zone.\n     */\n    return removeDateTzOffset(new Date()).toISOString();\n};\nconst minutes = [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\n    32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n];\n// h11 hour system uses 0-11. Midnight starts at 0:00am.\nconst hour11 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n// h12 hour system uses 0-12. Midnight starts at 12:00am.\nconst hour12 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\n// h23 hour system uses 0-23. Midnight starts at 0:00.\nconst hour23 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23];\n// h24 hour system uses 1-24. Midnight starts at 24:00.\nconst hour24 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0];\n/**\n * Given a locale and a mode,\n * return an array with formatted days\n * of the week. iOS should display days\n * such as \"Mon\" or \"Tue\".\n * MD should display days such as \"M\"\n * or \"T\".\n */\nconst getDaysOfWeek = (locale, mode, firstDayOfWeek = 0) => {\n    /**\n     * Nov 1st, 2020 starts on a Sunday.\n     * ion-datetime assumes weeks start on Sunday,\n     * but is configurable via `firstDayOfWeek`.\n     */\n    const weekdayFormat = mode === 'ios' ? 'short' : 'narrow';\n    const intl = new Intl.DateTimeFormat(locale, { weekday: weekdayFormat });\n    const startDate = new Date('11/01/2020');\n    const daysOfWeek = [];\n    /**\n     * For each day of the week,\n     * get the day name.\n     */\n    for (let i = firstDayOfWeek; i < firstDayOfWeek + 7; i++) {\n        const currentDate = new Date(startDate);\n        currentDate.setDate(currentDate.getDate() + i);\n        daysOfWeek.push(intl.format(currentDate));\n    }\n    return daysOfWeek;\n};\n/**\n * Returns an array containing all of the\n * days in a month for a given year. Values are\n * aligned with a week calendar starting on\n * the firstDayOfWeek value (Sunday by default)\n * using null values.\n */\nconst getDaysOfMonth = (month, year, firstDayOfWeek, showAdjacentDays = false) => {\n    const numDays = getNumDaysInMonth(month, year);\n    let previousNumDays; //previous month number of days\n    if (month === 1) {\n        // If the current month is January, the previous month should be December of the previous year.\n        previousNumDays = getNumDaysInMonth(12, year - 1);\n    }\n    else {\n        // Otherwise, the previous month should be the current month - 1 of the same year.\n        previousNumDays = getNumDaysInMonth(month - 1, year);\n    }\n    const firstOfMonth = new Date(`${month}/1/${year}`).getDay();\n    /**\n     * To get the first day of the month aligned on the correct\n     * day of the week, we need to determine how many \"filler\" days\n     * to generate. These filler days as empty/disabled buttons\n     * that fill the space of the days of the week before the first\n     * of the month.\n     *\n     * There are two cases here:\n     *\n     * 1. If firstOfMonth = 4, firstDayOfWeek = 0 then the offset\n     * is (4 - (0 + 1)) = 3. Since the offset loop goes from 0 to 3 inclusive,\n     * this will generate 4 filler days (0, 1, 2, 3), and then day of week 4 will have\n     * the first day of the month.\n     *\n     * 2. If firstOfMonth = 2, firstDayOfWeek = 4 then the offset\n     * is (6 - (4 - 2)) = 4. Since the offset loop goes from 0 to 4 inclusive,\n     * this will generate 5 filler days (0, 1, 2, 3, 4), and then day of week 5 will have\n     * the first day of the month.\n     */\n    const offset = firstOfMonth >= firstDayOfWeek ? firstOfMonth - (firstDayOfWeek + 1) : 6 - (firstDayOfWeek - firstOfMonth);\n    let days = [];\n    for (let i = 1; i <= numDays; i++) {\n        days.push({ day: i, dayOfWeek: (offset + i) % 7, isAdjacentDay: false });\n    }\n    if (showAdjacentDays) {\n        for (let i = 0; i <= offset; i++) {\n            // Using offset create previous month adjacent day, starting from last day\n            days = [{ day: previousNumDays - i, dayOfWeek: (previousNumDays - i) % 7, isAdjacentDay: true }, ...days];\n        }\n        // Calculate positiveOffset\n        // The calendar will display 42 days (6 rows of 7 columns)\n        // Knowing this the offset is 41 (we start at index 0)\n        // minus (the previous offset + the current month days)\n        const positiveOffset = 41 - (numDays + offset);\n        for (let i = 0; i < positiveOffset; i++) {\n            days.push({ day: i + 1, dayOfWeek: (numDays + offset + i) % 7, isAdjacentDay: true });\n        }\n    }\n    else {\n        for (let i = 0; i <= offset; i++) {\n            days = [{ day: null, dayOfWeek: null, isAdjacentDay: false }, ...days];\n        }\n    }\n    return days;\n};\n/**\n * Returns an array of pre-defined hour\n * values based on the provided hourCycle.\n */\nconst getHourData = (hourCycle) => {\n    switch (hourCycle) {\n        case 'h11':\n            return hour11;\n        case 'h12':\n            return hour12;\n        case 'h23':\n            return hour23;\n        case 'h24':\n            return hour24;\n        default:\n            throw new Error(`Invalid hour cycle \"${hourCycle}\"`);\n    }\n};\n/**\n * Given a local, reference datetime parts and option\n * max/min bound datetime parts, calculate the acceptable\n * hour and minute values according to the bounds and locale.\n */\nconst generateTime = (locale, refParts, hourCycle = 'h12', minParts, maxParts, hourValues, minuteValues) => {\n    const computedHourCycle = getHourCycle(locale, hourCycle);\n    const use24Hour = is24Hour(computedHourCycle);\n    let processedHours = getHourData(computedHourCycle);\n    let processedMinutes = minutes;\n    let isAMAllowed = true;\n    let isPMAllowed = true;\n    if (hourValues) {\n        processedHours = processedHours.filter((hour) => hourValues.includes(hour));\n    }\n    if (minuteValues) {\n        processedMinutes = processedMinutes.filter((minute) => minuteValues.includes(minute));\n    }\n    if (minParts) {\n        /**\n         * If ref day is the same as the\n         * minimum allowed day, filter hour/minute\n         * values according to min hour and minute.\n         */\n        if (isSameDay(refParts, minParts)) {\n            /**\n             * Users may not always set the hour/minute for\n             * min value (i.e. 2021-06-02) so we should allow\n             * all hours/minutes in that case.\n             */\n            if (minParts.hour !== undefined) {\n                processedHours = processedHours.filter((hour) => {\n                    const convertedHour = refParts.ampm === 'pm' ? (hour + 12) % 24 : hour;\n                    return (use24Hour ? hour : convertedHour) >= minParts.hour;\n                });\n                isAMAllowed = minParts.hour < 13;\n            }\n            if (minParts.minute !== undefined) {\n                /**\n                 * The minimum minute range should not be enforced when\n                 * the hour is greater than the min hour.\n                 *\n                 * For example with a minimum range of 09:30, users\n                 * should be able to select 10:00-10:29 and beyond.\n                 */\n                let isPastMinHour = false;\n                if (minParts.hour !== undefined && refParts.hour !== undefined) {\n                    if (refParts.hour > minParts.hour) {\n                        isPastMinHour = true;\n                    }\n                }\n                processedMinutes = processedMinutes.filter((minute) => {\n                    if (isPastMinHour) {\n                        return true;\n                    }\n                    return minute >= minParts.minute;\n                });\n            }\n            /**\n             * If ref day is before minimum\n             * day do not render any hours/minute values\n             */\n        }\n        else if (isBefore(refParts, minParts)) {\n            processedHours = [];\n            processedMinutes = [];\n            isAMAllowed = isPMAllowed = false;\n        }\n    }\n    if (maxParts) {\n        /**\n         * If ref day is the same as the\n         * maximum allowed day, filter hour/minute\n         * values according to max hour and minute.\n         */\n        if (isSameDay(refParts, maxParts)) {\n            /**\n             * Users may not always set the hour/minute for\n             * max value (i.e. 2021-06-02) so we should allow\n             * all hours/minutes in that case.\n             */\n            if (maxParts.hour !== undefined) {\n                processedHours = processedHours.filter((hour) => {\n                    const convertedHour = refParts.ampm === 'pm' ? (hour + 12) % 24 : hour;\n                    return (use24Hour ? hour : convertedHour) <= maxParts.hour;\n                });\n                isPMAllowed = maxParts.hour >= 12;\n            }\n            if (maxParts.minute !== undefined && refParts.hour === maxParts.hour) {\n                // The available minutes should only be filtered when the hour is the same as the max hour.\n                // For example if the max hour is 10:30 and the current hour is 10:00,\n                // users should be able to select 00-30 minutes.\n                // If the current hour is 09:00, users should be able to select 00-60 minutes.\n                processedMinutes = processedMinutes.filter((minute) => minute <= maxParts.minute);\n            }\n            /**\n             * If ref day is after minimum\n             * day do not render any hours/minute values\n             */\n        }\n        else if (isAfter(refParts, maxParts)) {\n            processedHours = [];\n            processedMinutes = [];\n            isAMAllowed = isPMAllowed = false;\n        }\n    }\n    return {\n        hours: processedHours,\n        minutes: processedMinutes,\n        am: isAMAllowed,\n        pm: isPMAllowed,\n    };\n};\n/**\n * Given DatetimeParts, generate the previous,\n * current, and and next months.\n */\nconst generateMonths = (refParts, forcedDate) => {\n    const current = { month: refParts.month, year: refParts.year, day: refParts.day };\n    /**\n     * If we're forcing a month to appear, and it's different from the current month,\n     * ensure it appears by replacing the next or previous month as appropriate.\n     */\n    if (forcedDate !== undefined && (refParts.month !== forcedDate.month || refParts.year !== forcedDate.year)) {\n        const forced = { month: forcedDate.month, year: forcedDate.year, day: forcedDate.day };\n        const forcedMonthIsBefore = isBefore(forced, current);\n        return forcedMonthIsBefore\n            ? [forced, current, getNextMonth(refParts)]\n            : [getPreviousMonth(refParts), current, forced];\n    }\n    return [getPreviousMonth(refParts), current, getNextMonth(refParts)];\n};\nconst getMonthColumnData = (locale, refParts, minParts, maxParts, monthValues, formatOptions = {\n    month: 'long',\n}) => {\n    const { year } = refParts;\n    const months = [];\n    if (monthValues !== undefined) {\n        let processedMonths = monthValues;\n        if ((maxParts === null || maxParts === void 0 ? void 0 : maxParts.month) !== undefined) {\n            processedMonths = processedMonths.filter((month) => month <= maxParts.month);\n        }\n        if ((minParts === null || minParts === void 0 ? void 0 : minParts.month) !== undefined) {\n            processedMonths = processedMonths.filter((month) => month >= minParts.month);\n        }\n        processedMonths.forEach((processedMonth) => {\n            const date = new Date(`${processedMonth}/1/${year} GMT+0000`);\n            const monthString = new Intl.DateTimeFormat(locale, Object.assign(Object.assign({}, formatOptions), { timeZone: 'UTC' })).format(date);\n            months.push({ text: monthString, value: processedMonth });\n        });\n    }\n    else {\n        const maxMonth = maxParts && maxParts.year === year ? maxParts.month : 12;\n        const minMonth = minParts && minParts.year === year ? minParts.month : 1;\n        for (let i = minMonth; i <= maxMonth; i++) {\n            /**\n             *\n             * There is a bug on iOS 14 where\n             * Intl.DateTimeFormat takes into account\n             * the local timezone offset when formatting dates.\n             *\n             * Forcing the timezone to 'UTC' fixes the issue. However,\n             * we should keep this workaround as it is safer. In the event\n             * this breaks in another browser, we will not be impacted\n             * because all dates will be interpreted in UTC.\n             *\n             * Example:\n             * new Intl.DateTimeFormat('en-US', { month: 'long' }).format(new Date('Sat Apr 01 2006 00:00:00 GMT-0400 (EDT)')) // \"March\"\n             * new Intl.DateTimeFormat('en-US', { month: 'long', timeZone: 'UTC' }).format(new Date('Sat Apr 01 2006 00:00:00 GMT-0400 (EDT)')) // \"April\"\n             *\n             * In certain timezones, iOS 14 shows the wrong\n             * date for .toUTCString(). To combat this, we\n             * force all of the timezones to GMT+0000 (UTC).\n             *\n             * Example:\n             * Time Zone: Central European Standard Time\n             * new Date('1/1/1992').toUTCString() // \"Tue, 31 Dec 1991 23:00:00 GMT\"\n             * new Date('1/1/1992 GMT+0000').toUTCString() // \"Wed, 01 Jan 1992 00:00:00 GMT\"\n             */\n            const date = new Date(`${i}/1/${year} GMT+0000`);\n            const monthString = new Intl.DateTimeFormat(locale, Object.assign(Object.assign({}, formatOptions), { timeZone: 'UTC' })).format(date);\n            months.push({ text: monthString, value: i });\n        }\n    }\n    return months;\n};\n/**\n * Returns information regarding\n * selectable dates (i.e 1st, 2nd, 3rd, etc)\n * within a reference month.\n * @param locale The locale to format the date with\n * @param refParts The reference month/year to generate dates for\n * @param minParts The minimum bound on the date that can be returned\n * @param maxParts The maximum bound on the date that can be returned\n * @param dayValues The allowed date values\n * @returns Date data to be used in ion-picker-column\n */\nconst getDayColumnData = (locale, refParts, minParts, maxParts, dayValues, formatOptions = {\n    day: 'numeric',\n}) => {\n    const { month, year } = refParts;\n    const days = [];\n    /**\n     * If we have max/min bounds that in the same\n     * month/year as the refParts, we should\n     * use the define day as the max/min day.\n     * Otherwise, fallback to the max/min days in a month.\n     */\n    const numDaysInMonth = getNumDaysInMonth(month, year);\n    const maxDay = (maxParts === null || maxParts === void 0 ? void 0 : maxParts.day) !== null && (maxParts === null || maxParts === void 0 ? void 0 : maxParts.day) !== undefined && maxParts.year === year && maxParts.month === month\n        ? maxParts.day\n        : numDaysInMonth;\n    const minDay = (minParts === null || minParts === void 0 ? void 0 : minParts.day) !== null && (minParts === null || minParts === void 0 ? void 0 : minParts.day) !== undefined && minParts.year === year && minParts.month === month\n        ? minParts.day\n        : 1;\n    if (dayValues !== undefined) {\n        let processedDays = dayValues;\n        processedDays = processedDays.filter((day) => day >= minDay && day <= maxDay);\n        processedDays.forEach((processedDay) => {\n            const date = new Date(`${month}/${processedDay}/${year} GMT+0000`);\n            const dayString = new Intl.DateTimeFormat(locale, Object.assign(Object.assign({}, formatOptions), { timeZone: 'UTC' })).format(date);\n            days.push({ text: dayString, value: processedDay });\n        });\n    }\n    else {\n        for (let i = minDay; i <= maxDay; i++) {\n            const date = new Date(`${month}/${i}/${year} GMT+0000`);\n            const dayString = new Intl.DateTimeFormat(locale, Object.assign(Object.assign({}, formatOptions), { timeZone: 'UTC' })).format(date);\n            days.push({ text: dayString, value: i });\n        }\n    }\n    return days;\n};\nconst getYearColumnData = (locale, refParts, minParts, maxParts, yearValues) => {\n    var _a, _b;\n    let processedYears = [];\n    if (yearValues !== undefined) {\n        processedYears = yearValues;\n        if ((maxParts === null || maxParts === void 0 ? void 0 : maxParts.year) !== undefined) {\n            processedYears = processedYears.filter((year) => year <= maxParts.year);\n        }\n        if ((minParts === null || minParts === void 0 ? void 0 : minParts.year) !== undefined) {\n            processedYears = processedYears.filter((year) => year >= minParts.year);\n        }\n    }\n    else {\n        const { year } = refParts;\n        const maxYear = (_a = maxParts === null || maxParts === void 0 ? void 0 : maxParts.year) !== null && _a !== void 0 ? _a : year;\n        const minYear = (_b = minParts === null || minParts === void 0 ? void 0 : minParts.year) !== null && _b !== void 0 ? _b : year - 100;\n        for (let i = minYear; i <= maxYear; i++) {\n            processedYears.push(i);\n        }\n    }\n    return processedYears.map((year) => ({\n        text: getYear(locale, { year, month: refParts.month, day: refParts.day }),\n        value: year,\n    }));\n};\n/**\n * Given a starting date and an upper bound,\n * this functions returns an array of all\n * month objects in that range.\n */\nconst getAllMonthsInRange = (currentParts, maxParts) => {\n    if (currentParts.month === maxParts.month && currentParts.year === maxParts.year) {\n        return [currentParts];\n    }\n    return [currentParts, ...getAllMonthsInRange(getNextMonth(currentParts), maxParts)];\n};\n/**\n * Creates and returns picker items\n * that represent the days in a month.\n * Example: \"Thu, Jun 2\"\n */\nconst getCombinedDateColumnData = (locale, todayParts, minParts, maxParts, dayValues, monthValues) => {\n    let items = [];\n    let parts = [];\n    /**\n     * Get all month objects from the min date\n     * to the max date. Note: Do not use getMonthColumnData\n     * as that function only generates dates within a\n     * single year.\n     */\n    let months = getAllMonthsInRange(minParts, maxParts);\n    /**\n     * Filter out any disallowed month values.\n     */\n    if (monthValues) {\n        months = months.filter(({ month }) => monthValues.includes(month));\n    }\n    /**\n     * Get all of the days in the month.\n     * From there, generate an array where\n     * each item has the month, date, and day\n     * of work as the text.\n     */\n    months.forEach((monthObject) => {\n        const referenceMonth = { month: monthObject.month, day: null, year: monthObject.year };\n        const monthDays = getDayColumnData(locale, referenceMonth, minParts, maxParts, dayValues, {\n            month: 'short',\n            day: 'numeric',\n            weekday: 'short',\n        });\n        const dateParts = [];\n        const dateColumnItems = [];\n        monthDays.forEach((dayObject) => {\n            const isToday = isSameDay(Object.assign(Object.assign({}, referenceMonth), { day: dayObject.value }), todayParts);\n            /**\n             * Today's date should read as \"Today\" (localized)\n             * not the actual date string\n             */\n            dateColumnItems.push({\n                text: isToday ? getTodayLabel(locale) : dayObject.text,\n                value: `${referenceMonth.year}-${referenceMonth.month}-${dayObject.value}`,\n            });\n            /**\n             * When selecting a date in the wheel picker\n             * we need access to the raw datetime parts data.\n             * The picker column only accepts values of\n             * type string or number, so we need to return\n             * two sets of data: A data set to be passed\n             * to the picker column, and a data set to\n             * be used to reference the raw data when\n             * updating the picker column value.\n             */\n            dateParts.push({\n                month: referenceMonth.month,\n                year: referenceMonth.year,\n                day: dayObject.value,\n            });\n        });\n        parts = [...parts, ...dateParts];\n        items = [...items, ...dateColumnItems];\n    });\n    return {\n        parts,\n        items,\n    };\n};\nconst getTimeColumnsData = (locale, refParts, hourCycle, minParts, maxParts, allowedHourValues, allowedMinuteValues) => {\n    const computedHourCycle = getHourCycle(locale, hourCycle);\n    const use24Hour = is24Hour(computedHourCycle);\n    const { hours, minutes, am, pm } = generateTime(locale, refParts, computedHourCycle, minParts, maxParts, allowedHourValues, allowedMinuteValues);\n    const hoursItems = hours.map((hour) => {\n        return {\n            text: getFormattedHour(hour, computedHourCycle),\n            value: getInternalHourValue(hour, use24Hour, refParts.ampm),\n        };\n    });\n    const minutesItems = minutes.map((minute) => {\n        return {\n            text: addTimePadding(minute),\n            value: minute,\n        };\n    });\n    const dayPeriodItems = [];\n    if (am && !use24Hour) {\n        dayPeriodItems.push({\n            text: getLocalizedDayPeriod(locale, 'am'),\n            value: 'am',\n        });\n    }\n    if (pm && !use24Hour) {\n        dayPeriodItems.push({\n            text: getLocalizedDayPeriod(locale, 'pm'),\n            value: 'pm',\n        });\n    }\n    return {\n        minutesData: minutesItems,\n        hoursData: hoursItems,\n        dayPeriodData: dayPeriodItems,\n    };\n};\n\nexport { getClosestValidDate as A, generateMonths as B, getNumDaysInMonth as C, getCombinedDateColumnData as D, getMonthColumnData as E, getDayColumnData as F, getYearColumnData as G, isMonthFirstLocale as H, getTimeColumnsData as I, isLocaleDayPeriodRTL as J, calculateHourFromAMPM as K, getMonthAndYear as L, getDaysOfWeek as M, getDaysOfMonth as N, getHourCycle as O, getLocalizedTime as P, getLocalizedDateTime as Q, formatValue as R, isAfter as a, getNextMonth as b, isSameDay as c, getDay as d, generateDayAriaLabel as e, getPartsFromCalendarDay as f, getPreviousMonth as g, getNextYear as h, isBefore as i, getPreviousYear as j, getEndOfWeek as k, getStartOfWeek as l, getPreviousDay as m, getNextDay as n, getPreviousWeek as o, getNextWeek as p, parseMinParts as q, parseMaxParts as r, parseDate as s, parseAmPm as t, clampDate as u, validateParts as v, warnIfValueOutOfBounds as w, convertToArrayOfNumbers as x, convertDataToISO as y, getToday as z };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { a as findClosestIonContent, i as isIonContent, d as disableContentScrollY, r as resetContentScrollY, f as findIonContent, p as printIonContentErrorMsg } from './index8.js';\nimport { C as CoreDelegate, a as attachComponent, d as detachComponent } from './framework-delegate.js';\nimport { f as clamp, g as getElementRoot, r as raf, d as inheritAttributes, k as hasLazyBuild } from './helpers.js';\nimport { c as createLockController } from './lock-controller.js';\nimport { p as printIonWarning, c as config } from './index4.js';\nimport { g as getCapacitor } from './capacitor.js';\nimport { G as GESTURE, O as OVERLAY_GESTURE_PRIORITY, F as FOCUS_TRAP_DISABLE_CLASS, e as createTriggerController, B as BACKDROP, j as prepareOverlay, k as setOverlayId, f as present, g as dismiss, h as eventMethod } from './overlays.js';\nimport { g as getClassMap } from './theme.js';\nimport { e as deepReady, w as waitForMount } from './index2.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { KEYBOARD_DID_OPEN } from './keyboard.js';\nimport { c as createAnimation } from './animation.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { createGesture } from './index3.js';\nimport { w as win } from './index9.js';\nimport { d as defineCustomElement$1 } from './backdrop.js';\n\nvar Style;\n(function (Style) {\n    Style[\"Dark\"] = \"DARK\";\n    Style[\"Light\"] = \"LIGHT\";\n    Style[\"Default\"] = \"DEFAULT\";\n})(Style || (Style = {}));\nconst StatusBar = {\n    getEngine() {\n        const capacitor = getCapacitor();\n        if (capacitor === null || capacitor === void 0 ? void 0 : capacitor.isPluginAvailable('StatusBar')) {\n            return capacitor.Plugins.StatusBar;\n        }\n        return undefined;\n    },\n    setStyle(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        engine.setStyle(options);\n    },\n    getStyle: async function () {\n        const engine = this.getEngine();\n        if (!engine) {\n            return Style.Default;\n        }\n        const { style } = await engine.getInfo();\n        return style;\n    },\n};\n\n/**\n * Use y = mx + b to\n * figure out the backdrop value\n * at a particular x coordinate. This\n * is useful when the backdrop does\n * not begin to fade in until after\n * the 0 breakpoint.\n */\nconst getBackdropValueForSheet = (x, backdropBreakpoint) => {\n    /**\n     * We will use these points:\n     * (backdropBreakpoint, 0)\n     * (maxBreakpoint, 1)\n     * We know that at the beginning breakpoint,\n     * the backdrop will be hidden. We also\n     * know that at the maxBreakpoint, the backdrop\n     * must be fully visible. maxBreakpoint should\n     * always be 1 even if the maximum value\n     * of the breakpoints array is not 1 since\n     * the animation runs from a progress of 0\n     * to a progress of 1.\n     * m = (y2 - y1) / (x2 - x1)\n     *\n     * This is simplified from:\n     * m = (1 - 0) / (maxBreakpoint - backdropBreakpoint)\n     *\n     * If the backdropBreakpoint is 1, we return 0 as the\n     * backdrop is completely hidden.\n     *\n     */\n    if (backdropBreakpoint === 1) {\n        return 0;\n    }\n    const slope = 1 / (1 - backdropBreakpoint);\n    /**\n     * From here, compute b which is\n     * the backdrop opacity if the offset\n     * is 0. If the backdrop does not\n     * begin to fade in until after the\n     * 0 breakpoint, this b value will be\n     * negative. This is fine as we never pass\n     * b directly into the animation keyframes.\n     * b = y - mx\n     * Use a known point: (backdropBreakpoint, 0)\n     * This is simplified from:\n     * b = 0 - (backdropBreakpoint * slope)\n     */\n    const b = -(backdropBreakpoint * slope);\n    /**\n     * Finally, we can now determine the\n     * backdrop offset given an arbitrary\n     * gesture offset.\n     */\n    return x * slope + b;\n};\n/**\n * The tablet/desktop card modal activates\n * when the window width is >= 768.\n * At that point, the presenting element\n * is not transformed, so we do not need to\n * adjust the status bar color.\n *\n */\nconst setCardStatusBarDark = () => {\n    if (!win || win.innerWidth >= 768) {\n        return;\n    }\n    StatusBar.setStyle({ style: Style.Dark });\n};\nconst setCardStatusBarDefault = (defaultStyle = Style.Default) => {\n    if (!win || win.innerWidth >= 768) {\n        return;\n    }\n    StatusBar.setStyle({ style: defaultStyle });\n};\n\nconst handleCanDismiss = async (el, animation) => {\n    /**\n     * If canDismiss is not a function\n     * then we can return early. If canDismiss is `true`,\n     * then canDismissBlocksGesture is `false` as canDismiss\n     * will never interrupt the gesture. As a result,\n     * this code block is never reached. If canDismiss is `false`,\n     * then we never dismiss.\n     */\n    if (typeof el.canDismiss !== 'function') {\n        return;\n    }\n    /**\n     * Run the canDismiss callback.\n     * If the function returns `true`,\n     * then we can proceed with dismiss.\n     */\n    const shouldDismiss = await el.canDismiss(undefined, GESTURE);\n    if (!shouldDismiss) {\n        return;\n    }\n    /**\n     * If canDismiss resolved after the snap\n     * back animation finished, we can\n     * dismiss immediately.\n     *\n     * If canDismiss resolved before the snap\n     * back animation finished, we need to\n     * wait until the snap back animation is\n     * done before dismissing.\n     */\n    if (animation.isRunning()) {\n        animation.onFinish(() => {\n            el.dismiss(undefined, 'handler');\n        }, { oneTimeCallback: true });\n    }\n    else {\n        el.dismiss(undefined, 'handler');\n    }\n};\n/**\n * This function lets us simulate a realistic spring-like animation\n * when swiping down on the modal.\n * There are two forces that we need to use to compute the spring physics:\n *\n * 1. Stiffness, k: This is a measure of resistance applied a spring.\n * 2. Dampening, c: This value has the effect of reducing or preventing oscillation.\n *\n * Using these two values, we can calculate the Spring Force and the Dampening Force\n * to compute the total force applied to a spring.\n *\n * Spring Force: This force pulls a spring back into its equilibrium position.\n * Hooke's Law tells us that that spring force (FS) = kX.\n * k is the stiffness of a spring, and X is the displacement of the spring from its\n * equilibrium position. In this case, it is the amount by which the free end\n * of a spring was displaced (stretched/pushed) from its \"relaxed\" position.\n *\n * Dampening Force: This force slows down motion. Without it, a spring would oscillate forever.\n * The dampening force, FD, can be found via this formula: FD = -cv\n * where c the dampening value and v is velocity.\n *\n * Therefore, the resulting force that is exerted on the block is:\n * F = FS + FD = -kX - cv\n *\n * Newton's 2nd Law tells us that F = ma:\n * ma = -kX - cv.\n *\n * For Ionic's purposes, we can assume that m = 1:\n * a = -kX - cv\n *\n * Imagine a block attached to the end of a spring. At equilibrium\n * the block is at position x = 1.\n * Pressing on the block moves it to position x = 0;\n * So, to calculate the displacement, we need to take the\n * current position and subtract the previous position from it.\n * X = x - x0 = 0 - 1 = -1.\n *\n * For Ionic's purposes, we are only pushing on the spring modal\n * so we have a max position of 1.\n * As a result, we can expand displacement to this formula:\n * X = x - 1\n *\n * a = -k(x - 1) - cv\n *\n * We can represent the motion of something as a function of time: f(t) = x.\n * The derivative of position gives us the velocity: f'(t)\n * The derivative of the velocity gives us the acceleration: f''(t)\n *\n * We can substitute the formula above with these values:\n *\n * f\"(t) = -k * (f(t) - 1) - c * f'(t)\n *\n * This is called a differential equation.\n *\n * We know that at t = 0, we are at x = 0 because the modal does not move: f(0) = 0\n * This means our velocity is also zero: f'(0) = 0.\n *\n * We can cheat a bit and plug the formula into Wolfram Alpha.\n * However, we need to pick stiffness and dampening values:\n * k = 0.57\n * c = 15\n *\n * I picked these as they are fairly close to native iOS's spring effect\n * with the modal.\n *\n * What we plug in is this: f(0) = 0; f'(0) = 0; f''(t) = -0.57(f(t) - 1) - 15f'(t)\n *\n * The result is a formula that lets us calculate the acceleration\n * for a given time t.\n * Note: This is the approximate form of the solution. Wolfram Alpha will\n * give you a complex differential equation too.\n */\nconst calculateSpringStep = (t) => {\n    return 0.00255275 * 2.71828 ** (-14.9619 * t) - 1.00255 * 2.71828 ** (-0.0380968 * t) + 1;\n};\n\n// Defaults for the card swipe animation\nconst SwipeToCloseDefaults = {\n    MIN_PRESENTING_SCALE: 0.915,\n};\nconst createSwipeToCloseGesture = (el, animation, statusBarStyle, onDismiss) => {\n    /**\n     * The step value at which a card modal\n     * is eligible for dismissing via gesture.\n     */\n    const DISMISS_THRESHOLD = 0.5;\n    const height = el.offsetHeight;\n    let isOpen = false;\n    let canDismissBlocksGesture = false;\n    let contentEl = null;\n    let scrollEl = null;\n    const canDismissMaxStep = 0.2;\n    let initialScrollY = true;\n    let lastStep = 0;\n    const getScrollY = () => {\n        if (contentEl && isIonContent(contentEl)) {\n            return contentEl.scrollY;\n            /**\n             * Custom scroll containers are intended to be\n             * used with virtual scrolling, so we assume\n             * there is scrolling in this case.\n             */\n        }\n        else {\n            return true;\n        }\n    };\n    const canStart = (detail) => {\n        const target = detail.event.target;\n        if (target === null || !target.closest) {\n            return true;\n        }\n        /**\n         * If we are swiping on the content,\n         * swiping should only be possible if\n         * the content is scrolled all the way\n         * to the top so that we do not interfere\n         * with scrolling.\n         *\n         * We cannot assume that the `ion-content`\n         * target will remain consistent between\n         * swipes. For example, when using\n         * ion-nav within a card modal it is\n         * possible to swipe, push a view, and then\n         * swipe again. The target content will not\n         * be the same between swipes.\n         */\n        contentEl = findClosestIonContent(target);\n        if (contentEl) {\n            /**\n             * The card should never swipe to close\n             * on the content with a refresher.\n             * Note: We cannot solve this by making the\n             * swipeToClose gesture have a higher priority\n             * than the refresher gesture as the iOS native\n             * refresh gesture uses a scroll listener in\n             * addition to a gesture.\n             *\n             * Note: Do not use getScrollElement here\n             * because we need this to be a synchronous\n             * operation, and getScrollElement is\n             * asynchronous.\n             */\n            if (isIonContent(contentEl)) {\n                const root = getElementRoot(contentEl);\n                scrollEl = root.querySelector('.inner-scroll');\n            }\n            else {\n                scrollEl = contentEl;\n            }\n            const hasRefresherInContent = !!contentEl.querySelector('ion-refresher');\n            return !hasRefresherInContent && scrollEl.scrollTop === 0;\n        }\n        /**\n         * Card should be swipeable on all\n         * parts of the modal except for the footer.\n         */\n        const footer = target.closest('ion-footer');\n        if (footer === null) {\n            return true;\n        }\n        return false;\n    };\n    const onStart = (detail) => {\n        const { deltaY } = detail;\n        /**\n         * Get the initial scrollY value so\n         * that we can correctly reset the scrollY\n         * prop when the gesture ends.\n         */\n        initialScrollY = getScrollY();\n        /**\n         * If canDismiss is anything other than `true`\n         * then users should be able to swipe down\n         * until a threshold is hit. At that point,\n         * the card modal should not proceed any further.\n         * TODO (FW-937)\n         * Remove undefined check\n         */\n        canDismissBlocksGesture = el.canDismiss !== undefined && el.canDismiss !== true;\n        /**\n         * If we are pulling down, then\n         * it is possible we are pulling on the\n         * content. We do not want scrolling to\n         * happen at the same time as the gesture.\n         */\n        if (deltaY > 0 && contentEl) {\n            disableContentScrollY(contentEl);\n        }\n        animation.progressStart(true, isOpen ? 1 : 0);\n    };\n    const onMove = (detail) => {\n        const { deltaY } = detail;\n        /**\n         * If we are pulling down, then\n         * it is possible we are pulling on the\n         * content. We do not want scrolling to\n         * happen at the same time as the gesture.\n         */\n        if (deltaY > 0 && contentEl) {\n            disableContentScrollY(contentEl);\n        }\n        /**\n         * If we are swiping on the content\n         * then the swipe gesture should only\n         * happen if we are pulling down.\n         *\n         * However, if we pull up and\n         * then down such that the scroll position\n         * returns to 0, we should be able to swipe\n         * the card.\n         */\n        const step = detail.deltaY / height;\n        /**\n         * Check if user is swiping down and\n         * if we have a canDismiss value that\n         * should block the gesture from\n         * proceeding,\n         */\n        const isAttemptingDismissWithCanDismiss = step >= 0 && canDismissBlocksGesture;\n        /**\n         * If we are blocking the gesture from dismissing,\n         * set the max step value so that the sheet cannot be\n         * completely hidden.\n         */\n        const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n        /**\n         * If we are blocking the gesture from\n         * dismissing, calculate the spring modifier value\n         * this will be added to the starting breakpoint\n         * value to give the gesture a spring-like feeling.\n         * Note that the starting breakpoint is always 0,\n         * so we omit adding 0 to the result.\n         */\n        const processedStep = isAttemptingDismissWithCanDismiss ? calculateSpringStep(step / maxStep) : step;\n        const clampedStep = clamp(0.0001, processedStep, maxStep);\n        animation.progressStep(clampedStep);\n        /**\n         * When swiping down half way, the status bar style\n         * should be reset to its default value.\n         *\n         * We track lastStep so that we do not fire these\n         * functions on every onMove, only when the user has\n         * crossed a certain threshold.\n         */\n        if (clampedStep >= DISMISS_THRESHOLD && lastStep < DISMISS_THRESHOLD) {\n            setCardStatusBarDefault(statusBarStyle);\n            /**\n             * However, if we swipe back up, then the\n             * status bar style should be set to have light\n             * text on a dark background.\n             */\n        }\n        else if (clampedStep < DISMISS_THRESHOLD && lastStep >= DISMISS_THRESHOLD) {\n            setCardStatusBarDark();\n        }\n        lastStep = clampedStep;\n    };\n    const onEnd = (detail) => {\n        const velocity = detail.velocityY;\n        const step = detail.deltaY / height;\n        const isAttemptingDismissWithCanDismiss = step >= 0 && canDismissBlocksGesture;\n        const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n        const processedStep = isAttemptingDismissWithCanDismiss ? calculateSpringStep(step / maxStep) : step;\n        const clampedStep = clamp(0.0001, processedStep, maxStep);\n        const threshold = (detail.deltaY + velocity * 1000) / height;\n        /**\n         * If canDismiss blocks\n         * the swipe gesture, then the\n         * animation can never complete until\n         * canDismiss is checked.\n         */\n        const shouldComplete = !isAttemptingDismissWithCanDismiss && threshold >= DISMISS_THRESHOLD;\n        let newStepValue = shouldComplete ? -1e-3 : 0.001;\n        if (!shouldComplete) {\n            animation.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n            newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], clampedStep)[0];\n        }\n        else {\n            animation.easing('cubic-bezier(0.32, 0.72, 0, 1)');\n            newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], clampedStep)[0];\n        }\n        const duration = shouldComplete\n            ? computeDuration(step * height, velocity)\n            : computeDuration((1 - clampedStep) * height, velocity);\n        isOpen = shouldComplete;\n        gesture.enable(false);\n        if (contentEl) {\n            resetContentScrollY(contentEl, initialScrollY);\n        }\n        animation\n            .onFinish(() => {\n            if (!shouldComplete) {\n                gesture.enable(true);\n            }\n        })\n            .progressEnd(shouldComplete ? 1 : 0, newStepValue, duration);\n        /**\n         * If the canDismiss value blocked the gesture\n         * from proceeding, then we should ignore whatever\n         * shouldComplete is. Whether or not the modal\n         * animation should complete is now determined by\n         * canDismiss.\n         *\n         * If the user swiped >25% of the way\n         * to the max step, then we should\n         * check canDismiss. 25% was chosen\n         * to avoid accidental swipes.\n         */\n        if (isAttemptingDismissWithCanDismiss && clampedStep > maxStep / 4) {\n            handleCanDismiss(el, animation);\n        }\n        else if (shouldComplete) {\n            onDismiss();\n        }\n    };\n    const gesture = createGesture({\n        el,\n        gestureName: 'modalSwipeToClose',\n        gesturePriority: OVERLAY_GESTURE_PRIORITY,\n        direction: 'y',\n        threshold: 10,\n        canStart,\n        onStart,\n        onMove,\n        onEnd,\n    });\n    return gesture;\n};\nconst computeDuration = (remaining, velocity) => {\n    return clamp(400, remaining / Math.abs(velocity * 1.1), 500);\n};\n\nconst createSheetEnterAnimation = (opts) => {\n    const { currentBreakpoint, backdropBreakpoint, expandToScroll } = opts;\n    /**\n     * If the backdropBreakpoint is undefined, then the backdrop\n     * should always fade in. If the backdropBreakpoint came before the\n     * current breakpoint, then the backdrop should be fading in.\n     */\n    const shouldShowBackdrop = backdropBreakpoint === undefined || backdropBreakpoint < currentBreakpoint;\n    const initialBackdrop = shouldShowBackdrop ? `calc(var(--backdrop-opacity) * ${currentBreakpoint})` : '0';\n    const backdropAnimation = createAnimation('backdropAnimation').fromTo('opacity', 0, initialBackdrop);\n    if (shouldShowBackdrop) {\n        backdropAnimation\n            .beforeStyles({\n            'pointer-events': 'none',\n        })\n            .afterClearStyles(['pointer-events']);\n    }\n    const wrapperAnimation = createAnimation('wrapperAnimation').keyframes([\n        { offset: 0, opacity: 1, transform: 'translateY(100%)' },\n        { offset: 1, opacity: 1, transform: `translateY(${100 - currentBreakpoint * 100}%)` },\n    ]);\n    /**\n     * This allows the content to be scrollable at any breakpoint.\n     */\n    const contentAnimation = !expandToScroll\n        ? createAnimation('contentAnimation').keyframes([\n            { offset: 0, opacity: 1, maxHeight: `${(1 - currentBreakpoint) * 100}%` },\n            { offset: 1, opacity: 1, maxHeight: `${currentBreakpoint * 100}%` },\n        ])\n        : undefined;\n    return { wrapperAnimation, backdropAnimation, contentAnimation };\n};\nconst createSheetLeaveAnimation = (opts) => {\n    const { currentBreakpoint, backdropBreakpoint } = opts;\n    /**\n     * Backdrop does not always fade in from 0 to 1 if backdropBreakpoint\n     * is defined, so we need to account for that offset by figuring out\n     * what the current backdrop value should be.\n     */\n    const backdropValue = `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(currentBreakpoint, backdropBreakpoint)})`;\n    const defaultBackdrop = [\n        { offset: 0, opacity: backdropValue },\n        { offset: 1, opacity: 0 },\n    ];\n    const customBackdrop = [\n        { offset: 0, opacity: backdropValue },\n        { offset: backdropBreakpoint, opacity: 0 },\n        { offset: 1, opacity: 0 },\n    ];\n    const backdropAnimation = createAnimation('backdropAnimation').keyframes(backdropBreakpoint !== 0 ? customBackdrop : defaultBackdrop);\n    const wrapperAnimation = createAnimation('wrapperAnimation').keyframes([\n        { offset: 0, opacity: 1, transform: `translateY(${100 - currentBreakpoint * 100}%)` },\n        { offset: 1, opacity: 1, transform: `translateY(100%)` },\n    ]);\n    return { wrapperAnimation, backdropAnimation };\n};\n\nconst createEnterAnimation$1 = () => {\n    const backdropAnimation = createAnimation()\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    const wrapperAnimation = createAnimation().fromTo('transform', 'translateY(100vh)', 'translateY(0vh)');\n    return { backdropAnimation, wrapperAnimation, contentAnimation: undefined };\n};\n/**\n * iOS Modal Enter Animation for the Card presentation style\n */\nconst iosEnterAnimation = (baseEl, opts) => {\n    const { presentingEl, currentBreakpoint, expandToScroll } = opts;\n    const root = getElementRoot(baseEl);\n    const { wrapperAnimation, backdropAnimation, contentAnimation } = currentBreakpoint !== undefined ? createSheetEnterAnimation(opts) : createEnterAnimation$1();\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n    wrapperAnimation.addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({ opacity: 1 });\n    // The content animation is only added if scrolling is enabled for\n    // all the breakpoints.\n    !expandToScroll && (contentAnimation === null || contentAnimation === void 0 ? void 0 : contentAnimation.addElement(baseEl.querySelector('.ion-page')));\n    const baseAnimation = createAnimation('entering-base')\n        .addElement(baseEl)\n        .easing('cubic-bezier(0.32,0.72,0,1)')\n        .duration(500)\n        .addAnimation([wrapperAnimation]);\n    if (contentAnimation) {\n        baseAnimation.addAnimation(contentAnimation);\n    }\n    if (presentingEl) {\n        const isPortrait = window.innerWidth < 768;\n        const hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n        const presentingElRoot = getElementRoot(presentingEl);\n        const presentingAnimation = createAnimation().beforeStyles({\n            transform: 'translateY(0)',\n            'transform-origin': 'top center',\n            overflow: 'hidden',\n        });\n        const bodyEl = document.body;\n        if (isPortrait) {\n            /**\n             * Fallback for browsers that does not support `max()` (ex: Firefox)\n             * No need to worry about statusbar padding since engines like Gecko\n             * are not used as the engine for standalone Cordova/Capacitor apps\n             */\n            const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n            const modalTransform = hasCardModal ? '-10px' : transformOffset;\n            const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n            const finalTransform = `translateY(${modalTransform}) scale(${toPresentingScale})`;\n            presentingAnimation\n                .afterStyles({\n                transform: finalTransform,\n            })\n                .beforeAddWrite(() => bodyEl.style.setProperty('background-color', 'black'))\n                .addElement(presentingEl)\n                .keyframes([\n                { offset: 0, filter: 'contrast(1)', transform: 'translateY(0px) scale(1)', borderRadius: '0px' },\n                { offset: 1, filter: 'contrast(0.85)', transform: finalTransform, borderRadius: '10px 10px 0 0' },\n            ]);\n            baseAnimation.addAnimation(presentingAnimation);\n        }\n        else {\n            baseAnimation.addAnimation(backdropAnimation);\n            if (!hasCardModal) {\n                wrapperAnimation.fromTo('opacity', '0', '1');\n            }\n            else {\n                const toPresentingScale = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;\n                const finalTransform = `translateY(-10px) scale(${toPresentingScale})`;\n                presentingAnimation\n                    .afterStyles({\n                    transform: finalTransform,\n                })\n                    .addElement(presentingElRoot.querySelector('.modal-wrapper'))\n                    .keyframes([\n                    { offset: 0, filter: 'contrast(1)', transform: 'translateY(0) scale(1)' },\n                    { offset: 1, filter: 'contrast(0.85)', transform: finalTransform },\n                ]);\n                const shadowAnimation = createAnimation()\n                    .afterStyles({\n                    transform: finalTransform,\n                })\n                    .addElement(presentingElRoot.querySelector('.modal-shadow'))\n                    .keyframes([\n                    { offset: 0, opacity: '1', transform: 'translateY(0) scale(1)' },\n                    { offset: 1, opacity: '0', transform: finalTransform },\n                ]);\n                baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n            }\n        }\n    }\n    else {\n        baseAnimation.addAnimation(backdropAnimation);\n    }\n    return baseAnimation;\n};\n\nconst createLeaveAnimation$1 = () => {\n    const backdropAnimation = createAnimation().fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    const wrapperAnimation = createAnimation().fromTo('transform', 'translateY(0vh)', 'translateY(100vh)');\n    return { backdropAnimation, wrapperAnimation };\n};\n/**\n * iOS Modal Leave Animation\n */\nconst iosLeaveAnimation = (baseEl, opts, duration = 500) => {\n    const { presentingEl, currentBreakpoint } = opts;\n    const root = getElementRoot(baseEl);\n    const { wrapperAnimation, backdropAnimation } = currentBreakpoint !== undefined ? createSheetLeaveAnimation(opts) : createLeaveAnimation$1();\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n    wrapperAnimation.addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({ opacity: 1 });\n    const baseAnimation = createAnimation('leaving-base')\n        .addElement(baseEl)\n        .easing('cubic-bezier(0.32,0.72,0,1)')\n        .duration(duration)\n        .addAnimation(wrapperAnimation);\n    if (presentingEl) {\n        const isPortrait = window.innerWidth < 768;\n        const hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n        const presentingElRoot = getElementRoot(presentingEl);\n        const presentingAnimation = createAnimation()\n            .beforeClearStyles(['transform'])\n            .afterClearStyles(['transform'])\n            .onFinish((currentStep) => {\n            // only reset background color if this is the last card-style modal\n            if (currentStep !== 1) {\n                return;\n            }\n            presentingEl.style.setProperty('overflow', '');\n            const numModals = Array.from(bodyEl.querySelectorAll('ion-modal:not(.overlay-hidden)')).filter((m) => m.presentingElement !== undefined).length;\n            if (numModals <= 1) {\n                bodyEl.style.setProperty('background-color', '');\n            }\n        });\n        const bodyEl = document.body;\n        if (isPortrait) {\n            const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n            const modalTransform = hasCardModal ? '-10px' : transformOffset;\n            const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n            const finalTransform = `translateY(${modalTransform}) scale(${toPresentingScale})`;\n            presentingAnimation.addElement(presentingEl).keyframes([\n                { offset: 0, filter: 'contrast(0.85)', transform: finalTransform, borderRadius: '10px 10px 0 0' },\n                { offset: 1, filter: 'contrast(1)', transform: 'translateY(0px) scale(1)', borderRadius: '0px' },\n            ]);\n            baseAnimation.addAnimation(presentingAnimation);\n        }\n        else {\n            baseAnimation.addAnimation(backdropAnimation);\n            if (!hasCardModal) {\n                wrapperAnimation.fromTo('opacity', '1', '0');\n            }\n            else {\n                const toPresentingScale = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;\n                const finalTransform = `translateY(-10px) scale(${toPresentingScale})`;\n                presentingAnimation\n                    .addElement(presentingElRoot.querySelector('.modal-wrapper'))\n                    .afterStyles({\n                    transform: 'translate3d(0, 0, 0)',\n                })\n                    .keyframes([\n                    { offset: 0, filter: 'contrast(0.85)', transform: finalTransform },\n                    { offset: 1, filter: 'contrast(1)', transform: 'translateY(0) scale(1)' },\n                ]);\n                const shadowAnimation = createAnimation()\n                    .addElement(presentingElRoot.querySelector('.modal-shadow'))\n                    .afterStyles({\n                    transform: 'translateY(0) scale(1)',\n                })\n                    .keyframes([\n                    { offset: 0, opacity: '0', transform: finalTransform },\n                    { offset: 1, opacity: '1', transform: 'translateY(0) scale(1)' },\n                ]);\n                baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n            }\n        }\n    }\n    else {\n        baseAnimation.addAnimation(backdropAnimation);\n    }\n    return baseAnimation;\n};\n\n/**\n * Transition animation from portrait view to landscape view\n * This handles the case where a card modal is open in portrait view\n * and the user switches to landscape view\n */\nconst portraitToLandscapeTransition = (baseEl, opts, duration = 300) => {\n    const { presentingEl } = opts;\n    if (!presentingEl) {\n        // No transition needed for non-card modals\n        return createAnimation('portrait-to-landscape-transition');\n    }\n    const presentingElIsCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n    const presentingElRoot = getElementRoot(presentingEl);\n    const bodyEl = document.body;\n    const baseAnimation = createAnimation('portrait-to-landscape-transition')\n        .addElement(baseEl)\n        .easing('cubic-bezier(0.32,0.72,0,1)')\n        .duration(duration);\n    const presentingAnimation = createAnimation().beforeStyles({\n        transform: 'translateY(0)',\n        'transform-origin': 'top center',\n        overflow: 'hidden',\n    });\n    if (!presentingElIsCardModal) {\n        // The presenting element is not a card modal, so we do not\n        // need to care about layering and modal-specific styles.\n        const root = getElementRoot(baseEl);\n        const wrapperAnimation = createAnimation()\n            .addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow'))\n            .fromTo('opacity', '1', '1'); // Keep wrapper visible in landscape\n        const backdropAnimation = createAnimation()\n            .addElement(root.querySelector('ion-backdrop'))\n            .fromTo('opacity', 'var(--backdrop-opacity)', 'var(--backdrop-opacity)'); // Keep backdrop visible\n        // Animate presentingEl from portrait state back to normal\n        const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n        const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n        const fromTransform = `translateY(${transformOffset}) scale(${toPresentingScale})`;\n        presentingAnimation\n            .addElement(presentingEl)\n            .afterStyles({\n            transform: 'translateY(0px) scale(1)',\n            'border-radius': '0px',\n        })\n            .beforeAddWrite(() => bodyEl.style.setProperty('background-color', ''))\n            .fromTo('transform', fromTransform, 'translateY(0px) scale(1)')\n            .fromTo('filter', 'contrast(0.85)', 'contrast(1)')\n            .fromTo('border-radius', '10px 10px 0 0', '0px');\n        baseAnimation.addAnimation([presentingAnimation, wrapperAnimation, backdropAnimation]);\n    }\n    else {\n        // The presenting element is a card modal, so we do\n        // need to care about layering and modal-specific styles.\n        const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n        const fromTransform = `translateY(-10px) scale(${toPresentingScale})`;\n        const toTransform = `translateY(-10px) scale(${toPresentingScale})`;\n        presentingAnimation\n            .addElement(presentingElRoot.querySelector('.modal-wrapper'))\n            .afterStyles({\n            transform: toTransform,\n        })\n            .fromTo('transform', fromTransform, toTransform)\n            .fromTo('filter', 'contrast(0.85)', 'contrast(0.85)'); // Keep same contrast for card\n        const shadowAnimation = createAnimation()\n            .addElement(presentingElRoot.querySelector('.modal-shadow'))\n            .afterStyles({\n            transform: toTransform,\n        })\n            .fromTo('opacity', '0', '0') // Shadow stays hidden in landscape for card modals\n            .fromTo('transform', fromTransform, toTransform);\n        baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n    }\n    return baseAnimation;\n};\n/**\n * Transition animation from landscape view to portrait view\n * This handles the case where a card modal is open in landscape view\n * and the user switches to portrait view\n */\nconst landscapeToPortraitTransition = (baseEl, opts, duration = 300) => {\n    const { presentingEl } = opts;\n    if (!presentingEl) {\n        // No transition needed for non-card modals\n        return createAnimation('landscape-to-portrait-transition');\n    }\n    const presentingElIsCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n    const presentingElRoot = getElementRoot(presentingEl);\n    const bodyEl = document.body;\n    const baseAnimation = createAnimation('landscape-to-portrait-transition')\n        .addElement(baseEl)\n        .easing('cubic-bezier(0.32,0.72,0,1)')\n        .duration(duration);\n    const presentingAnimation = createAnimation().beforeStyles({\n        transform: 'translateY(0)',\n        'transform-origin': 'top center',\n        overflow: 'hidden',\n    });\n    if (!presentingElIsCardModal) {\n        // The presenting element is not a card modal, so we do not\n        // need to care about layering and modal-specific styles.\n        const root = getElementRoot(baseEl);\n        const wrapperAnimation = createAnimation()\n            .addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow'))\n            .fromTo('opacity', '1', '1'); // Keep wrapper visible\n        const backdropAnimation = createAnimation()\n            .addElement(root.querySelector('ion-backdrop'))\n            .fromTo('opacity', 'var(--backdrop-opacity)', 'var(--backdrop-opacity)'); // Keep backdrop visible\n        // Animate presentingEl from normal state to portrait state\n        const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n        const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n        const toTransform = `translateY(${transformOffset}) scale(${toPresentingScale})`;\n        presentingAnimation\n            .addElement(presentingEl)\n            .beforeStyles({\n            transform: 'translateY(0px) scale(1)',\n            'transform-origin': 'top center',\n            overflow: 'hidden',\n        })\n            .afterStyles({\n            transform: toTransform,\n            'border-radius': '10px 10px 0 0',\n            filter: 'contrast(0.85)',\n            overflow: 'hidden',\n            'transform-origin': 'top center',\n        })\n            .beforeAddWrite(() => bodyEl.style.setProperty('background-color', 'black'))\n            .keyframes([\n            { offset: 0, transform: 'translateY(0px) scale(1)', filter: 'contrast(1)', borderRadius: '0px' },\n            { offset: 0.2, transform: 'translateY(0px) scale(1)', filter: 'contrast(1)', borderRadius: '10px 10px 0 0' },\n            { offset: 1, transform: toTransform, filter: 'contrast(0.85)', borderRadius: '10px 10px 0 0' },\n        ]);\n        baseAnimation.addAnimation([presentingAnimation, wrapperAnimation, backdropAnimation]);\n    }\n    else {\n        // The presenting element is also a card modal, so we need\n        // to handle layering and modal-specific styles.\n        const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n        const fromTransform = `translateY(-10px) scale(${toPresentingScale})`;\n        const toTransform = `translateY(-10px) scale(${toPresentingScale})`;\n        presentingAnimation\n            .addElement(presentingElRoot.querySelector('.modal-wrapper'))\n            .afterStyles({\n            transform: toTransform,\n        })\n            .fromTo('transform', fromTransform, toTransform)\n            .fromTo('filter', 'contrast(0.85)', 'contrast(0.85)'); // Keep same contrast for card\n        const shadowAnimation = createAnimation()\n            .addElement(presentingElRoot.querySelector('.modal-shadow'))\n            .afterStyles({\n            transform: toTransform,\n        })\n            .fromTo('opacity', '0', '0') // Shadow stays hidden\n            .fromTo('transform', fromTransform, toTransform);\n        baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n    }\n    return baseAnimation;\n};\n\nconst createEnterAnimation = () => {\n    const backdropAnimation = createAnimation()\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    const wrapperAnimation = createAnimation().keyframes([\n        { offset: 0, opacity: 0.01, transform: 'translateY(40px)' },\n        { offset: 1, opacity: 1, transform: `translateY(0px)` },\n    ]);\n    return { backdropAnimation, wrapperAnimation, contentAnimation: undefined };\n};\n/**\n * Md Modal Enter Animation\n */\nconst mdEnterAnimation = (baseEl, opts) => {\n    const { currentBreakpoint, expandToScroll } = opts;\n    const root = getElementRoot(baseEl);\n    const { wrapperAnimation, backdropAnimation, contentAnimation } = currentBreakpoint !== undefined ? createSheetEnterAnimation(opts) : createEnterAnimation();\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n    wrapperAnimation.addElement(root.querySelector('.modal-wrapper'));\n    // The content animation is only added if scrolling is enabled for\n    // all the breakpoints.\n    !expandToScroll && (contentAnimation === null || contentAnimation === void 0 ? void 0 : contentAnimation.addElement(baseEl.querySelector('.ion-page')));\n    const baseAnimation = createAnimation()\n        .addElement(baseEl)\n        .easing('cubic-bezier(0.36,0.66,0.04,1)')\n        .duration(280)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n    if (contentAnimation) {\n        baseAnimation.addAnimation(contentAnimation);\n    }\n    return baseAnimation;\n};\n\nconst createLeaveAnimation = () => {\n    const backdropAnimation = createAnimation().fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    const wrapperAnimation = createAnimation().keyframes([\n        { offset: 0, opacity: 0.99, transform: `translateY(0px)` },\n        { offset: 1, opacity: 0, transform: 'translateY(40px)' },\n    ]);\n    return { backdropAnimation, wrapperAnimation };\n};\n/**\n * Md Modal Leave Animation\n */\nconst mdLeaveAnimation = (baseEl, opts) => {\n    const { currentBreakpoint } = opts;\n    const root = getElementRoot(baseEl);\n    const { wrapperAnimation, backdropAnimation } = currentBreakpoint !== undefined ? createSheetLeaveAnimation(opts) : createLeaveAnimation();\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n    wrapperAnimation.addElement(root.querySelector('.modal-wrapper'));\n    const baseAnimation = createAnimation()\n        .easing('cubic-bezier(0.47,0,0.745,0.715)')\n        .duration(200)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n    return baseAnimation;\n};\n\nconst createSheetGesture = (baseEl, backdropEl, wrapperEl, initialBreakpoint, backdropBreakpoint, animation, breakpoints = [], expandToScroll, getCurrentBreakpoint, onDismiss, onBreakpointChange) => {\n    // Defaults for the sheet swipe animation\n    const defaultBackdrop = [\n        { offset: 0, opacity: 'var(--backdrop-opacity)' },\n        { offset: 1, opacity: 0.01 },\n    ];\n    const customBackdrop = [\n        { offset: 0, opacity: 'var(--backdrop-opacity)' },\n        { offset: 1 - backdropBreakpoint, opacity: 0 },\n        { offset: 1, opacity: 0 },\n    ];\n    const SheetDefaults = {\n        WRAPPER_KEYFRAMES: [\n            { offset: 0, transform: 'translateY(0%)' },\n            { offset: 1, transform: 'translateY(100%)' },\n        ],\n        BACKDROP_KEYFRAMES: backdropBreakpoint !== 0 ? customBackdrop : defaultBackdrop,\n        CONTENT_KEYFRAMES: [\n            { offset: 0, maxHeight: '100%' },\n            { offset: 1, maxHeight: '0%' },\n        ],\n    };\n    const contentEl = baseEl.querySelector('ion-content');\n    const height = wrapperEl.clientHeight;\n    let currentBreakpoint = initialBreakpoint;\n    let offset = 0;\n    let canDismissBlocksGesture = false;\n    let cachedScrollEl = null;\n    let cachedFooterEls = null;\n    let cachedFooterYPosition = null;\n    let currentFooterState = null;\n    const canDismissMaxStep = 0.95;\n    const maxBreakpoint = breakpoints[breakpoints.length - 1];\n    const minBreakpoint = breakpoints[0];\n    const wrapperAnimation = animation.childAnimations.find((ani) => ani.id === 'wrapperAnimation');\n    const backdropAnimation = animation.childAnimations.find((ani) => ani.id === 'backdropAnimation');\n    const contentAnimation = animation.childAnimations.find((ani) => ani.id === 'contentAnimation');\n    const enableBackdrop = () => {\n        baseEl.style.setProperty('pointer-events', 'auto');\n        backdropEl.style.setProperty('pointer-events', 'auto');\n        /**\n         * When the backdrop is enabled, elements such\n         * as inputs should not be focusable outside\n         * the sheet.\n         */\n        baseEl.classList.remove(FOCUS_TRAP_DISABLE_CLASS);\n    };\n    const disableBackdrop = () => {\n        baseEl.style.setProperty('pointer-events', 'none');\n        backdropEl.style.setProperty('pointer-events', 'none');\n        /**\n         * When the backdrop is enabled, elements such\n         * as inputs should not be focusable outside\n         * the sheet.\n         * Adding this class disables focus trapping\n         * for the sheet temporarily.\n         */\n        baseEl.classList.add(FOCUS_TRAP_DISABLE_CLASS);\n    };\n    /**\n     * Toggles the footer to an absolute position while moving to prevent\n     * it from shaking while the sheet is being dragged.\n     * @param newPosition Whether the footer is in a moving or stationary position.\n     */\n    const swapFooterPosition = (newPosition) => {\n        if (!cachedFooterEls) {\n            cachedFooterEls = Array.from(baseEl.querySelectorAll('ion-footer'));\n            if (!cachedFooterEls.length) {\n                return;\n            }\n        }\n        const page = baseEl.querySelector('.ion-page');\n        currentFooterState = newPosition;\n        if (newPosition === 'stationary') {\n            cachedFooterEls.forEach((cachedFooterEl) => {\n                // Reset positioning styles to allow normal document flow\n                cachedFooterEl.classList.remove('modal-footer-moving');\n                cachedFooterEl.style.removeProperty('position');\n                cachedFooterEl.style.removeProperty('width');\n                cachedFooterEl.style.removeProperty('height');\n                cachedFooterEl.style.removeProperty('top');\n                cachedFooterEl.style.removeProperty('left');\n                page === null || page === void 0 ? void 0 : page.style.removeProperty('padding-bottom');\n                // Move to page\n                page === null || page === void 0 ? void 0 : page.appendChild(cachedFooterEl);\n            });\n        }\n        else {\n            let footerHeights = 0;\n            cachedFooterEls.forEach((cachedFooterEl, index) => {\n                // Get both the footer and document body positions\n                const cachedFooterElRect = cachedFooterEl.getBoundingClientRect();\n                const bodyRect = document.body.getBoundingClientRect();\n                // Calculate the total height of all footers\n                // so we can add padding to the page element\n                footerHeights += cachedFooterEl.clientHeight;\n                // Calculate absolute position relative to body\n                // We need to subtract the body's offsetTop to get true position within document.body\n                const absoluteTop = cachedFooterElRect.top - bodyRect.top;\n                const absoluteLeft = cachedFooterElRect.left - bodyRect.left;\n                // Capture the footer's current dimensions and store them in CSS variables for\n                // later use when applying absolute positioning.\n                cachedFooterEl.style.setProperty('--pinned-width', `${cachedFooterEl.clientWidth}px`);\n                cachedFooterEl.style.setProperty('--pinned-height', `${cachedFooterEl.clientHeight}px`);\n                cachedFooterEl.style.setProperty('--pinned-top', `${absoluteTop}px`);\n                cachedFooterEl.style.setProperty('--pinned-left', `${absoluteLeft}px`);\n                // Only cache the first footer's Y position\n                // This is used to determine if the sheet has been moved below the footer\n                // and needs to be swapped back to stationary so it collapses correctly.\n                if (index === 0) {\n                    cachedFooterYPosition = absoluteTop;\n                    // If there's a header, we need to combine the header height with the footer position\n                    // because the header moves with the drag handle, so when it starts overlapping the footer,\n                    // we need to account for that.\n                    const header = baseEl.querySelector('ion-header');\n                    if (header) {\n                        cachedFooterYPosition -= header.clientHeight;\n                    }\n                }\n            });\n            // Apply the pinning of styles after we've calculated everything\n            // so that we don't cause layouts to shift while calculating the footer positions.\n            // Otherwise, with multiple footers we'll end up capturing the wrong positions.\n            cachedFooterEls.forEach((cachedFooterEl) => {\n                // Add padding to the parent element to prevent content from being hidden\n                // when the footer is positioned absolutely. This has to be done before we\n                // make the footer absolutely positioned or we may accidentally cause the\n                // sheet to scroll.\n                page === null || page === void 0 ? void 0 : page.style.setProperty('padding-bottom', `${footerHeights}px`);\n                // Apply positioning styles to keep footer at bottom\n                cachedFooterEl.classList.add('modal-footer-moving');\n                // Apply our preserved styles to pin the footer\n                cachedFooterEl.style.setProperty('position', 'absolute');\n                cachedFooterEl.style.setProperty('width', 'var(--pinned-width)');\n                cachedFooterEl.style.setProperty('height', 'var(--pinned-height)');\n                cachedFooterEl.style.setProperty('top', 'var(--pinned-top)');\n                cachedFooterEl.style.setProperty('left', 'var(--pinned-left)');\n                // Move the element to the body when everything else is done\n                document.body.appendChild(cachedFooterEl);\n            });\n        }\n    };\n    /**\n     * After the entering animation completes,\n     * we need to set the animation to go from\n     * offset 0 to offset 1 so that users can\n     * swipe in any direction. We then set the\n     * animation offset to the current breakpoint\n     * so there is no flickering.\n     */\n    if (wrapperAnimation && backdropAnimation) {\n        wrapperAnimation.keyframes([...SheetDefaults.WRAPPER_KEYFRAMES]);\n        backdropAnimation.keyframes([...SheetDefaults.BACKDROP_KEYFRAMES]);\n        contentAnimation === null || contentAnimation === void 0 ? void 0 : contentAnimation.keyframes([...SheetDefaults.CONTENT_KEYFRAMES]);\n        animation.progressStart(true, 1 - currentBreakpoint);\n        /**\n         * If backdrop is not enabled, then content\n         * behind modal should be clickable. To do this, we need\n         * to remove pointer-events from ion-modal as a whole.\n         * ion-backdrop and .modal-wrapper always have pointer-events: auto\n         * applied, so the modal content can still be interacted with.\n         */\n        const shouldEnableBackdrop = currentBreakpoint > backdropBreakpoint;\n        if (shouldEnableBackdrop) {\n            enableBackdrop();\n        }\n        else {\n            disableBackdrop();\n        }\n    }\n    if (contentEl && currentBreakpoint !== maxBreakpoint && expandToScroll) {\n        contentEl.scrollY = false;\n    }\n    const canStart = (detail) => {\n        /**\n         * If we are swiping on the content, swiping should only be possible if the content\n         * is scrolled all the way to the top so that we do not interfere with scrolling.\n         *\n         * We cannot assume that the `ion-content` target will remain consistent between swipes.\n         * For example, when using ion-nav within a modal it is possible to swipe, push a view,\n         * and then swipe again. The target content will not be the same between swipes.\n         */\n        const contentEl = findClosestIonContent(detail.event.target);\n        currentBreakpoint = getCurrentBreakpoint();\n        /**\n         * If `expandToScroll` is disabled, we should not allow the swipe gesture\n         * to start if the content is not scrolled to the top.\n         */\n        if (!expandToScroll && contentEl) {\n            const scrollEl = isIonContent(contentEl) ? getElementRoot(contentEl).querySelector('.inner-scroll') : contentEl;\n            return scrollEl.scrollTop === 0;\n        }\n        if (currentBreakpoint === 1 && contentEl) {\n            /**\n             * The modal should never swipe to close on the content with a refresher.\n             * Note 1: We cannot solve this by making this gesture have a higher priority than\n             * the refresher gesture as the iOS native refresh gesture uses a scroll listener in\n             * addition to a gesture.\n             *\n             * Note 2: Do not use getScrollElement here because we need this to be a synchronous\n             * operation, and getScrollElement is asynchronous.\n             */\n            const scrollEl = isIonContent(contentEl) ? getElementRoot(contentEl).querySelector('.inner-scroll') : contentEl;\n            const hasRefresherInContent = !!contentEl.querySelector('ion-refresher');\n            return !hasRefresherInContent && scrollEl.scrollTop === 0;\n        }\n        return true;\n    };\n    const onStart = (detail) => {\n        /**\n         * If canDismiss is anything other than `true`\n         * then users should be able to swipe down\n         * until a threshold is hit. At that point,\n         * the card modal should not proceed any further.\n         *\n         * canDismiss is never fired via gesture if there is\n         * no 0 breakpoint. However, it can be fired if the user\n         * presses Esc or the hardware back button.\n         * TODO (FW-937)\n         * Remove undefined check\n         */\n        canDismissBlocksGesture = baseEl.canDismiss !== undefined && baseEl.canDismiss !== true && minBreakpoint === 0;\n        /**\n         * Cache the scroll element reference when the gesture starts,\n         * this allows us to avoid querying the DOM for the target in onMove,\n         * which would impact performance significantly.\n         */\n        if (!expandToScroll) {\n            const targetEl = findClosestIonContent(detail.event.target);\n            cachedScrollEl =\n                targetEl && isIonContent(targetEl) ? getElementRoot(targetEl).querySelector('.inner-scroll') : targetEl;\n        }\n        /**\n         * If expandToScroll is disabled, we need to swap\n         * the footer position to moving so that it doesn't shake\n         * while the sheet is being dragged.\n         */\n        if (!expandToScroll) {\n            swapFooterPosition('moving');\n        }\n        /**\n         * If we are pulling down, then it is possible we are pulling on the content.\n         * We do not want scrolling to happen at the same time as the gesture.\n         */\n        if (detail.deltaY > 0 && contentEl) {\n            contentEl.scrollY = false;\n        }\n        raf(() => {\n            /**\n             * Dismisses the open keyboard when the sheet drag gesture is started.\n             * Sets the focus onto the modal element.\n             */\n            baseEl.focus();\n        });\n        animation.progressStart(true, 1 - currentBreakpoint);\n    };\n    const onMove = (detail) => {\n        /**\n         * If `expandToScroll` is disabled, we need to see if we're currently below\n         * the footer element and the footer is in a stationary position. If so,\n         * we need to make the stationary the original position so that the footer\n         * collapses with the sheet.\n         */\n        if (!expandToScroll && cachedFooterYPosition !== null && currentFooterState !== null) {\n            // Check if we need to swap the footer position\n            if (detail.currentY >= cachedFooterYPosition && currentFooterState === 'moving') {\n                swapFooterPosition('stationary');\n            }\n            else if (detail.currentY < cachedFooterYPosition && currentFooterState === 'stationary') {\n                swapFooterPosition('moving');\n            }\n        }\n        /**\n         * If `expandToScroll` is disabled, and an upwards swipe gesture is done within\n         * the scrollable content, we should not allow the swipe gesture to continue.\n         */\n        if (!expandToScroll && detail.deltaY <= 0 && cachedScrollEl) {\n            return;\n        }\n        /**\n         * If we are pulling down, then it is possible we are pulling on the content.\n         * We do not want scrolling to happen at the same time as the gesture.\n         * This accounts for when the user scrolls down, scrolls all the way up, and then\n         * pulls down again such that the modal should start to move.\n         */\n        if (detail.deltaY > 0 && contentEl) {\n            contentEl.scrollY = false;\n        }\n        /**\n         * Given the change in gesture position on the Y axis,\n         * compute where the offset of the animation should be\n         * relative to where the user dragged.\n         */\n        const initialStep = 1 - currentBreakpoint;\n        const secondToLastBreakpoint = breakpoints.length > 1 ? 1 - breakpoints[1] : undefined;\n        const step = initialStep + detail.deltaY / height;\n        const isAttemptingDismissWithCanDismiss = secondToLastBreakpoint !== undefined && step >= secondToLastBreakpoint && canDismissBlocksGesture;\n        /**\n         * If we are blocking the gesture from dismissing,\n         * set the max step value so that the sheet cannot be\n         * completely hidden.\n         */\n        const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n        /**\n         * If we are blocking the gesture from\n         * dismissing, calculate the spring modifier value\n         * this will be added to the starting breakpoint\n         * value to give the gesture a spring-like feeling.\n         * Note that when isAttemptingDismissWithCanDismiss is true,\n         * the modifier is always added to the breakpoint that\n         * appears right after the 0 breakpoint.\n         *\n         * Note that this modifier is essentially the progression\n         * between secondToLastBreakpoint and maxStep which is\n         * why we subtract secondToLastBreakpoint. This lets us get\n         * the result as a value from 0 to 1.\n         */\n        const processedStep = isAttemptingDismissWithCanDismiss && secondToLastBreakpoint !== undefined\n            ? secondToLastBreakpoint +\n                calculateSpringStep((step - secondToLastBreakpoint) / (maxStep - secondToLastBreakpoint))\n            : step;\n        offset = clamp(0.0001, processedStep, maxStep);\n        animation.progressStep(offset);\n    };\n    const onEnd = (detail) => {\n        /**\n         * If expandToScroll is disabled, we should not allow the moveSheetToBreakpoint\n         * function to be called if the user is trying to swipe content upwards and the content\n         * is not scrolled to the top.\n         */\n        if (!expandToScroll && detail.deltaY <= 0 && cachedScrollEl && cachedScrollEl.scrollTop > 0) {\n            /**\n             * If expand to scroll is disabled, we need to make sure we swap the footer position\n             * back to stationary so that it will collapse correctly if the modal is dismissed without\n             * dragging (e.g. through a dismiss button).\n             * This can cause issues if the user has a modal with content that can be dragged, as we'll\n             * swap to moving on drag and if we don't swap back here then the footer will get stuck.\n             */\n            swapFooterPosition('stationary');\n            return;\n        }\n        /**\n         * When the gesture releases, we need to determine\n         * the closest breakpoint to snap to.\n         */\n        const velocity = detail.velocityY;\n        const threshold = (detail.deltaY + velocity * 350) / height;\n        const diff = currentBreakpoint - threshold;\n        const closest = breakpoints.reduce((a, b) => {\n            return Math.abs(b - diff) < Math.abs(a - diff) ? b : a;\n        });\n        moveSheetToBreakpoint({\n            breakpoint: closest,\n            breakpointOffset: offset,\n            canDismiss: canDismissBlocksGesture,\n            /**\n             * The swipe is user-driven, so we should\n             * always animate when the gesture ends.\n             */\n            animated: true,\n        });\n    };\n    const moveSheetToBreakpoint = (options) => {\n        const { breakpoint, canDismiss, breakpointOffset, animated } = options;\n        /**\n         * canDismiss should only prevent snapping\n         * when users are trying to dismiss. If canDismiss\n         * is present but the user is trying to swipe upwards,\n         * we should allow that to happen,\n         */\n        const shouldPreventDismiss = canDismiss && breakpoint === 0;\n        const snapToBreakpoint = shouldPreventDismiss ? currentBreakpoint : breakpoint;\n        const shouldRemainOpen = snapToBreakpoint !== 0;\n        currentBreakpoint = 0;\n        /**\n         * Update the animation so that it plays from\n         * the last offset to the closest snap point.\n         */\n        if (wrapperAnimation && backdropAnimation) {\n            wrapperAnimation.keyframes([\n                { offset: 0, transform: `translateY(${breakpointOffset * 100}%)` },\n                { offset: 1, transform: `translateY(${(1 - snapToBreakpoint) * 100}%)` },\n            ]);\n            backdropAnimation.keyframes([\n                {\n                    offset: 0,\n                    opacity: `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(1 - breakpointOffset, backdropBreakpoint)})`,\n                },\n                {\n                    offset: 1,\n                    opacity: `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(snapToBreakpoint, backdropBreakpoint)})`,\n                },\n            ]);\n            if (contentAnimation) {\n                /**\n                 * The modal content should scroll at any breakpoint when expandToScroll\n                 * is disabled. In order to do this, the content needs to be completely\n                 * viewable so scrolling can access everything. Otherwise, the default\n                 * behavior would show the content off the screen and only allow\n                 * scrolling when the sheet is fully expanded.\n                 */\n                contentAnimation.keyframes([\n                    { offset: 0, maxHeight: `${(1 - breakpointOffset) * 100}%` },\n                    { offset: 1, maxHeight: `${snapToBreakpoint * 100}%` },\n                ]);\n            }\n            animation.progressStep(0);\n        }\n        /**\n         * Gesture should remain disabled until the\n         * snapping animation completes.\n         */\n        gesture.enable(false);\n        if (shouldPreventDismiss) {\n            handleCanDismiss(baseEl, animation);\n        }\n        else if (!shouldRemainOpen) {\n            onDismiss();\n        }\n        /**\n         * Enables scrolling immediately if the sheet is about to fully expand\n         * or if it allows scrolling at any breakpoint. Without this, there would\n         * be a ~500ms delay while the modal animation completes, causing a\n         * noticeable lag. Native iOS allows scrolling as soon as the gesture is\n         * released, so we align with that behavior.\n         */\n        if (contentEl && (snapToBreakpoint === breakpoints[breakpoints.length - 1] || !expandToScroll)) {\n            contentEl.scrollY = true;\n        }\n        /**\n         * If expandToScroll is disabled and we're animating\n         * to close the sheet, we need to swap\n         * the footer position to stationary so that it\n         * will collapse correctly. We cannot just always swap\n         * here or it'll be jittery while animating movement.\n         */\n        if (!expandToScroll && snapToBreakpoint === 0) {\n            swapFooterPosition('stationary');\n        }\n        return new Promise((resolve) => {\n            animation\n                .onFinish(() => {\n                if (shouldRemainOpen) {\n                    /**\n                     * If expandToScroll is disabled, we need to swap\n                     * the footer position to stationary so that it\n                     * will act as it would by default.\n                     */\n                    if (!expandToScroll) {\n                        swapFooterPosition('stationary');\n                    }\n                    /**\n                     * Once the snapping animation completes,\n                     * we need to reset the animation to go\n                     * from 0 to 1 so users can swipe in any direction.\n                     * We then set the animation offset to the current\n                     * breakpoint so that it starts at the snapped position.\n                     */\n                    if (wrapperAnimation && backdropAnimation) {\n                        raf(() => {\n                            wrapperAnimation.keyframes([...SheetDefaults.WRAPPER_KEYFRAMES]);\n                            backdropAnimation.keyframes([...SheetDefaults.BACKDROP_KEYFRAMES]);\n                            contentAnimation === null || contentAnimation === void 0 ? void 0 : contentAnimation.keyframes([...SheetDefaults.CONTENT_KEYFRAMES]);\n                            animation.progressStart(true, 1 - snapToBreakpoint);\n                            currentBreakpoint = snapToBreakpoint;\n                            onBreakpointChange(currentBreakpoint);\n                            /**\n                             * Backdrop should become enabled\n                             * after the backdropBreakpoint value\n                             */\n                            const shouldEnableBackdrop = currentBreakpoint > backdropBreakpoint;\n                            if (shouldEnableBackdrop) {\n                                enableBackdrop();\n                            }\n                            else {\n                                disableBackdrop();\n                            }\n                            gesture.enable(true);\n                            resolve();\n                        });\n                    }\n                    else {\n                        gesture.enable(true);\n                        resolve();\n                    }\n                }\n                else {\n                    resolve();\n                }\n                /**\n                 * This must be a one time callback\n                 * otherwise a new callback will\n                 * be added every time onEnd runs.\n                 */\n            }, { oneTimeCallback: true })\n                .progressEnd(1, 0, animated ? 500 : 0);\n        });\n    };\n    const gesture = createGesture({\n        el: wrapperEl,\n        gestureName: 'modalSheet',\n        gesturePriority: 40,\n        direction: 'y',\n        threshold: 10,\n        canStart,\n        onStart,\n        onMove,\n        onEnd,\n    });\n    return {\n        gesture,\n        moveSheetToBreakpoint,\n    };\n};\n\nconst modalIosCss = \":host{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;color:var(--ion-text-color, #000);contain:strict}.modal-wrapper,ion-backdrop{pointer-events:auto}:host(.overlay-hidden){display:none}.modal-wrapper,.modal-shadow{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){:host{--width:600px;--height:600px}}.modal-handle{left:0px;right:0px;top:5px;border-radius:8px;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;position:absolute;width:36px;height:5px;-webkit-transform:translateZ(0);transform:translateZ(0);border:0;background:var(--ion-color-step-350, var(--ion-background-color-step-350, #c0c0be));cursor:pointer;z-index:11}.modal-handle::before{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;position:absolute;width:36px;height:5px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\"\\\"}:host(.modal-sheet){--height:calc(100% - (var(--ion-safe-area-top) + 10px))}:host(.modal-sheet) .modal-wrapper,:host(.modal-sheet) .modal-shadow{position:absolute;bottom:0}:host(.modal-sheet.modal-no-expand-scroll) ion-footer{position:absolute;bottom:0;width:var(--width)}:host{--backdrop-opacity:var(--ion-backdrop-opacity, 0.4)}:host(.modal-card),:host(.modal-sheet){--border-radius:10px}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--border-radius:10px}}.modal-wrapper{-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0)}@media screen and (max-width: 767px){@supports (width: max(0px, 1px)){:host(.modal-card){--height:calc(100% - max(30px, var(--ion-safe-area-top)) - 10px)}}@supports not (width: max(0px, 1px)){:host(.modal-card){--height:calc(100% - 40px)}}:host(.modal-card) .modal-wrapper{border-start-start-radius:var(--border-radius);border-start-end-radius:var(--border-radius);border-end-end-radius:0;border-end-start-radius:0}:host(.modal-card){--backdrop-opacity:0;--width:100%;-ms-flex-align:end;align-items:flex-end}:host(.modal-card) .modal-shadow{display:none}:host(.modal-card) ion-backdrop{pointer-events:none}}@media screen and (min-width: 768px){:host(.modal-card){--width:calc(100% - 120px);--height:calc(100% - (120px + var(--ion-safe-area-top) + var(--ion-safe-area-bottom)));--max-width:720px;--max-height:1000px;--backdrop-opacity:0;--box-shadow:0px 0px 30px 10px rgba(0, 0, 0, 0.1);-webkit-transition:all 0.5s ease-in-out;transition:all 0.5s ease-in-out}:host(.modal-card) .modal-wrapper{-webkit-box-shadow:none;box-shadow:none}:host(.modal-card) .modal-shadow{-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow)}}:host(.modal-sheet) .modal-wrapper{border-start-start-radius:var(--border-radius);border-start-end-radius:var(--border-radius);border-end-end-radius:0;border-end-start-radius:0}\";\n\nconst modalMdCss = \":host{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;color:var(--ion-text-color, #000);contain:strict}.modal-wrapper,ion-backdrop{pointer-events:auto}:host(.overlay-hidden){display:none}.modal-wrapper,.modal-shadow{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){:host{--width:600px;--height:600px}}.modal-handle{left:0px;right:0px;top:5px;border-radius:8px;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;position:absolute;width:36px;height:5px;-webkit-transform:translateZ(0);transform:translateZ(0);border:0;background:var(--ion-color-step-350, var(--ion-background-color-step-350, #c0c0be));cursor:pointer;z-index:11}.modal-handle::before{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;position:absolute;width:36px;height:5px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\"\\\"}:host(.modal-sheet){--height:calc(100% - (var(--ion-safe-area-top) + 10px))}:host(.modal-sheet) .modal-wrapper,:host(.modal-sheet) .modal-shadow{position:absolute;bottom:0}:host(.modal-sheet.modal-no-expand-scroll) ion-footer{position:absolute;bottom:0;width:var(--width)}:host{--backdrop-opacity:var(--ion-backdrop-opacity, 0.32)}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--border-radius:2px;--box-shadow:0 28px 48px rgba(0, 0, 0, 0.4)}}.modal-wrapper{-webkit-transform:translate3d(0,  40px,  0);transform:translate3d(0,  40px,  0);opacity:0.01}\";\n\nconst Modal = /*@__PURE__*/ proxyCustomElement(class Modal extends HTMLElement {\n    constructor() {\n        super();\n        this.__registerHost();\n        this.__attachShadow();\n        this.didPresent = createEvent(this, \"ionModalDidPresent\", 7);\n        this.willPresent = createEvent(this, \"ionModalWillPresent\", 7);\n        this.willDismiss = createEvent(this, \"ionModalWillDismiss\", 7);\n        this.didDismiss = createEvent(this, \"ionModalDidDismiss\", 7);\n        this.ionBreakpointDidChange = createEvent(this, \"ionBreakpointDidChange\", 7);\n        this.didPresentShorthand = createEvent(this, \"didPresent\", 7);\n        this.willPresentShorthand = createEvent(this, \"willPresent\", 7);\n        this.willDismissShorthand = createEvent(this, \"willDismiss\", 7);\n        this.didDismissShorthand = createEvent(this, \"didDismiss\", 7);\n        this.ionMount = createEvent(this, \"ionMount\", 7);\n        this.lockController = createLockController();\n        this.triggerController = createTriggerController();\n        this.coreDelegate = CoreDelegate();\n        this.isSheetModal = false;\n        this.inheritedAttributes = {};\n        this.inline = false;\n        // Whether or not modal is being dismissed via gesture\n        this.gestureAnimationDismissing = false;\n        this.presented = false;\n        /** @internal */\n        this.hasController = false;\n        /**\n         * If `true`, the keyboard will be automatically dismissed when the overlay is presented.\n         */\n        this.keyboardClose = true;\n        /**\n         * Controls whether scrolling or dragging within the sheet modal expands\n         * it to a larger breakpoint. This only takes effect when `breakpoints`\n         * and `initialBreakpoint` are set.\n         *\n         * If `true`, scrolling or dragging anywhere in the modal will first expand\n         * it to the next breakpoint. Once fully expanded, scrolling will affect the\n         * content.\n         * If `false`, scrolling will always affect the content. The modal will\n         * only expand when dragging the header or handle. The modal will close when\n         * dragging the header or handle. It can also be closed when dragging the\n         * content, but only if the content is scrolled to the top.\n         */\n        this.expandToScroll = true;\n        /**\n         * A decimal value between 0 and 1 that indicates the\n         * point after which the backdrop will begin to fade in\n         * when using a sheet modal. Prior to this point, the\n         * backdrop will be hidden and the content underneath\n         * the sheet can be interacted with. This value is exclusive\n         * meaning the backdrop will become active after the value\n         * specified.\n         */\n        this.backdropBreakpoint = 0;\n        /**\n         * The interaction behavior for the sheet modal when the handle is pressed.\n         *\n         * Defaults to `\"none\"`, which  means the modal will not change size or position when the handle is pressed.\n         * Set to `\"cycle\"` to let the modal cycle between available breakpoints when pressed.\n         *\n         * Handle behavior is unavailable when the `handle` property is set to `false` or\n         * when the `breakpoints` property is not set (using a fullscreen or card modal).\n         */\n        this.handleBehavior = 'none';\n        /**\n         * If `true`, the modal will be dismissed when the backdrop is clicked.\n         */\n        this.backdropDismiss = true;\n        /**\n         * If `true`, a backdrop will be displayed behind the modal.\n         * This property controls whether or not the backdrop\n         * darkens the screen when the modal is presented.\n         * It does not control whether or not the backdrop\n         * is active or present in the DOM.\n         */\n        this.showBackdrop = true;\n        /**\n         * If `true`, the modal will animate.\n         */\n        this.animated = true;\n        /**\n         * If `true`, the modal will open. If `false`, the modal will close.\n         * Use this if you need finer grained control over presentation, otherwise\n         * just use the modalController or the `trigger` property.\n         * Note: `isOpen` will not automatically be set back to `false` when\n         * the modal dismisses. You will need to do that in your code.\n         */\n        this.isOpen = false;\n        /**\n         * If `true`, the component passed into `ion-modal` will\n         * automatically be mounted when the modal is created. The\n         * component will remain mounted even when the modal is dismissed.\n         * However, the component will be destroyed when the modal is\n         * destroyed. This property is not reactive and should only be\n         * used when initially creating a modal.\n         *\n         * Note: This feature only applies to inline modals in JavaScript\n         * frameworks such as Angular, React, and Vue.\n         */\n        this.keepContentsMounted = false;\n        /**\n         * If `true`, focus will not be allowed to move outside of this overlay.\n         * If `false`, focus will be allowed to move outside of the overlay.\n         *\n         * In most scenarios this property should remain set to `true`. Setting\n         * this property to `false` can cause severe accessibility issues as users\n         * relying on assistive technologies may be able to move focus into\n         * a confusing state. We recommend only setting this to `false` when\n         * absolutely necessary.\n         *\n         * Developers may want to consider disabling focus trapping if this\n         * overlay presents a non-Ionic overlay from a 3rd party library.\n         * Developers would disable focus trapping on the Ionic overlay\n         * when presenting the 3rd party overlay and then re-enable\n         * focus trapping when dismissing the 3rd party overlay and moving\n         * focus back to the Ionic overlay.\n         */\n        this.focusTrap = true;\n        /**\n         * Determines whether or not a modal can dismiss\n         * when calling the `dismiss` method.\n         *\n         * If the value is `true` or the value's function returns `true`, the modal will close when trying to dismiss.\n         * If the value is `false` or the value's function returns `false`, the modal will not close when trying to dismiss.\n         *\n         * See https://ionicframework.com/docs/troubleshooting/runtime#accessing-this\n         * if you need to access `this` from within the callback.\n         */\n        this.canDismiss = true;\n        this.onHandleClick = () => {\n            const { sheetTransition, handleBehavior } = this;\n            if (handleBehavior !== 'cycle' || sheetTransition !== undefined) {\n                /**\n                 * The sheet modal should not advance to the next breakpoint\n                 * if the handle behavior is not `cycle` or if the handle\n                 * is clicked while the sheet is moving to a breakpoint.\n                 */\n                return;\n            }\n            this.moveToNextBreakpoint();\n        };\n        this.onBackdropTap = () => {\n            const { sheetTransition } = this;\n            if (sheetTransition !== undefined) {\n                /**\n                 * When the handle is double clicked at the largest breakpoint,\n                 * it will start to move to the first breakpoint. While transitioning,\n                 * the backdrop will often receive the second click. We prevent the\n                 * backdrop from dismissing the modal while moving between breakpoints.\n                 */\n                return;\n            }\n            this.dismiss(undefined, BACKDROP);\n        };\n        this.onLifecycle = (modalEvent) => {\n            const el = this.usersElement;\n            const name = LIFECYCLE_MAP[modalEvent.type];\n            if (el && name) {\n                const ev = new CustomEvent(name, {\n                    bubbles: false,\n                    cancelable: false,\n                    detail: modalEvent.detail,\n                });\n                el.dispatchEvent(ev);\n            }\n        };\n        /**\n         * When the modal receives focus directly, pass focus to the handle\n         * if it exists and is focusable, otherwise let the focus trap handle it.\n         */\n        this.onModalFocus = (ev) => {\n            const { dragHandleEl, el } = this;\n            // Only handle focus if the modal itself was focused (not a child element)\n            if (ev.target === el && dragHandleEl && dragHandleEl.tabIndex !== -1) {\n                dragHandleEl.focus();\n            }\n        };\n    }\n    onIsOpenChange(newValue, oldValue) {\n        if (newValue === true && oldValue === false) {\n            this.present();\n        }\n        else if (newValue === false && oldValue === true) {\n            this.dismiss();\n        }\n    }\n    triggerChanged() {\n        const { trigger, el, triggerController } = this;\n        if (trigger) {\n            triggerController.addClickListener(el, trigger);\n        }\n    }\n    onWindowResize() {\n        // Only handle resize for iOS card modals when no custom animations are provided\n        if (getIonMode(this) !== 'ios' || !this.presentingElement || this.enterAnimation || this.leaveAnimation) {\n            return;\n        }\n        clearTimeout(this.resizeTimeout);\n        this.resizeTimeout = setTimeout(() => {\n            this.handleViewTransition();\n        }, 50); // Debounce to avoid excessive calls during active resizing\n    }\n    breakpointsChanged(breakpoints) {\n        if (breakpoints !== undefined) {\n            this.sortedBreakpoints = breakpoints.sort((a, b) => a - b);\n        }\n    }\n    connectedCallback() {\n        const { el } = this;\n        prepareOverlay(el);\n        this.triggerChanged();\n    }\n    disconnectedCallback() {\n        this.triggerController.removeClickListener();\n        this.cleanupViewTransitionListener();\n    }\n    componentWillLoad() {\n        var _a;\n        const { breakpoints, initialBreakpoint, el, htmlAttributes } = this;\n        const isSheetModal = (this.isSheetModal = breakpoints !== undefined && initialBreakpoint !== undefined);\n        const attributesToInherit = ['aria-label', 'role'];\n        this.inheritedAttributes = inheritAttributes(el, attributesToInherit);\n        /**\n         * When using a controller modal you can set attributes\n         * using the htmlAttributes property. Since the above attributes\n         * need to be inherited inside of the modal, we need to look\n         * and see if these attributes are being set via htmlAttributes.\n         *\n         * We could alternatively move this to componentDidLoad to simplify the work\n         * here, but we'd then need to make inheritedAttributes a State variable,\n         * thus causing another render to always happen after the first render.\n         */\n        if (htmlAttributes !== undefined) {\n            attributesToInherit.forEach((attribute) => {\n                const attributeValue = htmlAttributes[attribute];\n                if (attributeValue) {\n                    /**\n                     * If an attribute we need to inherit was\n                     * set using htmlAttributes then add it to\n                     * inheritedAttributes and remove it from htmlAttributes.\n                     * This ensures the attribute is inherited and not\n                     * set on the host.\n                     *\n                     * In this case, if an inherited attribute is set\n                     * on the host element and using htmlAttributes then\n                     * htmlAttributes wins, but that's not a pattern that we recommend.\n                     * The only time you'd need htmlAttributes is when using modalController.\n                     */\n                    this.inheritedAttributes = Object.assign(Object.assign({}, this.inheritedAttributes), { [attribute]: htmlAttributes[attribute] });\n                    delete htmlAttributes[attribute];\n                }\n            });\n        }\n        if (isSheetModal) {\n            this.currentBreakpoint = this.initialBreakpoint;\n        }\n        if (breakpoints !== undefined && initialBreakpoint !== undefined && !breakpoints.includes(initialBreakpoint)) {\n            printIonWarning('[ion-modal] - Your breakpoints array must include the initialBreakpoint value.');\n        }\n        if (!((_a = this.htmlAttributes) === null || _a === void 0 ? void 0 : _a.id)) {\n            setOverlayId(this.el);\n        }\n    }\n    componentDidLoad() {\n        /**\n         * If modal was rendered with isOpen=\"true\"\n         * then we should open modal immediately.\n         */\n        if (this.isOpen === true) {\n            raf(() => this.present());\n        }\n        this.breakpointsChanged(this.breakpoints);\n        /**\n         * When binding values in frameworks such as Angular\n         * it is possible for the value to be set after the Web Component\n         * initializes but before the value watcher is set up in Stencil.\n         * As a result, the watcher callback may not be fired.\n         * We work around this by manually calling the watcher\n         * callback when the component has loaded and the watcher\n         * is configured.\n         */\n        this.triggerChanged();\n    }\n    /**\n     * Determines whether or not an overlay\n     * is being used inline or via a controller/JS\n     * and returns the correct delegate.\n     * By default, subsequent calls to getDelegate\n     * will use a cached version of the delegate.\n     * This is useful for calling dismiss after\n     * present so that the correct delegate is given.\n     */\n    getDelegate(force = false) {\n        if (this.workingDelegate && !force) {\n            return {\n                delegate: this.workingDelegate,\n                inline: this.inline,\n            };\n        }\n        /**\n         * If using overlay inline\n         * we potentially need to use the coreDelegate\n         * so that this works in vanilla JS apps.\n         * If a developer has presented this component\n         * via a controller, then we can assume\n         * the component is already in the\n         * correct place.\n         */\n        const parentEl = this.el.parentNode;\n        const inline = (this.inline = parentEl !== null && !this.hasController);\n        const delegate = (this.workingDelegate = inline ? this.delegate || this.coreDelegate : this.delegate);\n        return { inline, delegate };\n    }\n    /**\n     * Determines whether or not the\n     * modal is allowed to dismiss based\n     * on the state of the canDismiss prop.\n     */\n    async checkCanDismiss(data, role) {\n        const { canDismiss } = this;\n        if (typeof canDismiss === 'function') {\n            return canDismiss(data, role);\n        }\n        return canDismiss;\n    }\n    /**\n     * Present the modal overlay after it has been created.\n     */\n    async present() {\n        const unlock = await this.lockController.lock();\n        if (this.presented) {\n            unlock();\n            return;\n        }\n        const { presentingElement, el } = this;\n        /**\n         * If the modal is presented multiple times (inline modals), we\n         * need to reset the current breakpoint to the initial breakpoint.\n         */\n        this.currentBreakpoint = this.initialBreakpoint;\n        const { inline, delegate } = this.getDelegate(true);\n        /**\n         * Emit ionMount so JS Frameworks have an opportunity\n         * to add the child component to the DOM. The child\n         * component will be assigned to this.usersElement below.\n         */\n        this.ionMount.emit();\n        this.usersElement = await attachComponent(delegate, el, this.component, ['ion-page'], this.componentProps, inline);\n        /**\n         * When using the lazy loaded build of Stencil, we need to wait\n         * for every Stencil component instance to be ready before presenting\n         * otherwise there can be a flash of unstyled content. With the\n         * custom elements bundle we need to wait for the JS framework\n         * mount the inner contents of the overlay otherwise WebKit may\n         * get the transition incorrect.\n         */\n        if (hasLazyBuild(el)) {\n            await deepReady(this.usersElement);\n            /**\n             * If keepContentsMounted=\"true\" then the\n             * JS Framework has already mounted the inner\n             * contents so there is no need to wait.\n             * Otherwise, we need to wait for the JS\n             * Framework to mount the inner contents\n             * of this component.\n             */\n        }\n        else if (!this.keepContentsMounted) {\n            await waitForMount();\n        }\n        writeTask(() => this.el.classList.add('show-modal'));\n        const hasCardModal = presentingElement !== undefined;\n        /**\n         * We need to change the status bar at the\n         * start of the animation so that it completes\n         * by the time the card animation is done.\n         */\n        if (hasCardModal && getIonMode(this) === 'ios') {\n            // Cache the original status bar color before the modal is presented\n            this.statusBarStyle = await StatusBar.getStyle();\n            setCardStatusBarDark();\n        }\n        await present(this, 'modalEnter', iosEnterAnimation, mdEnterAnimation, {\n            presentingEl: presentingElement,\n            currentBreakpoint: this.initialBreakpoint,\n            backdropBreakpoint: this.backdropBreakpoint,\n            expandToScroll: this.expandToScroll,\n        });\n        /* tslint:disable-next-line */\n        if (typeof window !== 'undefined') {\n            /**\n             * This needs to be setup before any\n             * non-transition async work so it can be dereferenced\n             * in the dismiss method. The dismiss method\n             * only waits for the entering transition\n             * to finish. It does not wait for all of the `present`\n             * method to resolve.\n             */\n            this.keyboardOpenCallback = () => {\n                if (this.gesture) {\n                    /**\n                     * When the native keyboard is opened and the webview\n                     * is resized, the gesture implementation will become unresponsive\n                     * and enter a free-scroll mode.\n                     *\n                     * When the keyboard is opened, we disable the gesture for\n                     * a single frame and re-enable once the contents have repositioned\n                     * from the keyboard placement.\n                     */\n                    this.gesture.enable(false);\n                    raf(() => {\n                        if (this.gesture) {\n                            this.gesture.enable(true);\n                        }\n                    });\n                }\n            };\n            window.addEventListener(KEYBOARD_DID_OPEN, this.keyboardOpenCallback);\n        }\n        if (this.isSheetModal) {\n            this.initSheetGesture();\n        }\n        else if (hasCardModal) {\n            this.initSwipeToClose();\n        }\n        // Initialize view transition listener for iOS card modals\n        this.initViewTransitionListener();\n        unlock();\n    }\n    initSwipeToClose() {\n        var _a;\n        if (getIonMode(this) !== 'ios') {\n            return;\n        }\n        const { el } = this;\n        // All of the elements needed for the swipe gesture\n        // should be in the DOM and referenced by now, except\n        // for the presenting el\n        const animationBuilder = this.leaveAnimation || config.get('modalLeave', iosLeaveAnimation);\n        const ani = (this.animation = animationBuilder(el, {\n            presentingEl: this.presentingElement,\n            expandToScroll: this.expandToScroll,\n        }));\n        const contentEl = findIonContent(el);\n        if (!contentEl) {\n            printIonContentErrorMsg(el);\n            return;\n        }\n        const statusBarStyle = (_a = this.statusBarStyle) !== null && _a !== void 0 ? _a : Style.Default;\n        this.gesture = createSwipeToCloseGesture(el, ani, statusBarStyle, () => {\n            /**\n             * While the gesture animation is finishing\n             * it is possible for a user to tap the backdrop.\n             * This would result in the dismiss animation\n             * being played again. Typically this is avoided\n             * by setting `presented = false` on the overlay\n             * component; however, we cannot do that here as\n             * that would prevent the element from being\n             * removed from the DOM.\n             */\n            this.gestureAnimationDismissing = true;\n            /**\n             * Reset the status bar style as the dismiss animation\n             * starts otherwise the status bar will be the wrong\n             * color for the duration of the dismiss animation.\n             * The dismiss method does this as well, but\n             * in this case it's only called once the animation\n             * has finished.\n             */\n            setCardStatusBarDefault(this.statusBarStyle);\n            this.animation.onFinish(async () => {\n                await this.dismiss(undefined, GESTURE);\n                this.gestureAnimationDismissing = false;\n            });\n        });\n        this.gesture.enable(true);\n    }\n    initSheetGesture() {\n        const { wrapperEl, initialBreakpoint, backdropBreakpoint } = this;\n        if (!wrapperEl || initialBreakpoint === undefined) {\n            return;\n        }\n        const animationBuilder = this.enterAnimation || config.get('modalEnter', iosEnterAnimation);\n        const ani = (this.animation = animationBuilder(this.el, {\n            presentingEl: this.presentingElement,\n            currentBreakpoint: initialBreakpoint,\n            backdropBreakpoint,\n            expandToScroll: this.expandToScroll,\n        }));\n        ani.progressStart(true, 1);\n        const { gesture, moveSheetToBreakpoint } = createSheetGesture(this.el, this.backdropEl, wrapperEl, initialBreakpoint, backdropBreakpoint, ani, this.sortedBreakpoints, this.expandToScroll, () => { var _a; return (_a = this.currentBreakpoint) !== null && _a !== void 0 ? _a : 0; }, () => this.sheetOnDismiss(), (breakpoint) => {\n            if (this.currentBreakpoint !== breakpoint) {\n                this.currentBreakpoint = breakpoint;\n                this.ionBreakpointDidChange.emit({ breakpoint });\n            }\n        });\n        this.gesture = gesture;\n        this.moveSheetToBreakpoint = moveSheetToBreakpoint;\n        this.gesture.enable(true);\n    }\n    sheetOnDismiss() {\n        /**\n         * While the gesture animation is finishing\n         * it is possible for a user to tap the backdrop.\n         * This would result in the dismiss animation\n         * being played again. Typically this is avoided\n         * by setting `presented = false` on the overlay\n         * component; however, we cannot do that here as\n         * that would prevent the element from being\n         * removed from the DOM.\n         */\n        this.gestureAnimationDismissing = true;\n        this.animation.onFinish(async () => {\n            this.currentBreakpoint = 0;\n            this.ionBreakpointDidChange.emit({ breakpoint: this.currentBreakpoint });\n            await this.dismiss(undefined, GESTURE);\n            this.gestureAnimationDismissing = false;\n        });\n    }\n    /**\n     * Dismiss the modal overlay after it has been presented.\n     * This is a no-op if the overlay has not been presented yet. If you want\n     * to remove an overlay from the DOM that was never presented, use the\n     * [remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the modal.\n     * For example, `cancel` or `backdrop`.\n     */\n    async dismiss(data, role) {\n        var _a;\n        if (this.gestureAnimationDismissing && role !== GESTURE) {\n            return false;\n        }\n        /**\n         * Because the canDismiss check below is async,\n         * we need to claim a lock before the check happens,\n         * in case the dismiss transition does run.\n         */\n        const unlock = await this.lockController.lock();\n        /**\n         * If a canDismiss handler is responsible\n         * for calling the dismiss method, we should\n         * not run the canDismiss check again.\n         */\n        if (role !== 'handler' && !(await this.checkCanDismiss(data, role))) {\n            unlock();\n            return false;\n        }\n        const { presentingElement } = this;\n        /**\n         * We need to start the status bar change\n         * before the animation so that the change\n         * finishes when the dismiss animation does.\n         */\n        const hasCardModal = presentingElement !== undefined;\n        if (hasCardModal && getIonMode(this) === 'ios') {\n            setCardStatusBarDefault(this.statusBarStyle);\n        }\n        /* tslint:disable-next-line */\n        if (typeof window !== 'undefined' && this.keyboardOpenCallback) {\n            window.removeEventListener(KEYBOARD_DID_OPEN, this.keyboardOpenCallback);\n            this.keyboardOpenCallback = undefined;\n        }\n        const dismissed = await dismiss(this, data, role, 'modalLeave', iosLeaveAnimation, mdLeaveAnimation, {\n            presentingEl: presentingElement,\n            currentBreakpoint: (_a = this.currentBreakpoint) !== null && _a !== void 0 ? _a : this.initialBreakpoint,\n            backdropBreakpoint: this.backdropBreakpoint,\n            expandToScroll: this.expandToScroll,\n        });\n        if (dismissed) {\n            const { delegate } = this.getDelegate();\n            await detachComponent(delegate, this.usersElement);\n            writeTask(() => this.el.classList.remove('show-modal'));\n            if (this.animation) {\n                this.animation.destroy();\n            }\n            if (this.gesture) {\n                this.gesture.destroy();\n            }\n            this.cleanupViewTransitionListener();\n        }\n        this.currentBreakpoint = undefined;\n        this.animation = undefined;\n        unlock();\n        return dismissed;\n    }\n    /**\n     * Returns a promise that resolves when the modal did dismiss.\n     */\n    onDidDismiss() {\n        return eventMethod(this.el, 'ionModalDidDismiss');\n    }\n    /**\n     * Returns a promise that resolves when the modal will dismiss.\n     */\n    onWillDismiss() {\n        return eventMethod(this.el, 'ionModalWillDismiss');\n    }\n    /**\n     * Move a sheet style modal to a specific breakpoint.\n     *\n     * @param breakpoint The breakpoint value to move the sheet modal to.\n     * Must be a value defined in your `breakpoints` array.\n     */\n    async setCurrentBreakpoint(breakpoint) {\n        if (!this.isSheetModal) {\n            printIonWarning('[ion-modal] - setCurrentBreakpoint is only supported on sheet modals.');\n            return;\n        }\n        if (!this.breakpoints.includes(breakpoint)) {\n            printIonWarning(`[ion-modal] - Attempted to set invalid breakpoint value ${breakpoint}. Please double check that the breakpoint value is part of your defined breakpoints.`);\n            return;\n        }\n        const { currentBreakpoint, moveSheetToBreakpoint, canDismiss, breakpoints, animated } = this;\n        if (currentBreakpoint === breakpoint) {\n            return;\n        }\n        if (moveSheetToBreakpoint) {\n            this.sheetTransition = moveSheetToBreakpoint({\n                breakpoint,\n                breakpointOffset: 1 - currentBreakpoint,\n                canDismiss: canDismiss !== undefined && canDismiss !== true && breakpoints[0] === 0,\n                animated,\n            });\n            await this.sheetTransition;\n            this.sheetTransition = undefined;\n        }\n    }\n    /**\n     * Returns the current breakpoint of a sheet style modal\n     */\n    async getCurrentBreakpoint() {\n        return this.currentBreakpoint;\n    }\n    async moveToNextBreakpoint() {\n        const { breakpoints, currentBreakpoint } = this;\n        if (!breakpoints || currentBreakpoint == null) {\n            /**\n             * If the modal does not have breakpoints and/or the current\n             * breakpoint is not set, we can't move to the next breakpoint.\n             */\n            return false;\n        }\n        const allowedBreakpoints = breakpoints.filter((b) => b !== 0);\n        const currentBreakpointIndex = allowedBreakpoints.indexOf(currentBreakpoint);\n        const nextBreakpointIndex = (currentBreakpointIndex + 1) % allowedBreakpoints.length;\n        const nextBreakpoint = allowedBreakpoints[nextBreakpointIndex];\n        /**\n         * Sets the current breakpoint to the next available breakpoint.\n         * If the current breakpoint is the last breakpoint, we set the current\n         * breakpoint to the first non-zero breakpoint to avoid dismissing the sheet.\n         */\n        await this.setCurrentBreakpoint(nextBreakpoint);\n        return true;\n    }\n    initViewTransitionListener() {\n        // Only enable for iOS card modals when no custom animations are provided\n        if (getIonMode(this) !== 'ios' || !this.presentingElement || this.enterAnimation || this.leaveAnimation) {\n            return;\n        }\n        // Set initial view state\n        this.currentViewIsPortrait = window.innerWidth < 768;\n    }\n    handleViewTransition() {\n        const isPortrait = window.innerWidth < 768;\n        // Only transition if view state actually changed\n        if (this.currentViewIsPortrait === isPortrait) {\n            return;\n        }\n        // Cancel any ongoing transition animation\n        if (this.viewTransitionAnimation) {\n            this.viewTransitionAnimation.destroy();\n            this.viewTransitionAnimation = undefined;\n        }\n        const { presentingElement } = this;\n        if (!presentingElement) {\n            return;\n        }\n        // Create transition animation\n        let transitionAnimation;\n        if (this.currentViewIsPortrait && !isPortrait) {\n            // Portrait to landscape transition\n            transitionAnimation = portraitToLandscapeTransition(this.el, {\n                presentingEl: presentingElement});\n        }\n        else {\n            // Landscape to portrait transition\n            transitionAnimation = landscapeToPortraitTransition(this.el, {\n                presentingEl: presentingElement});\n        }\n        // Update state and play animation\n        this.currentViewIsPortrait = isPortrait;\n        this.viewTransitionAnimation = transitionAnimation;\n        transitionAnimation.play().then(() => {\n            this.viewTransitionAnimation = undefined;\n            // After orientation transition, recreate the swipe-to-close gesture\n            // with updated animation that reflects the new presenting element state\n            this.reinitSwipeToClose();\n        });\n    }\n    cleanupViewTransitionListener() {\n        // Clear any pending resize timeout\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n            this.resizeTimeout = undefined;\n        }\n        if (this.viewTransitionAnimation) {\n            this.viewTransitionAnimation.destroy();\n            this.viewTransitionAnimation = undefined;\n        }\n    }\n    reinitSwipeToClose() {\n        // Only reinitialize if we have a presenting element and are on iOS\n        if (getIonMode(this) !== 'ios' || !this.presentingElement) {\n            return;\n        }\n        // Clean up existing gesture and animation\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        if (this.animation) {\n            // Properly end the progress-based animation at initial state before destroying\n            // to avoid leaving modal in intermediate swipe position\n            this.animation.progressEnd(0, 0, 0);\n            this.animation.destroy();\n            this.animation = undefined;\n        }\n        // Force the modal back to the correct position or it could end up\n        // in a weird state after destroying the animation\n        raf(() => {\n            this.ensureCorrectModalPosition();\n            this.initSwipeToClose();\n        });\n    }\n    ensureCorrectModalPosition() {\n        const { el, presentingElement } = this;\n        const root = getElementRoot(el);\n        const wrapperEl = root.querySelector('.modal-wrapper');\n        if (wrapperEl) {\n            wrapperEl.style.transform = 'translateY(0vh)';\n            wrapperEl.style.opacity = '1';\n        }\n        if (presentingElement) {\n            const isPortrait = window.innerWidth < 768;\n            if (isPortrait) {\n                const transformOffset = !CSS.supports('width', 'max(0px, 1px)')\n                    ? '30px'\n                    : 'max(30px, var(--ion-safe-area-top))';\n                const scale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n                presentingElement.style.transform = `translateY(${transformOffset}) scale(${scale})`;\n            }\n            else {\n                presentingElement.style.transform = 'translateY(0px) scale(1)';\n            }\n        }\n    }\n    render() {\n        const { handle, isSheetModal, presentingElement, htmlAttributes, handleBehavior, inheritedAttributes, focusTrap, expandToScroll, } = this;\n        const showHandle = handle !== false && isSheetModal;\n        const mode = getIonMode(this);\n        const isCardModal = presentingElement !== undefined && mode === 'ios';\n        const isHandleCycle = handleBehavior === 'cycle';\n        const isSheetModalWithHandle = isSheetModal && showHandle;\n        return (h(Host, Object.assign({ key: '1980fa23331381c568a2be8091d888e09754fc52', \"no-router\": true,\n            // Allow the modal to be navigable when the handle is focusable\n            tabIndex: isHandleCycle && isSheetModalWithHandle ? 0 : -1 }, htmlAttributes, { style: {\n                zIndex: `${20000 + this.overlayIndex}`,\n            }, class: Object.assign({ [mode]: true, ['modal-default']: !isCardModal && !isSheetModal, [`modal-card`]: isCardModal, [`modal-sheet`]: isSheetModal, [`modal-no-expand-scroll`]: isSheetModal && !expandToScroll, 'overlay-hidden': true, [FOCUS_TRAP_DISABLE_CLASS]: focusTrap === false }, getClassMap(this.cssClass)), onIonBackdropTap: this.onBackdropTap, onIonModalDidPresent: this.onLifecycle, onIonModalWillPresent: this.onLifecycle, onIonModalWillDismiss: this.onLifecycle, onIonModalDidDismiss: this.onLifecycle, onFocus: this.onModalFocus }), h(\"ion-backdrop\", { key: 'ba94b055c064e2907eabbe6d7a43cb52adff1048', ref: (el) => (this.backdropEl = el), visible: this.showBackdrop, tappable: this.backdropDismiss, part: \"backdrop\" }), mode === 'ios' && h(\"div\", { key: '991f47859250d2143275ebb9b0b01a6ea8c491c0', class: \"modal-shadow\" }), h(\"div\", Object.assign({ key: '02ecf8ac6a5bdb309ff993cc74a3911e99502a89',\n            /*\n              role and aria-modal must be used on the\n              same element. They must also be set inside the\n              shadow DOM otherwise ion-button will not be highlighted\n              when using VoiceOver: https://bugs.webkit.org/show_bug.cgi?id=247134\n            */\n            role: \"dialog\" }, inheritedAttributes, { \"aria-modal\": \"true\", class: \"modal-wrapper ion-overlay-wrapper\", part: \"content\", ref: (el) => (this.wrapperEl = el) }), showHandle && (h(\"button\", { key: '0180a4d6952e41bfd736272d1a49d47d86ca7fef', class: \"modal-handle\",\n            // Prevents the handle from receiving keyboard focus when it does not cycle\n            tabIndex: !isHandleCycle ? -1 : 0, \"aria-label\": \"Activate to adjust the size of the dialog overlaying the screen\", onClick: isHandleCycle ? this.onHandleClick : undefined, part: \"handle\", ref: (el) => (this.dragHandleEl = el) })), h(\"slot\", { key: 'd062f330675f730ad70c23267baed200ca9b43b0' }))));\n    }\n    get el() { return this; }\n    static get watchers() { return {\n        \"isOpen\": [\"onIsOpenChange\"],\n        \"trigger\": [\"triggerChanged\"]\n    }; }\n    static get style() { return {\n        ios: modalIosCss,\n        md: modalMdCss\n    }; }\n}, [33, \"ion-modal\", {\n        \"hasController\": [4, \"has-controller\"],\n        \"overlayIndex\": [2, \"overlay-index\"],\n        \"delegate\": [16],\n        \"keyboardClose\": [4, \"keyboard-close\"],\n        \"enterAnimation\": [16, \"enter-animation\"],\n        \"leaveAnimation\": [16, \"leave-animation\"],\n        \"breakpoints\": [16],\n        \"expandToScroll\": [4, \"expand-to-scroll\"],\n        \"initialBreakpoint\": [2, \"initial-breakpoint\"],\n        \"backdropBreakpoint\": [2, \"backdrop-breakpoint\"],\n        \"handle\": [4],\n        \"handleBehavior\": [1, \"handle-behavior\"],\n        \"component\": [1],\n        \"componentProps\": [16, \"component-props\"],\n        \"cssClass\": [1, \"css-class\"],\n        \"backdropDismiss\": [4, \"backdrop-dismiss\"],\n        \"showBackdrop\": [4, \"show-backdrop\"],\n        \"animated\": [4],\n        \"presentingElement\": [16, \"presenting-element\"],\n        \"htmlAttributes\": [16, \"html-attributes\"],\n        \"isOpen\": [4, \"is-open\"],\n        \"trigger\": [1],\n        \"keepContentsMounted\": [4, \"keep-contents-mounted\"],\n        \"focusTrap\": [4, \"focus-trap\"],\n        \"canDismiss\": [4, \"can-dismiss\"],\n        \"presented\": [32],\n        \"present\": [64],\n        \"dismiss\": [64],\n        \"onDidDismiss\": [64],\n        \"onWillDismiss\": [64],\n        \"setCurrentBreakpoint\": [64],\n        \"getCurrentBreakpoint\": [64]\n    }, [[9, \"resize\", \"onWindowResize\"]], {\n        \"isOpen\": [\"onIsOpenChange\"],\n        \"trigger\": [\"triggerChanged\"]\n    }]);\nconst LIFECYCLE_MAP = {\n    ionModalDidPresent: 'ionViewDidEnter',\n    ionModalWillPresent: 'ionViewWillEnter',\n    ionModalWillDismiss: 'ionViewWillLeave',\n    ionModalDidDismiss: 'ionViewDidLeave',\n};\nfunction defineCustomElement() {\n    if (typeof customElements === \"undefined\") {\n        return;\n    }\n    const components = [\"ion-modal\", \"ion-backdrop\"];\n    components.forEach(tagName => { switch (tagName) {\n        case \"ion-modal\":\n            if (!customElements.get(tagName)) {\n                customElements.define(tagName, Modal);\n            }\n            break;\n        case \"ion-backdrop\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$1();\n            }\n            break;\n    } });\n}\n\nexport { Modal as M, defineCustomElement as d };\n","import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { ViewContainerRef, Component, Attribute, Optional, SkipSelf, ViewChild, ChangeDetectionStrategy, Directive, ContentChild, ContentChildren, inject, Injector, EnvironmentInjector, Injectable, makeEnvironmentProviders, APP_INITIALIZER, forwardRef, HostListener } from '@angular/core';\nimport * as i2$1 from '@ionic/angular/common';\nimport { IonRouterOutlet as IonRouterOutlet$1, ProxyCmp as ProxyCmp$1, IonBackButton as IonBackButton$1, IonModal as IonModal$1, IonPopover as IonPopover$1, RouterLinkDelegateDirective, RouterLinkWithHrefDelegateDirective, IonTabs as IonTabs$1, OverlayBaseController, AngularDelegate, ConfigToken, provideComponentInputBinding, MenuController as MenuController$1, IonNav as IonNav$1, ValueAccessor, setIonicClasses } from '@ionic/angular/common';\nexport { Config, DomController, IonicRouteStrategy, NavController, NavParams, Platform } from '@ionic/angular/common';\nimport { defineCustomElement as defineCustomElement$2 } from '@ionic/core/components/ion-back-button.js';\nimport { defineCustomElement as defineCustomElement$1 } from '@ionic/core/components/ion-router-outlet.js';\nimport * as i1 from '@angular/common';\nimport { CommonModule, NgIf, DOCUMENT } from '@angular/common';\nimport * as i2 from '@angular/router';\nimport { defineCustomElement as defineCustomElement$3 } from '@ionic/core/components/ion-modal.js';\nimport { defineCustomElement as defineCustomElement$4 } from '@ionic/core/components/ion-popover.js';\nimport { fromEvent } from 'rxjs';\nimport { defineCustomElement as defineCustomElement$5 } from '@ionic/core/components/ion-accordion.js';\nimport { defineCustomElement as defineCustomElement$6 } from '@ionic/core/components/ion-accordion-group.js';\nimport { defineCustomElement as defineCustomElement$7 } from '@ionic/core/components/ion-action-sheet.js';\nimport { defineCustomElement as defineCustomElement$8 } from '@ionic/core/components/ion-alert.js';\nimport { defineCustomElement as defineCustomElement$9 } from '@ionic/core/components/ion-app.js';\nimport { defineCustomElement as defineCustomElement$a } from '@ionic/core/components/ion-avatar.js';\nimport { defineCustomElement as defineCustomElement$b } from '@ionic/core/components/ion-backdrop.js';\nimport { defineCustomElement as defineCustomElement$c } from '@ionic/core/components/ion-badge.js';\nimport { defineCustomElement as defineCustomElement$d } from '@ionic/core/components/ion-breadcrumb.js';\nimport { defineCustomElement as defineCustomElement$e } from '@ionic/core/components/ion-breadcrumbs.js';\nimport { defineCustomElement as defineCustomElement$f } from '@ionic/core/components/ion-button.js';\nimport { defineCustomElement as defineCustomElement$g } from '@ionic/core/components/ion-buttons.js';\nimport { defineCustomElement as defineCustomElement$h } from '@ionic/core/components/ion-card.js';\nimport { defineCustomElement as defineCustomElement$i } from '@ionic/core/components/ion-card-content.js';\nimport { defineCustomElement as defineCustomElement$j } from '@ionic/core/components/ion-card-header.js';\nimport { defineCustomElement as defineCustomElement$k } from '@ionic/core/components/ion-card-subtitle.js';\nimport { defineCustomElement as defineCustomElement$l } from '@ionic/core/components/ion-card-title.js';\nimport { defineCustomElement as defineCustomElement$m } from '@ionic/core/components/ion-chip.js';\nimport { defineCustomElement as defineCustomElement$n } from '@ionic/core/components/ion-col.js';\nimport { defineCustomElement as defineCustomElement$o } from '@ionic/core/components/ion-content.js';\nimport { defineCustomElement as defineCustomElement$p } from '@ionic/core/components/ion-datetime-button.js';\nimport { defineCustomElement as defineCustomElement$q } from '@ionic/core/components/ion-fab.js';\nimport { defineCustomElement as defineCustomElement$r } from '@ionic/core/components/ion-fab-button.js';\nimport { defineCustomElement as defineCustomElement$s } from '@ionic/core/components/ion-fab-list.js';\nimport { defineCustomElement as defineCustomElement$t } from '@ionic/core/components/ion-footer.js';\nimport { defineCustomElement as defineCustomElement$u } from '@ionic/core/components/ion-grid.js';\nimport { defineCustomElement as defineCustomElement$v } from '@ionic/core/components/ion-header.js';\nimport { defineCustomElement as defineCustomElement$w } from '@ionic/core/components/ion-img.js';\nimport { defineCustomElement as defineCustomElement$x } from '@ionic/core/components/ion-infinite-scroll.js';\nimport { defineCustomElement as defineCustomElement$y } from '@ionic/core/components/ion-infinite-scroll-content.js';\nimport { defineCustomElement as defineCustomElement$z } from '@ionic/core/components/ion-input-password-toggle.js';\nimport { defineCustomElement as defineCustomElement$A } from '@ionic/core/components/ion-item.js';\nimport { defineCustomElement as defineCustomElement$B } from '@ionic/core/components/ion-item-divider.js';\nimport { defineCustomElement as defineCustomElement$C } from '@ionic/core/components/ion-item-group.js';\nimport { defineCustomElement as defineCustomElement$D } from '@ionic/core/components/ion-item-option.js';\nimport { defineCustomElement as defineCustomElement$E } from '@ionic/core/components/ion-item-options.js';\nimport { defineCustomElement as defineCustomElement$F } from '@ionic/core/components/ion-item-sliding.js';\nimport { defineCustomElement as defineCustomElement$G } from '@ionic/core/components/ion-label.js';\nimport { defineCustomElement as defineCustomElement$H } from '@ionic/core/components/ion-list.js';\nimport { defineCustomElement as defineCustomElement$I } from '@ionic/core/components/ion-list-header.js';\nimport { defineCustomElement as defineCustomElement$J } from '@ionic/core/components/ion-loading.js';\nimport { defineCustomElement as defineCustomElement$K } from '@ionic/core/components/ion-menu.js';\nimport { defineCustomElement as defineCustomElement$L } from '@ionic/core/components/ion-menu-button.js';\nimport { defineCustomElement as defineCustomElement$M } from '@ionic/core/components/ion-menu-toggle.js';\nimport { defineCustomElement as defineCustomElement$N } from '@ionic/core/components/ion-nav-link.js';\nimport { defineCustomElement as defineCustomElement$O } from '@ionic/core/components/ion-note.js';\nimport { defineCustomElement as defineCustomElement$P } from '@ionic/core/components/ion-picker.js';\nimport { defineCustomElement as defineCustomElement$Q } from '@ionic/core/components/ion-picker-column.js';\nimport { defineCustomElement as defineCustomElement$R } from '@ionic/core/components/ion-picker-column-option.js';\nimport { defineCustomElement as defineCustomElement$S } from '@ionic/core/components/ion-picker-legacy.js';\nimport { defineCustomElement as defineCustomElement$T } from '@ionic/core/components/ion-progress-bar.js';\nimport { defineCustomElement as defineCustomElement$U } from '@ionic/core/components/ion-radio.js';\nimport { defineCustomElement as defineCustomElement$V } from '@ionic/core/components/ion-refresher.js';\nimport { defineCustomElement as defineCustomElement$W } from '@ionic/core/components/ion-refresher-content.js';\nimport { defineCustomElement as defineCustomElement$X } from '@ionic/core/components/ion-reorder.js';\nimport { defineCustomElement as defineCustomElement$Y } from '@ionic/core/components/ion-reorder-group.js';\nimport { defineCustomElement as defineCustomElement$Z } from '@ionic/core/components/ion-ripple-effect.js';\nimport { defineCustomElement as defineCustomElement$_ } from '@ionic/core/components/ion-row.js';\nimport { defineCustomElement as defineCustomElement$$ } from '@ionic/core/components/ion-segment-button.js';\nimport { defineCustomElement as defineCustomElement$10 } from '@ionic/core/components/ion-segment-content.js';\nimport { defineCustomElement as defineCustomElement$11 } from '@ionic/core/components/ion-segment-view.js';\nimport { defineCustomElement as defineCustomElement$12 } from '@ionic/core/components/ion-select-modal.js';\nimport { defineCustomElement as defineCustomElement$13 } from '@ionic/core/components/ion-select-option.js';\nimport { defineCustomElement as defineCustomElement$14 } from '@ionic/core/components/ion-skeleton-text.js';\nimport { defineCustomElement as defineCustomElement$15 } from '@ionic/core/components/ion-spinner.js';\nimport { defineCustomElement as defineCustomElement$16 } from '@ionic/core/components/ion-split-pane.js';\nimport { defineCustomElement as defineCustomElement$17 } from '@ionic/core/components/ion-tab.js';\nimport { defineCustomElement as defineCustomElement$18 } from '@ionic/core/components/ion-tab-bar.js';\nimport { defineCustomElement as defineCustomElement$19 } from '@ionic/core/components/ion-tab-button.js';\nimport { defineCustomElement as defineCustomElement$1a } from '@ionic/core/components/ion-text.js';\nimport { defineCustomElement as defineCustomElement$1b } from '@ionic/core/components/ion-thumbnail.js';\nimport { defineCustomElement as defineCustomElement$1c } from '@ionic/core/components/ion-title.js';\nimport { defineCustomElement as defineCustomElement$1d } from '@ionic/core/components/ion-toast.js';\nimport { defineCustomElement as defineCustomElement$1e } from '@ionic/core/components/ion-toolbar.js';\nimport { modalController, popoverController, initialize, actionSheetController, alertController, createAnimation, getTimeGivenProgression, createGesture, loadingController, menuController, pickerController, toastController } from '@ionic/core/components';\nexport { IonicSafeString, IonicSlides, createAnimation, createGesture, getPlatforms, getTimeGivenProgression, iosTransitionAnimation, isPlatform, mdTransitionAnimation } from '@ionic/core/components';\nimport { defineCustomElement as defineCustomElement$1f } from '@ionic/core/components/ion-nav.js';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { defineCustomElement as defineCustomElement$1g } from '@ionic/core/components/ion-checkbox.js';\nimport { defineCustomElement as defineCustomElement$1h } from '@ionic/core/components/ion-datetime.js';\nimport { defineCustomElement as defineCustomElement$1i } from 'ionicons/components/ion-icon.js';\nimport { defineCustomElement as defineCustomElement$1j } from '@ionic/core/components/ion-input.js';\nimport { defineCustomElement as defineCustomElement$1k } from '@ionic/core/components/ion-input-otp.js';\nimport { defineCustomElement as defineCustomElement$1l } from '@ionic/core/components/ion-radio-group.js';\nimport { defineCustomElement as defineCustomElement$1m } from '@ionic/core/components/ion-range.js';\nimport { defineCustomElement as defineCustomElement$1n } from '@ionic/core/components/ion-searchbar.js';\nimport { defineCustomElement as defineCustomElement$1o } from '@ionic/core/components/ion-segment.js';\nimport { defineCustomElement as defineCustomElement$1p } from '@ionic/core/components/ion-select.js';\nimport { defineCustomElement as defineCustomElement$1q } from '@ionic/core/components/ion-textarea.js';\nimport { defineCustomElement as defineCustomElement$1r } from '@ionic/core/components/ion-toggle.js';\n\nlet IonRouterOutlet = class IonRouterOutlet extends IonRouterOutlet$1 {\n    parentOutlet;\n    /**\n     * `static: true` must be set so the query results are resolved\n     * before change detection runs. Otherwise, the view container\n     * ref will be ion-router-outlet instead of ng-container, and\n     * the first view will be added as a sibling of ion-router-outlet\n     * instead of a child.\n     */\n    outletContent;\n    /**\n     * We need to pass in the correct instance of IonRouterOutlet\n     * otherwise parentOutlet will be null in a nested outlet context.\n     * This results in APIs such as NavController.pop not working\n     * in nested outlets because the parent outlet cannot be found.\n     */\n    constructor(name, tabs, commonLocation, elementRef, router, zone, activatedRoute, parentOutlet) {\n        super(name, tabs, commonLocation, elementRef, router, zone, activatedRoute, parentOutlet);\n        this.parentOutlet = parentOutlet;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRouterOutlet, deps: [{ token: 'name', attribute: true }, { token: 'tabs', attribute: true, optional: true }, { token: i1.Location }, { token: i0.ElementRef }, { token: i2.Router }, { token: i0.NgZone }, { token: i2.ActivatedRoute }, { token: IonRouterOutlet, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonRouterOutlet, isStandalone: true, selector: \"ion-router-outlet\", viewQueries: [{ propertyName: \"outletContent\", first: true, predicate: [\"outletContent\"], descendants: true, read: ViewContainerRef, static: true }], usesInheritance: true, ngImport: i0, template: '<ng-container #outletContent><ng-content></ng-content></ng-container>', isInline: true });\n};\nIonRouterOutlet = __decorate([\n    ProxyCmp$1({\n        defineCustomElementFn: defineCustomElement$1,\n    })\n], IonRouterOutlet);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRouterOutlet, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-router-outlet',\n                    standalone: true,\n                    template: '<ng-container #outletContent><ng-content></ng-content></ng-container>',\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['name']\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Attribute,\n                    args: ['tabs']\n                }] }, { type: i1.Location }, { type: i0.ElementRef }, { type: i2.Router }, { type: i0.NgZone }, { type: i2.ActivatedRoute }, { type: IonRouterOutlet, decorators: [{\n                    type: SkipSelf\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { outletContent: [{\n                type: ViewChild,\n                args: ['outletContent', { read: ViewContainerRef, static: true }]\n            }] } });\n\nlet IonBackButton = class IonBackButton extends IonBackButton$1 {\n    constructor(routerOutlet, navCtrl, config, r, z, c) {\n        super(routerOutlet, navCtrl, config, r, z, c);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonBackButton, deps: [{ token: IonRouterOutlet, optional: true }, { token: i2$1.NavController }, { token: i2$1.Config }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonBackButton, isStandalone: true, selector: \"ion-back-button\", usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonBackButton = __decorate([\n    ProxyCmp$1({\n        defineCustomElementFn: defineCustomElement$2,\n    })\n], IonBackButton);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonBackButton, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-back-button',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: IonRouterOutlet, decorators: [{\n                    type: Optional\n                }] }, { type: i2$1.NavController }, { type: i2$1.Config }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }]; } });\n\nlet IonModal = class IonModal extends IonModal$1 {\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonModal, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonModal, isStandalone: true, selector: \"ion-modal\", usesInheritance: true, ngImport: i0, template: `<div class=\"ion-delegate-host ion-page\" *ngIf=\"isCmpOpen || keepContentsMounted\">\n    <ng-container [ngTemplateOutlet]=\"template\"></ng-container>\n  </div>`, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonModal = __decorate([\n    ProxyCmp$1({\n        defineCustomElementFn: defineCustomElement$3,\n    })\n], IonModal);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonModal, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-modal',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `<div class=\"ion-delegate-host ion-page\" *ngIf=\"isCmpOpen || keepContentsMounted\">\n    <ng-container [ngTemplateOutlet]=\"template\"></ng-container>\n  </div>`,\n                    standalone: true,\n                    imports: [CommonModule],\n                }]\n        }] });\n\nlet IonPopover = class IonPopover extends IonPopover$1 {\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonPopover, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonPopover, isStandalone: true, selector: \"ion-popover\", usesInheritance: true, ngImport: i0, template: `<ng-container [ngTemplateOutlet]=\"template\" *ngIf=\"isCmpOpen || keepContentsMounted\"></ng-container>`, isInline: true, dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonPopover = __decorate([\n    ProxyCmp$1({\n        defineCustomElementFn: defineCustomElement$4,\n    })\n], IonPopover);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonPopover, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-popover',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: `<ng-container [ngTemplateOutlet]=\"template\" *ngIf=\"isCmpOpen || keepContentsMounted\"></ng-container>`,\n                    standalone: true,\n                    imports: [CommonModule],\n                }]\n        }] });\n\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass IonRouterLink extends RouterLinkDelegateDirective {\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRouterLink, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    /** @nocollapse */ static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonRouterLink, isStandalone: true, selector: \":not(a):not(area)[routerLink]\", usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRouterLink, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: ':not(a):not(area)[routerLink]',\n                    standalone: true,\n                }]\n        }] });\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass IonRouterLinkWithHref extends RouterLinkWithHrefDelegateDirective {\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRouterLinkWithHref, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    /** @nocollapse */ static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonRouterLinkWithHref, isStandalone: true, selector: \"a[routerLink],area[routerLink]\", usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRouterLinkWithHref, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'a[routerLink],area[routerLink]',\n                    standalone: true,\n                }]\n        }] });\n\n/* eslint-disable */\n/* tslint:disable */\nconst proxyInputs = (Cmp, inputs) => {\n    const Prototype = Cmp.prototype;\n    inputs.forEach((item) => {\n        Object.defineProperty(Prototype, item, {\n            get() {\n                return this.el[item];\n            },\n            set(val) {\n                this.z.runOutsideAngular(() => (this.el[item] = val));\n            },\n            /**\n             * In the event that proxyInputs is called\n             * multiple times re-defining these inputs\n             * will cause an error to be thrown. As a result\n             * we set configurable: true to indicate these\n             * properties can be changed.\n             */\n            configurable: true,\n        });\n    });\n};\nconst proxyMethods = (Cmp, methods) => {\n    const Prototype = Cmp.prototype;\n    methods.forEach((methodName) => {\n        Prototype[methodName] = function () {\n            const args = arguments;\n            return this.z.runOutsideAngular(() => this.el[methodName].apply(this.el, args));\n        };\n    });\n};\nconst proxyOutputs = (instance, el, events) => {\n    events.forEach((eventName) => (instance[eventName] = fromEvent(el, eventName)));\n};\nconst defineCustomElement = (tagName, customElement) => {\n    if (customElement !== undefined && typeof customElements !== 'undefined' && !customElements.get(tagName)) {\n        customElements.define(tagName, customElement);\n    }\n};\n// tslint:disable-next-line: only-arrow-functions\nfunction ProxyCmp(opts) {\n    const decorator = function (cls) {\n        const { defineCustomElementFn, inputs, methods } = opts;\n        if (defineCustomElementFn !== undefined) {\n            defineCustomElementFn();\n        }\n        if (inputs) {\n            proxyInputs(cls, inputs);\n        }\n        if (methods) {\n            proxyMethods(cls, methods);\n        }\n        return cls;\n    };\n    return decorator;\n}\n\nlet IonAccordion = class IonAccordion {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonAccordion, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonAccordion, isStandalone: true, selector: \"ion-accordion\", inputs: { disabled: \"disabled\", mode: \"mode\", readonly: \"readonly\", toggleIcon: \"toggleIcon\", toggleIconSlot: \"toggleIconSlot\", value: \"value\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonAccordion = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$5,\n        inputs: ['disabled', 'mode', 'readonly', 'toggleIcon', 'toggleIconSlot', 'value']\n    })\n], IonAccordion);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonAccordion, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-accordion',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['disabled', 'mode', 'readonly', 'toggleIcon', 'toggleIconSlot', 'value'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonAccordionGroup = class IonAccordionGroup {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionChange']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonAccordionGroup, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonAccordionGroup, isStandalone: true, selector: \"ion-accordion-group\", inputs: { animated: \"animated\", disabled: \"disabled\", expand: \"expand\", mode: \"mode\", multiple: \"multiple\", readonly: \"readonly\", value: \"value\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonAccordionGroup = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$6,\n        inputs: ['animated', 'disabled', 'expand', 'mode', 'multiple', 'readonly', 'value']\n    })\n], IonAccordionGroup);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonAccordionGroup, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-accordion-group',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['animated', 'disabled', 'expand', 'mode', 'multiple', 'readonly', 'value'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonActionSheet = class IonActionSheet {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionActionSheetDidPresent', 'ionActionSheetWillPresent', 'ionActionSheetWillDismiss', 'ionActionSheetDidDismiss', 'didPresent', 'willPresent', 'willDismiss', 'didDismiss']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonActionSheet, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonActionSheet, isStandalone: true, selector: \"ion-action-sheet\", inputs: { animated: \"animated\", backdropDismiss: \"backdropDismiss\", buttons: \"buttons\", cssClass: \"cssClass\", enterAnimation: \"enterAnimation\", header: \"header\", htmlAttributes: \"htmlAttributes\", isOpen: \"isOpen\", keyboardClose: \"keyboardClose\", leaveAnimation: \"leaveAnimation\", mode: \"mode\", subHeader: \"subHeader\", translucent: \"translucent\", trigger: \"trigger\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonActionSheet = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$7,\n        inputs: ['animated', 'backdropDismiss', 'buttons', 'cssClass', 'enterAnimation', 'header', 'htmlAttributes', 'isOpen', 'keyboardClose', 'leaveAnimation', 'mode', 'subHeader', 'translucent', 'trigger'],\n        methods: ['present', 'dismiss', 'onDidDismiss', 'onWillDismiss']\n    })\n], IonActionSheet);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonActionSheet, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-action-sheet',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['animated', 'backdropDismiss', 'buttons', 'cssClass', 'enterAnimation', 'header', 'htmlAttributes', 'isOpen', 'keyboardClose', 'leaveAnimation', 'mode', 'subHeader', 'translucent', 'trigger'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonAlert = class IonAlert {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionAlertDidPresent', 'ionAlertWillPresent', 'ionAlertWillDismiss', 'ionAlertDidDismiss', 'didPresent', 'willPresent', 'willDismiss', 'didDismiss']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonAlert, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonAlert, isStandalone: true, selector: \"ion-alert\", inputs: { animated: \"animated\", backdropDismiss: \"backdropDismiss\", buttons: \"buttons\", cssClass: \"cssClass\", enterAnimation: \"enterAnimation\", header: \"header\", htmlAttributes: \"htmlAttributes\", inputs: \"inputs\", isOpen: \"isOpen\", keyboardClose: \"keyboardClose\", leaveAnimation: \"leaveAnimation\", message: \"message\", mode: \"mode\", subHeader: \"subHeader\", translucent: \"translucent\", trigger: \"trigger\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonAlert = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$8,\n        inputs: ['animated', 'backdropDismiss', 'buttons', 'cssClass', 'enterAnimation', 'header', 'htmlAttributes', 'inputs', 'isOpen', 'keyboardClose', 'leaveAnimation', 'message', 'mode', 'subHeader', 'translucent', 'trigger'],\n        methods: ['present', 'dismiss', 'onDidDismiss', 'onWillDismiss']\n    })\n], IonAlert);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonAlert, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-alert',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['animated', 'backdropDismiss', 'buttons', 'cssClass', 'enterAnimation', 'header', 'htmlAttributes', 'inputs', 'isOpen', 'keyboardClose', 'leaveAnimation', 'message', 'mode', 'subHeader', 'translucent', 'trigger'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonApp = class IonApp {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonApp, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonApp, isStandalone: true, selector: \"ion-app\", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonApp = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$9,\n        methods: ['setFocus']\n    })\n], IonApp);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonApp, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-app',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: [],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonAvatar = class IonAvatar {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonAvatar, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonAvatar, isStandalone: true, selector: \"ion-avatar\", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonAvatar = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$a\n    })\n], IonAvatar);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonAvatar, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-avatar',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: [],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonBackdrop = class IonBackdrop {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionBackdropTap']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonBackdrop, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonBackdrop, isStandalone: true, selector: \"ion-backdrop\", inputs: { stopPropagation: \"stopPropagation\", tappable: \"tappable\", visible: \"visible\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonBackdrop = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$b,\n        inputs: ['stopPropagation', 'tappable', 'visible']\n    })\n], IonBackdrop);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonBackdrop, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-backdrop',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['stopPropagation', 'tappable', 'visible'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonBadge = class IonBadge {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonBadge, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonBadge, isStandalone: true, selector: \"ion-badge\", inputs: { color: \"color\", mode: \"mode\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonBadge = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$c,\n        inputs: ['color', 'mode']\n    })\n], IonBadge);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonBadge, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-badge',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'mode'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonBreadcrumb = class IonBreadcrumb {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionFocus', 'ionBlur']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonBreadcrumb, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonBreadcrumb, isStandalone: true, selector: \"ion-breadcrumb\", inputs: { active: \"active\", color: \"color\", disabled: \"disabled\", download: \"download\", href: \"href\", mode: \"mode\", rel: \"rel\", routerAnimation: \"routerAnimation\", routerDirection: \"routerDirection\", separator: \"separator\", target: \"target\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonBreadcrumb = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$d,\n        inputs: ['active', 'color', 'disabled', 'download', 'href', 'mode', 'rel', 'routerAnimation', 'routerDirection', 'separator', 'target']\n    })\n], IonBreadcrumb);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonBreadcrumb, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-breadcrumb',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['active', 'color', 'disabled', 'download', 'href', 'mode', 'rel', 'routerAnimation', 'routerDirection', 'separator', 'target'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonBreadcrumbs = class IonBreadcrumbs {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionCollapsedClick']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonBreadcrumbs, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonBreadcrumbs, isStandalone: true, selector: \"ion-breadcrumbs\", inputs: { color: \"color\", itemsAfterCollapse: \"itemsAfterCollapse\", itemsBeforeCollapse: \"itemsBeforeCollapse\", maxItems: \"maxItems\", mode: \"mode\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonBreadcrumbs = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$e,\n        inputs: ['color', 'itemsAfterCollapse', 'itemsBeforeCollapse', 'maxItems', 'mode']\n    })\n], IonBreadcrumbs);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonBreadcrumbs, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-breadcrumbs',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'itemsAfterCollapse', 'itemsBeforeCollapse', 'maxItems', 'mode'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonButton = class IonButton {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionFocus', 'ionBlur']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonButton, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonButton, isStandalone: true, selector: \"ion-button\", inputs: { buttonType: \"buttonType\", color: \"color\", disabled: \"disabled\", download: \"download\", expand: \"expand\", fill: \"fill\", form: \"form\", href: \"href\", mode: \"mode\", rel: \"rel\", routerAnimation: \"routerAnimation\", routerDirection: \"routerDirection\", shape: \"shape\", size: \"size\", strong: \"strong\", target: \"target\", type: \"type\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonButton = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$f,\n        inputs: ['buttonType', 'color', 'disabled', 'download', 'expand', 'fill', 'form', 'href', 'mode', 'rel', 'routerAnimation', 'routerDirection', 'shape', 'size', 'strong', 'target', 'type']\n    })\n], IonButton);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonButton, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-button',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['buttonType', 'color', 'disabled', 'download', 'expand', 'fill', 'form', 'href', 'mode', 'rel', 'routerAnimation', 'routerDirection', 'shape', 'size', 'strong', 'target', 'type'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonButtons = class IonButtons {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonButtons, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonButtons, isStandalone: true, selector: \"ion-buttons\", inputs: { collapse: \"collapse\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonButtons = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$g,\n        inputs: ['collapse']\n    })\n], IonButtons);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonButtons, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-buttons',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['collapse'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonCard = class IonCard {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonCard, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonCard, isStandalone: true, selector: \"ion-card\", inputs: { button: \"button\", color: \"color\", disabled: \"disabled\", download: \"download\", href: \"href\", mode: \"mode\", rel: \"rel\", routerAnimation: \"routerAnimation\", routerDirection: \"routerDirection\", target: \"target\", type: \"type\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonCard = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$h,\n        inputs: ['button', 'color', 'disabled', 'download', 'href', 'mode', 'rel', 'routerAnimation', 'routerDirection', 'target', 'type']\n    })\n], IonCard);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonCard, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-card',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['button', 'color', 'disabled', 'download', 'href', 'mode', 'rel', 'routerAnimation', 'routerDirection', 'target', 'type'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonCardContent = class IonCardContent {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonCardContent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonCardContent, isStandalone: true, selector: \"ion-card-content\", inputs: { mode: \"mode\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonCardContent = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$i,\n        inputs: ['mode']\n    })\n], IonCardContent);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonCardContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-card-content',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['mode'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonCardHeader = class IonCardHeader {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonCardHeader, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonCardHeader, isStandalone: true, selector: \"ion-card-header\", inputs: { color: \"color\", mode: \"mode\", translucent: \"translucent\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonCardHeader = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$j,\n        inputs: ['color', 'mode', 'translucent']\n    })\n], IonCardHeader);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonCardHeader, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-card-header',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'mode', 'translucent'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonCardSubtitle = class IonCardSubtitle {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonCardSubtitle, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonCardSubtitle, isStandalone: true, selector: \"ion-card-subtitle\", inputs: { color: \"color\", mode: \"mode\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonCardSubtitle = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$k,\n        inputs: ['color', 'mode']\n    })\n], IonCardSubtitle);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonCardSubtitle, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-card-subtitle',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'mode'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonCardTitle = class IonCardTitle {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonCardTitle, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonCardTitle, isStandalone: true, selector: \"ion-card-title\", inputs: { color: \"color\", mode: \"mode\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonCardTitle = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$l,\n        inputs: ['color', 'mode']\n    })\n], IonCardTitle);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonCardTitle, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-card-title',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'mode'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonChip = class IonChip {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonChip, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonChip, isStandalone: true, selector: \"ion-chip\", inputs: { color: \"color\", disabled: \"disabled\", mode: \"mode\", outline: \"outline\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonChip = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$m,\n        inputs: ['color', 'disabled', 'mode', 'outline']\n    })\n], IonChip);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonChip, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-chip',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'disabled', 'mode', 'outline'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonCol = class IonCol {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonCol, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonCol, isStandalone: true, selector: \"ion-col\", inputs: { offset: \"offset\", offsetLg: \"offsetLg\", offsetMd: \"offsetMd\", offsetSm: \"offsetSm\", offsetXl: \"offsetXl\", offsetXs: \"offsetXs\", pull: \"pull\", pullLg: \"pullLg\", pullMd: \"pullMd\", pullSm: \"pullSm\", pullXl: \"pullXl\", pullXs: \"pullXs\", push: \"push\", pushLg: \"pushLg\", pushMd: \"pushMd\", pushSm: \"pushSm\", pushXl: \"pushXl\", pushXs: \"pushXs\", size: \"size\", sizeLg: \"sizeLg\", sizeMd: \"sizeMd\", sizeSm: \"sizeSm\", sizeXl: \"sizeXl\", sizeXs: \"sizeXs\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonCol = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$n,\n        inputs: ['offset', 'offsetLg', 'offsetMd', 'offsetSm', 'offsetXl', 'offsetXs', 'pull', 'pullLg', 'pullMd', 'pullSm', 'pullXl', 'pullXs', 'push', 'pushLg', 'pushMd', 'pushSm', 'pushXl', 'pushXs', 'size', 'sizeLg', 'sizeMd', 'sizeSm', 'sizeXl', 'sizeXs']\n    })\n], IonCol);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonCol, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-col',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['offset', 'offsetLg', 'offsetMd', 'offsetSm', 'offsetXl', 'offsetXs', 'pull', 'pullLg', 'pullMd', 'pullSm', 'pullXl', 'pullXs', 'push', 'pushLg', 'pushMd', 'pushSm', 'pushXl', 'pushXs', 'size', 'sizeLg', 'sizeMd', 'sizeSm', 'sizeXl', 'sizeXs'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonContent = class IonContent {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionScrollStart', 'ionScroll', 'ionScrollEnd']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonContent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonContent, isStandalone: true, selector: \"ion-content\", inputs: { color: \"color\", fixedSlotPlacement: \"fixedSlotPlacement\", forceOverscroll: \"forceOverscroll\", fullscreen: \"fullscreen\", scrollEvents: \"scrollEvents\", scrollX: \"scrollX\", scrollY: \"scrollY\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonContent = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$o,\n        inputs: ['color', 'fixedSlotPlacement', 'forceOverscroll', 'fullscreen', 'scrollEvents', 'scrollX', 'scrollY'],\n        methods: ['getScrollElement', 'scrollToTop', 'scrollToBottom', 'scrollByPoint', 'scrollToPoint']\n    })\n], IonContent);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-content',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'fixedSlotPlacement', 'forceOverscroll', 'fullscreen', 'scrollEvents', 'scrollX', 'scrollY'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonDatetimeButton = class IonDatetimeButton {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonDatetimeButton, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonDatetimeButton, isStandalone: true, selector: \"ion-datetime-button\", inputs: { color: \"color\", datetime: \"datetime\", disabled: \"disabled\", mode: \"mode\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonDatetimeButton = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$p,\n        inputs: ['color', 'datetime', 'disabled', 'mode']\n    })\n], IonDatetimeButton);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonDatetimeButton, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-datetime-button',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'datetime', 'disabled', 'mode'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonFab = class IonFab {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonFab, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonFab, isStandalone: true, selector: \"ion-fab\", inputs: { activated: \"activated\", edge: \"edge\", horizontal: \"horizontal\", vertical: \"vertical\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonFab = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$q,\n        inputs: ['activated', 'edge', 'horizontal', 'vertical'],\n        methods: ['close']\n    })\n], IonFab);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonFab, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-fab',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['activated', 'edge', 'horizontal', 'vertical'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonFabButton = class IonFabButton {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionFocus', 'ionBlur']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonFabButton, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonFabButton, isStandalone: true, selector: \"ion-fab-button\", inputs: { activated: \"activated\", closeIcon: \"closeIcon\", color: \"color\", disabled: \"disabled\", download: \"download\", href: \"href\", mode: \"mode\", rel: \"rel\", routerAnimation: \"routerAnimation\", routerDirection: \"routerDirection\", show: \"show\", size: \"size\", target: \"target\", translucent: \"translucent\", type: \"type\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonFabButton = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$r,\n        inputs: ['activated', 'closeIcon', 'color', 'disabled', 'download', 'href', 'mode', 'rel', 'routerAnimation', 'routerDirection', 'show', 'size', 'target', 'translucent', 'type']\n    })\n], IonFabButton);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonFabButton, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-fab-button',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['activated', 'closeIcon', 'color', 'disabled', 'download', 'href', 'mode', 'rel', 'routerAnimation', 'routerDirection', 'show', 'size', 'target', 'translucent', 'type'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonFabList = class IonFabList {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonFabList, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonFabList, isStandalone: true, selector: \"ion-fab-list\", inputs: { activated: \"activated\", side: \"side\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonFabList = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$s,\n        inputs: ['activated', 'side']\n    })\n], IonFabList);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonFabList, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-fab-list',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['activated', 'side'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonFooter = class IonFooter {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonFooter, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonFooter, isStandalone: true, selector: \"ion-footer\", inputs: { collapse: \"collapse\", mode: \"mode\", translucent: \"translucent\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonFooter = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$t,\n        inputs: ['collapse', 'mode', 'translucent']\n    })\n], IonFooter);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonFooter, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-footer',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['collapse', 'mode', 'translucent'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonGrid = class IonGrid {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonGrid, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonGrid, isStandalone: true, selector: \"ion-grid\", inputs: { fixed: \"fixed\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonGrid = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$u,\n        inputs: ['fixed']\n    })\n], IonGrid);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonGrid, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-grid',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['fixed'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonHeader = class IonHeader {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonHeader, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonHeader, isStandalone: true, selector: \"ion-header\", inputs: { collapse: \"collapse\", mode: \"mode\", translucent: \"translucent\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonHeader = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$v,\n        inputs: ['collapse', 'mode', 'translucent']\n    })\n], IonHeader);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonHeader, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-header',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['collapse', 'mode', 'translucent'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonImg = class IonImg {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionImgWillLoad', 'ionImgDidLoad', 'ionError']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonImg, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonImg, isStandalone: true, selector: \"ion-img\", inputs: { alt: \"alt\", src: \"src\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonImg = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$w,\n        inputs: ['alt', 'src']\n    })\n], IonImg);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonImg, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-img',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['alt', 'src'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonInfiniteScroll = class IonInfiniteScroll {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionInfinite']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonInfiniteScroll, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonInfiniteScroll, isStandalone: true, selector: \"ion-infinite-scroll\", inputs: { disabled: \"disabled\", position: \"position\", threshold: \"threshold\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonInfiniteScroll = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$x,\n        inputs: ['disabled', 'position', 'threshold'],\n        methods: ['complete']\n    })\n], IonInfiniteScroll);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonInfiniteScroll, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-infinite-scroll',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['disabled', 'position', 'threshold'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonInfiniteScrollContent = class IonInfiniteScrollContent {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonInfiniteScrollContent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonInfiniteScrollContent, isStandalone: true, selector: \"ion-infinite-scroll-content\", inputs: { loadingSpinner: \"loadingSpinner\", loadingText: \"loadingText\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonInfiniteScrollContent = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$y,\n        inputs: ['loadingSpinner', 'loadingText']\n    })\n], IonInfiniteScrollContent);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonInfiniteScrollContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-infinite-scroll-content',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['loadingSpinner', 'loadingText'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonInputPasswordToggle = class IonInputPasswordToggle {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonInputPasswordToggle, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonInputPasswordToggle, isStandalone: true, selector: \"ion-input-password-toggle\", inputs: { color: \"color\", hideIcon: \"hideIcon\", mode: \"mode\", showIcon: \"showIcon\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonInputPasswordToggle = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$z,\n        inputs: ['color', 'hideIcon', 'mode', 'showIcon']\n    })\n], IonInputPasswordToggle);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonInputPasswordToggle, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-input-password-toggle',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'hideIcon', 'mode', 'showIcon'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonItem = class IonItem {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonItem, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonItem, isStandalone: true, selector: \"ion-item\", inputs: { button: \"button\", color: \"color\", detail: \"detail\", detailIcon: \"detailIcon\", disabled: \"disabled\", download: \"download\", href: \"href\", lines: \"lines\", mode: \"mode\", rel: \"rel\", routerAnimation: \"routerAnimation\", routerDirection: \"routerDirection\", target: \"target\", type: \"type\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonItem = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$A,\n        inputs: ['button', 'color', 'detail', 'detailIcon', 'disabled', 'download', 'href', 'lines', 'mode', 'rel', 'routerAnimation', 'routerDirection', 'target', 'type']\n    })\n], IonItem);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonItem, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-item',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['button', 'color', 'detail', 'detailIcon', 'disabled', 'download', 'href', 'lines', 'mode', 'rel', 'routerAnimation', 'routerDirection', 'target', 'type'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonItemDivider = class IonItemDivider {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonItemDivider, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonItemDivider, isStandalone: true, selector: \"ion-item-divider\", inputs: { color: \"color\", mode: \"mode\", sticky: \"sticky\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonItemDivider = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$B,\n        inputs: ['color', 'mode', 'sticky']\n    })\n], IonItemDivider);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonItemDivider, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-item-divider',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'mode', 'sticky'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonItemGroup = class IonItemGroup {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonItemGroup, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonItemGroup, isStandalone: true, selector: \"ion-item-group\", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonItemGroup = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$C\n    })\n], IonItemGroup);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonItemGroup, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-item-group',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: [],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonItemOption = class IonItemOption {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonItemOption, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonItemOption, isStandalone: true, selector: \"ion-item-option\", inputs: { color: \"color\", disabled: \"disabled\", download: \"download\", expandable: \"expandable\", href: \"href\", mode: \"mode\", rel: \"rel\", target: \"target\", type: \"type\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonItemOption = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$D,\n        inputs: ['color', 'disabled', 'download', 'expandable', 'href', 'mode', 'rel', 'target', 'type']\n    })\n], IonItemOption);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonItemOption, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-item-option',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'disabled', 'download', 'expandable', 'href', 'mode', 'rel', 'target', 'type'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonItemOptions = class IonItemOptions {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionSwipe']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonItemOptions, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonItemOptions, isStandalone: true, selector: \"ion-item-options\", inputs: { side: \"side\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonItemOptions = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$E,\n        inputs: ['side']\n    })\n], IonItemOptions);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonItemOptions, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-item-options',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['side'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonItemSliding = class IonItemSliding {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionDrag']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonItemSliding, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonItemSliding, isStandalone: true, selector: \"ion-item-sliding\", inputs: { disabled: \"disabled\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonItemSliding = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$F,\n        inputs: ['disabled'],\n        methods: ['getOpenAmount', 'getSlidingRatio', 'open', 'close', 'closeOpened']\n    })\n], IonItemSliding);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonItemSliding, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-item-sliding',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['disabled'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonLabel = class IonLabel {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonLabel, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonLabel, isStandalone: true, selector: \"ion-label\", inputs: { color: \"color\", mode: \"mode\", position: \"position\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonLabel = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$G,\n        inputs: ['color', 'mode', 'position']\n    })\n], IonLabel);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonLabel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-label',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'mode', 'position'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonList = class IonList {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonList, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonList, isStandalone: true, selector: \"ion-list\", inputs: { inset: \"inset\", lines: \"lines\", mode: \"mode\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonList = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$H,\n        inputs: ['inset', 'lines', 'mode'],\n        methods: ['closeSlidingItems']\n    })\n], IonList);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonList, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-list',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['inset', 'lines', 'mode'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonListHeader = class IonListHeader {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonListHeader, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonListHeader, isStandalone: true, selector: \"ion-list-header\", inputs: { color: \"color\", lines: \"lines\", mode: \"mode\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonListHeader = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$I,\n        inputs: ['color', 'lines', 'mode']\n    })\n], IonListHeader);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonListHeader, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-list-header',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'lines', 'mode'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonLoading = class IonLoading {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionLoadingDidPresent', 'ionLoadingWillPresent', 'ionLoadingWillDismiss', 'ionLoadingDidDismiss', 'didPresent', 'willPresent', 'willDismiss', 'didDismiss']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonLoading, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonLoading, isStandalone: true, selector: \"ion-loading\", inputs: { animated: \"animated\", backdropDismiss: \"backdropDismiss\", cssClass: \"cssClass\", duration: \"duration\", enterAnimation: \"enterAnimation\", htmlAttributes: \"htmlAttributes\", isOpen: \"isOpen\", keyboardClose: \"keyboardClose\", leaveAnimation: \"leaveAnimation\", message: \"message\", mode: \"mode\", showBackdrop: \"showBackdrop\", spinner: \"spinner\", translucent: \"translucent\", trigger: \"trigger\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonLoading = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$J,\n        inputs: ['animated', 'backdropDismiss', 'cssClass', 'duration', 'enterAnimation', 'htmlAttributes', 'isOpen', 'keyboardClose', 'leaveAnimation', 'message', 'mode', 'showBackdrop', 'spinner', 'translucent', 'trigger'],\n        methods: ['present', 'dismiss', 'onDidDismiss', 'onWillDismiss']\n    })\n], IonLoading);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonLoading, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-loading',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['animated', 'backdropDismiss', 'cssClass', 'duration', 'enterAnimation', 'htmlAttributes', 'isOpen', 'keyboardClose', 'leaveAnimation', 'message', 'mode', 'showBackdrop', 'spinner', 'translucent', 'trigger'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonMenu = class IonMenu {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionWillOpen', 'ionWillClose', 'ionDidOpen', 'ionDidClose']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonMenu, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonMenu, isStandalone: true, selector: \"ion-menu\", inputs: { contentId: \"contentId\", disabled: \"disabled\", maxEdgeStart: \"maxEdgeStart\", menuId: \"menuId\", side: \"side\", swipeGesture: \"swipeGesture\", type: \"type\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonMenu = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$K,\n        inputs: ['contentId', 'disabled', 'maxEdgeStart', 'menuId', 'side', 'swipeGesture', 'type'],\n        methods: ['isOpen', 'isActive', 'open', 'close', 'toggle', 'setOpen']\n    })\n], IonMenu);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonMenu, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-menu',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['contentId', 'disabled', 'maxEdgeStart', 'menuId', 'side', 'swipeGesture', 'type'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonMenuButton = class IonMenuButton {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonMenuButton, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonMenuButton, isStandalone: true, selector: \"ion-menu-button\", inputs: { autoHide: \"autoHide\", color: \"color\", disabled: \"disabled\", menu: \"menu\", mode: \"mode\", type: \"type\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonMenuButton = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$L,\n        inputs: ['autoHide', 'color', 'disabled', 'menu', 'mode', 'type']\n    })\n], IonMenuButton);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonMenuButton, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-menu-button',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['autoHide', 'color', 'disabled', 'menu', 'mode', 'type'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonMenuToggle = class IonMenuToggle {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonMenuToggle, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonMenuToggle, isStandalone: true, selector: \"ion-menu-toggle\", inputs: { autoHide: \"autoHide\", menu: \"menu\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonMenuToggle = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$M,\n        inputs: ['autoHide', 'menu']\n    })\n], IonMenuToggle);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonMenuToggle, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-menu-toggle',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['autoHide', 'menu'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonNavLink = class IonNavLink {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonNavLink, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonNavLink, isStandalone: true, selector: \"ion-nav-link\", inputs: { component: \"component\", componentProps: \"componentProps\", routerAnimation: \"routerAnimation\", routerDirection: \"routerDirection\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonNavLink = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$N,\n        inputs: ['component', 'componentProps', 'routerAnimation', 'routerDirection']\n    })\n], IonNavLink);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonNavLink, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-nav-link',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['component', 'componentProps', 'routerAnimation', 'routerDirection'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonNote = class IonNote {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonNote, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonNote, isStandalone: true, selector: \"ion-note\", inputs: { color: \"color\", mode: \"mode\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonNote = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$O,\n        inputs: ['color', 'mode']\n    })\n], IonNote);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonNote, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-note',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'mode'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonPicker = class IonPicker {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonPicker, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonPicker, isStandalone: true, selector: \"ion-picker\", inputs: { mode: \"mode\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonPicker = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$P,\n        inputs: ['mode']\n    })\n], IonPicker);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonPicker, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-picker',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['mode'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonPickerColumn = class IonPickerColumn {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionChange']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonPickerColumn, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonPickerColumn, isStandalone: true, selector: \"ion-picker-column\", inputs: { color: \"color\", disabled: \"disabled\", mode: \"mode\", value: \"value\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonPickerColumn = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$Q,\n        inputs: ['color', 'disabled', 'mode', 'value'],\n        methods: ['setFocus']\n    })\n], IonPickerColumn);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonPickerColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-picker-column',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'disabled', 'mode', 'value'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonPickerColumnOption = class IonPickerColumnOption {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonPickerColumnOption, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonPickerColumnOption, isStandalone: true, selector: \"ion-picker-column-option\", inputs: { color: \"color\", disabled: \"disabled\", value: \"value\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonPickerColumnOption = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$R,\n        inputs: ['color', 'disabled', 'value']\n    })\n], IonPickerColumnOption);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonPickerColumnOption, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-picker-column-option',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'disabled', 'value'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonPickerLegacy = class IonPickerLegacy {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionPickerDidPresent', 'ionPickerWillPresent', 'ionPickerWillDismiss', 'ionPickerDidDismiss', 'didPresent', 'willPresent', 'willDismiss', 'didDismiss']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonPickerLegacy, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonPickerLegacy, isStandalone: true, selector: \"ion-picker-legacy\", inputs: { animated: \"animated\", backdropDismiss: \"backdropDismiss\", buttons: \"buttons\", columns: \"columns\", cssClass: \"cssClass\", duration: \"duration\", enterAnimation: \"enterAnimation\", htmlAttributes: \"htmlAttributes\", isOpen: \"isOpen\", keyboardClose: \"keyboardClose\", leaveAnimation: \"leaveAnimation\", mode: \"mode\", showBackdrop: \"showBackdrop\", trigger: \"trigger\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonPickerLegacy = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$S,\n        inputs: ['animated', 'backdropDismiss', 'buttons', 'columns', 'cssClass', 'duration', 'enterAnimation', 'htmlAttributes', 'isOpen', 'keyboardClose', 'leaveAnimation', 'mode', 'showBackdrop', 'trigger'],\n        methods: ['present', 'dismiss', 'onDidDismiss', 'onWillDismiss', 'getColumn']\n    })\n], IonPickerLegacy);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonPickerLegacy, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-picker-legacy',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['animated', 'backdropDismiss', 'buttons', 'columns', 'cssClass', 'duration', 'enterAnimation', 'htmlAttributes', 'isOpen', 'keyboardClose', 'leaveAnimation', 'mode', 'showBackdrop', 'trigger'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonProgressBar = class IonProgressBar {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonProgressBar, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonProgressBar, isStandalone: true, selector: \"ion-progress-bar\", inputs: { buffer: \"buffer\", color: \"color\", mode: \"mode\", reversed: \"reversed\", type: \"type\", value: \"value\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonProgressBar = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$T,\n        inputs: ['buffer', 'color', 'mode', 'reversed', 'type', 'value']\n    })\n], IonProgressBar);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonProgressBar, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-progress-bar',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['buffer', 'color', 'mode', 'reversed', 'type', 'value'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonRadio = class IonRadio {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionFocus', 'ionBlur']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRadio, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonRadio, isStandalone: true, selector: \"ion-radio\", inputs: { alignment: \"alignment\", color: \"color\", disabled: \"disabled\", justify: \"justify\", labelPlacement: \"labelPlacement\", mode: \"mode\", name: \"name\", value: \"value\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonRadio = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$U,\n        inputs: ['alignment', 'color', 'disabled', 'justify', 'labelPlacement', 'mode', 'name', 'value']\n    })\n], IonRadio);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRadio, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-radio',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['alignment', 'color', 'disabled', 'justify', 'labelPlacement', 'mode', 'name', 'value'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonRefresher = class IonRefresher {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionRefresh', 'ionPull', 'ionStart']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRefresher, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonRefresher, isStandalone: true, selector: \"ion-refresher\", inputs: { closeDuration: \"closeDuration\", disabled: \"disabled\", mode: \"mode\", pullFactor: \"pullFactor\", pullMax: \"pullMax\", pullMin: \"pullMin\", snapbackDuration: \"snapbackDuration\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonRefresher = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$V,\n        inputs: ['closeDuration', 'disabled', 'mode', 'pullFactor', 'pullMax', 'pullMin', 'snapbackDuration'],\n        methods: ['complete', 'cancel', 'getProgress']\n    })\n], IonRefresher);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRefresher, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-refresher',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['closeDuration', 'disabled', 'mode', 'pullFactor', 'pullMax', 'pullMin', 'snapbackDuration'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonRefresherContent = class IonRefresherContent {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRefresherContent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonRefresherContent, isStandalone: true, selector: \"ion-refresher-content\", inputs: { pullingIcon: \"pullingIcon\", pullingText: \"pullingText\", refreshingSpinner: \"refreshingSpinner\", refreshingText: \"refreshingText\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonRefresherContent = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$W,\n        inputs: ['pullingIcon', 'pullingText', 'refreshingSpinner', 'refreshingText']\n    })\n], IonRefresherContent);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRefresherContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-refresher-content',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['pullingIcon', 'pullingText', 'refreshingSpinner', 'refreshingText'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonReorder = class IonReorder {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonReorder, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonReorder, isStandalone: true, selector: \"ion-reorder\", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonReorder = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$X\n    })\n], IonReorder);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonReorder, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-reorder',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: [],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonReorderGroup = class IonReorderGroup {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionItemReorder']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonReorderGroup, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonReorderGroup, isStandalone: true, selector: \"ion-reorder-group\", inputs: { disabled: \"disabled\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonReorderGroup = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$Y,\n        inputs: ['disabled'],\n        methods: ['complete']\n    })\n], IonReorderGroup);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonReorderGroup, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-reorder-group',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['disabled'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonRippleEffect = class IonRippleEffect {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRippleEffect, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonRippleEffect, isStandalone: true, selector: \"ion-ripple-effect\", inputs: { type: \"type\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonRippleEffect = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$Z,\n        inputs: ['type'],\n        methods: ['addRipple']\n    })\n], IonRippleEffect);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRippleEffect, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-ripple-effect',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['type'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonRow = class IonRow {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRow, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonRow, isStandalone: true, selector: \"ion-row\", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonRow = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$_\n    })\n], IonRow);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-row',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: [],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonSegmentButton = class IonSegmentButton {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSegmentButton, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonSegmentButton, isStandalone: true, selector: \"ion-segment-button\", inputs: { contentId: \"contentId\", disabled: \"disabled\", layout: \"layout\", mode: \"mode\", type: \"type\", value: \"value\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonSegmentButton = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$$,\n        inputs: ['contentId', 'disabled', 'layout', 'mode', 'type', 'value']\n    })\n], IonSegmentButton);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSegmentButton, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-segment-button',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['contentId', 'disabled', 'layout', 'mode', 'type', 'value'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonSegmentContent = class IonSegmentContent {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSegmentContent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonSegmentContent, isStandalone: true, selector: \"ion-segment-content\", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonSegmentContent = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$10\n    })\n], IonSegmentContent);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSegmentContent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-segment-content',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: [],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonSegmentView = class IonSegmentView {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionSegmentViewScroll']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSegmentView, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonSegmentView, isStandalone: true, selector: \"ion-segment-view\", inputs: { disabled: \"disabled\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonSegmentView = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$11,\n        inputs: ['disabled']\n    })\n], IonSegmentView);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSegmentView, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-segment-view',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['disabled'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonSelectModal = class IonSelectModal {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSelectModal, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonSelectModal, isStandalone: true, selector: \"ion-select-modal\", inputs: { header: \"header\", multiple: \"multiple\", options: \"options\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonSelectModal = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$12,\n        inputs: ['header', 'multiple', 'options']\n    })\n], IonSelectModal);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSelectModal, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-select-modal',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['header', 'multiple', 'options'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonSelectOption = class IonSelectOption {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSelectOption, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonSelectOption, isStandalone: true, selector: \"ion-select-option\", inputs: { disabled: \"disabled\", value: \"value\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonSelectOption = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$13,\n        inputs: ['disabled', 'value']\n    })\n], IonSelectOption);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSelectOption, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-select-option',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['disabled', 'value'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonSkeletonText = class IonSkeletonText {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSkeletonText, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonSkeletonText, isStandalone: true, selector: \"ion-skeleton-text\", inputs: { animated: \"animated\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonSkeletonText = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$14,\n        inputs: ['animated']\n    })\n], IonSkeletonText);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSkeletonText, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-skeleton-text',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['animated'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonSpinner = class IonSpinner {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSpinner, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonSpinner, isStandalone: true, selector: \"ion-spinner\", inputs: { color: \"color\", duration: \"duration\", name: \"name\", paused: \"paused\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonSpinner = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$15,\n        inputs: ['color', 'duration', 'name', 'paused']\n    })\n], IonSpinner);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSpinner, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-spinner',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'duration', 'name', 'paused'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonSplitPane = class IonSplitPane {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionSplitPaneVisible']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSplitPane, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonSplitPane, isStandalone: true, selector: \"ion-split-pane\", inputs: { contentId: \"contentId\", disabled: \"disabled\", when: \"when\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonSplitPane = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$16,\n        inputs: ['contentId', 'disabled', 'when']\n    })\n], IonSplitPane);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSplitPane, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-split-pane',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['contentId', 'disabled', 'when'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonTab = class IonTab {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonTab, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonTab, isStandalone: true, selector: \"ion-tab\", inputs: { component: \"component\", tab: \"tab\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonTab = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$17,\n        inputs: ['component', 'tab'],\n        methods: ['setActive']\n    })\n], IonTab);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonTab, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-tab',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['component', 'tab'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonTabBar = class IonTabBar {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonTabBar, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonTabBar, isStandalone: true, selector: \"ion-tab-bar\", inputs: { color: \"color\", mode: \"mode\", selectedTab: \"selectedTab\", translucent: \"translucent\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonTabBar = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$18,\n        inputs: ['color', 'mode', 'selectedTab', 'translucent']\n    })\n], IonTabBar);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonTabBar, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-tab-bar',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'mode', 'selectedTab', 'translucent'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonTabButton = class IonTabButton {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonTabButton, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonTabButton, isStandalone: true, selector: \"ion-tab-button\", inputs: { disabled: \"disabled\", download: \"download\", href: \"href\", layout: \"layout\", mode: \"mode\", rel: \"rel\", selected: \"selected\", tab: \"tab\", target: \"target\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonTabButton = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$19,\n        inputs: ['disabled', 'download', 'href', 'layout', 'mode', 'rel', 'selected', 'tab', 'target']\n    })\n], IonTabButton);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonTabButton, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-tab-button',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['disabled', 'download', 'href', 'layout', 'mode', 'rel', 'selected', 'tab', 'target'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonText = class IonText {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonText, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonText, isStandalone: true, selector: \"ion-text\", inputs: { color: \"color\", mode: \"mode\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonText = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$1a,\n        inputs: ['color', 'mode']\n    })\n], IonText);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonText, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-text',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'mode'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonThumbnail = class IonThumbnail {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonThumbnail, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonThumbnail, isStandalone: true, selector: \"ion-thumbnail\", ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonThumbnail = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$1b\n    })\n], IonThumbnail);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonThumbnail, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-thumbnail',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: [],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonTitle = class IonTitle {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonTitle, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonTitle, isStandalone: true, selector: \"ion-title\", inputs: { color: \"color\", size: \"size\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonTitle = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$1c,\n        inputs: ['color', 'size']\n    })\n], IonTitle);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonTitle, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-title',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'size'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonToast = class IonToast {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionToastDidPresent', 'ionToastWillPresent', 'ionToastWillDismiss', 'ionToastDidDismiss', 'didPresent', 'willPresent', 'willDismiss', 'didDismiss']);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonToast, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonToast, isStandalone: true, selector: \"ion-toast\", inputs: { animated: \"animated\", buttons: \"buttons\", color: \"color\", cssClass: \"cssClass\", duration: \"duration\", enterAnimation: \"enterAnimation\", header: \"header\", htmlAttributes: \"htmlAttributes\", icon: \"icon\", isOpen: \"isOpen\", keyboardClose: \"keyboardClose\", layout: \"layout\", leaveAnimation: \"leaveAnimation\", message: \"message\", mode: \"mode\", position: \"position\", positionAnchor: \"positionAnchor\", swipeGesture: \"swipeGesture\", translucent: \"translucent\", trigger: \"trigger\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonToast = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$1d,\n        inputs: ['animated', 'buttons', 'color', 'cssClass', 'duration', 'enterAnimation', 'header', 'htmlAttributes', 'icon', 'isOpen', 'keyboardClose', 'layout', 'leaveAnimation', 'message', 'mode', 'position', 'positionAnchor', 'swipeGesture', 'translucent', 'trigger'],\n        methods: ['present', 'dismiss', 'onDidDismiss', 'onWillDismiss']\n    })\n], IonToast);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonToast, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-toast',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['animated', 'buttons', 'color', 'cssClass', 'duration', 'enterAnimation', 'header', 'htmlAttributes', 'icon', 'isOpen', 'keyboardClose', 'layout', 'leaveAnimation', 'message', 'mode', 'position', 'positionAnchor', 'swipeGesture', 'translucent', 'trigger'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\nlet IonToolbar = class IonToolbar {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonToolbar, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonToolbar, isStandalone: true, selector: \"ion-toolbar\", inputs: { color: \"color\", mode: \"mode\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonToolbar = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$1e,\n        inputs: ['color', 'mode']\n    })\n], IonToolbar);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonToolbar, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-toolbar',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'mode'],\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\n\n// eslint-disable-next-line @angular-eslint/component-class-suffix\nclass IonTabs extends IonTabs$1 {\n    outlet;\n    tabBar;\n    tabBars;\n    tabs;\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonTabs, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonTabs, isStandalone: true, selector: \"ion-tabs\", queries: [{ propertyName: \"tabBar\", first: true, predicate: IonTabBar, descendants: true }, { propertyName: \"tabBars\", predicate: IonTabBar }, { propertyName: \"tabs\", predicate: IonTab }], viewQueries: [{ propertyName: \"outlet\", first: true, predicate: [\"outlet\"], descendants: true, read: IonRouterOutlet }], usesInheritance: true, ngImport: i0, template: `\n    <ng-content select=\"[slot=top]\"></ng-content>\n    <div class=\"tabs-inner\" #tabsInner>\n      <ion-router-outlet\n        *ngIf=\"tabs.length === 0\"\n        #outlet\n        tabs=\"true\"\n        (stackWillChange)=\"onStackWillChange($event)\"\n        (stackDidChange)=\"onStackDidChange($event)\"\n      ></ion-router-outlet>\n      <ng-content *ngIf=\"tabs.length > 0\" select=\"ion-tab\"></ng-content>\n    </div>\n    <ng-content></ng-content>\n  `, isInline: true, styles: [\":host{display:flex;position:absolute;inset:0;flex-direction:column;width:100%;height:100%;contain:layout size style}.tabs-inner{position:relative;flex:1;contain:layout size style}\\n\"], dependencies: [{ kind: \"component\", type: IonRouterOutlet, selector: \"ion-router-outlet\" }, { kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonTabs, decorators: [{\n            type: Component,\n            args: [{ selector: 'ion-tabs', template: `\n    <ng-content select=\"[slot=top]\"></ng-content>\n    <div class=\"tabs-inner\" #tabsInner>\n      <ion-router-outlet\n        *ngIf=\"tabs.length === 0\"\n        #outlet\n        tabs=\"true\"\n        (stackWillChange)=\"onStackWillChange($event)\"\n        (stackDidChange)=\"onStackDidChange($event)\"\n      ></ion-router-outlet>\n      <ng-content *ngIf=\"tabs.length > 0\" select=\"ion-tab\"></ng-content>\n    </div>\n    <ng-content></ng-content>\n  `, standalone: true, imports: [IonRouterOutlet, NgIf], styles: [\":host{display:flex;position:absolute;inset:0;flex-direction:column;width:100%;height:100%;contain:layout size style}.tabs-inner{position:relative;flex:1;contain:layout size style}\\n\"] }]\n        }], propDecorators: { outlet: [{\n                type: ViewChild,\n                args: ['outlet', { read: IonRouterOutlet, static: false }]\n            }], tabBar: [{\n                type: ContentChild,\n                args: [IonTabBar, { static: false }]\n            }], tabBars: [{\n                type: ContentChildren,\n                args: [IonTabBar]\n            }], tabs: [{\n                type: ContentChildren,\n                args: [IonTab]\n            }] } });\n\nclass ModalController extends OverlayBaseController {\n    angularDelegate = inject(AngularDelegate);\n    injector = inject(Injector);\n    environmentInjector = inject(EnvironmentInjector);\n    constructor() {\n        super(modalController);\n        defineCustomElement$3();\n    }\n    create(opts) {\n        return super.create({\n            ...opts,\n            delegate: this.angularDelegate.create(this.environmentInjector, this.injector, 'modal'),\n        });\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: ModalController, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    /** @nocollapse */ static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: ModalController });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: ModalController, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\n\nclass PopoverController extends OverlayBaseController {\n    angularDelegate = inject(AngularDelegate);\n    injector = inject(Injector);\n    environmentInjector = inject(EnvironmentInjector);\n    constructor() {\n        super(popoverController);\n        defineCustomElement$4();\n    }\n    create(opts) {\n        return super.create({\n            ...opts,\n            delegate: this.angularDelegate.create(this.environmentInjector, this.injector, 'popover'),\n        });\n    }\n}\n\nconst provideIonicAngular = (config = {}) => {\n    return makeEnvironmentProviders([\n        {\n            provide: ConfigToken,\n            useValue: config,\n        },\n        {\n            provide: APP_INITIALIZER,\n            useFactory: initializeIonicAngular,\n            multi: true,\n            deps: [ConfigToken, DOCUMENT],\n        },\n        provideComponentInputBinding(),\n        AngularDelegate,\n        ModalController,\n        PopoverController,\n    ]);\n};\nconst initializeIonicAngular = (config, doc) => {\n    return () => {\n        /**\n         * By default Ionic Framework hides elements that\n         * are not hydrated, but in the CE build there is no\n         * hydration.\n         * TODO FW-2797: Remove when all integrations have been\n         * migrated to CE build.\n         */\n        doc.documentElement.classList.add('ion-ce');\n        initialize(config);\n    };\n};\n\nclass ActionSheetController extends OverlayBaseController {\n    constructor() {\n        super(actionSheetController);\n        defineCustomElement$7();\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: ActionSheetController, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    /** @nocollapse */ static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: ActionSheetController, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: ActionSheetController, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass AlertController extends OverlayBaseController {\n    constructor() {\n        super(alertController);\n        defineCustomElement$8();\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: AlertController, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    /** @nocollapse */ static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: AlertController, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: AlertController, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass AnimationController {\n    /**\n     * Create a new animation\n     */\n    create(animationId) {\n        return createAnimation(animationId);\n    }\n    /**\n     * EXPERIMENTAL\n     *\n     * Given a progression and a cubic bezier function,\n     * this utility returns the time value(s) at which the\n     * cubic bezier reaches the given time progression.\n     *\n     * If the cubic bezier never reaches the progression\n     * the result will be an empty array.\n     *\n     * This is most useful for switching between easing curves\n     * when doing a gesture animation (i.e. going from linear easing\n     * during a drag, to another easing when `progressEnd` is called)\n     */\n    easingTime(p0, p1, p2, p3, progression) {\n        return getTimeGivenProgression(p0, p1, p2, p3, progression);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: AnimationController, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    /** @nocollapse */ static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: AnimationController, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: AnimationController, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass GestureController {\n    zone;\n    constructor(zone) {\n        this.zone = zone;\n    }\n    /**\n     * Create a new gesture\n     */\n    create(opts, runInsideAngularZone = false) {\n        if (runInsideAngularZone) {\n            Object.getOwnPropertyNames(opts).forEach((key) => {\n                if (typeof opts[key] === 'function') {\n                    const fn = opts[key];\n                    opts[key] = (...props) => this.zone.run(() => fn(...props));\n                }\n            });\n        }\n        return createGesture(opts);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: GestureController, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\n    /** @nocollapse */ static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: GestureController, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: GestureController, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\nclass LoadingController extends OverlayBaseController {\n    constructor() {\n        super(loadingController);\n        defineCustomElement$J();\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: LoadingController, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    /** @nocollapse */ static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: LoadingController, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: LoadingController, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass MenuController extends MenuController$1 {\n    constructor() {\n        super(menuController);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: MenuController, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    /** @nocollapse */ static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: MenuController, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: MenuController, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return []; } });\n\n/**\n * @deprecated Use the inline ion-picker component instead.\n */\nclass PickerController extends OverlayBaseController {\n    constructor() {\n        super(pickerController);\n        defineCustomElement$S();\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: PickerController, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    /** @nocollapse */ static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: PickerController, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: PickerController, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass ToastController extends OverlayBaseController {\n    constructor() {\n        super(toastController);\n        defineCustomElement$1d();\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: ToastController, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    /** @nocollapse */ static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: ToastController, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: ToastController, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return []; } });\n\nlet IonNav = class IonNav extends IonNav$1 {\n    constructor(ref, environmentInjector, injector, angularDelegate, z, c) {\n        super(ref, environmentInjector, injector, angularDelegate, z, c);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonNav, deps: [{ token: i0.ElementRef }, { token: i0.EnvironmentInjector }, { token: i0.Injector }, { token: i2$1.AngularDelegate }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonNav, isStandalone: true, selector: \"ion-nav\", usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true });\n};\nIonNav = __decorate([\n    ProxyCmp$1({\n        defineCustomElementFn: defineCustomElement$1f,\n    })\n], IonNav);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonNav, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-nav',\n                    template: '<ng-content></ng-content>',\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.EnvironmentInjector }, { type: i0.Injector }, { type: i2$1.AngularDelegate }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }]; } });\n\nconst CHECKBOX_INPUTS = [\n    'checked',\n    'color',\n    'disabled',\n    'errorText',\n    'helperText',\n    'indeterminate',\n    'justify',\n    'labelPlacement',\n    'mode',\n    'name',\n    'value',\n];\n/**\n * Pulling the provider into an object and using PURE works\n * around an ng-packagr issue that causes\n * components with multiple decorators and\n * a provider to be re-assigned. This re-assignment\n * is not supported by Webpack and causes treeshaking\n * to not work on these kinds of components.\n */\nconst accessorProvider$a = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: /*@__PURE__*/ forwardRef(() => IonCheckbox),\n    multi: true,\n};\nlet IonCheckbox = class IonCheckbox extends ValueAccessor {\n    z;\n    el;\n    constructor(c, r, z, injector) {\n        super(injector, r);\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionChange', 'ionFocus', 'ionBlur']);\n    }\n    writeValue(value) {\n        this.elementRef.nativeElement.checked = this.lastValue = value;\n        setIonicClasses(this.elementRef);\n    }\n    handleIonChange(el) {\n        this.handleValueChange(el, el.checked);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonCheckbox, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonCheckbox, isStandalone: true, selector: \"ion-checkbox\", inputs: { checked: \"checked\", color: \"color\", disabled: \"disabled\", errorText: \"errorText\", helperText: \"helperText\", indeterminate: \"indeterminate\", justify: \"justify\", labelPlacement: \"labelPlacement\", mode: \"mode\", name: \"name\", value: \"value\" }, host: { listeners: { \"ionChange\": \"handleIonChange($event.target)\" } }, providers: [accessorProvider$a], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonCheckbox = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$1g,\n        inputs: CHECKBOX_INPUTS,\n    })\n], IonCheckbox);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonCheckbox, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-checkbox',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: CHECKBOX_INPUTS,\n                    providers: [accessorProvider$a],\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Injector }]; }, propDecorators: { handleIonChange: [{\n                type: HostListener,\n                args: ['ionChange', ['$event.target']]\n            }] } });\n\nconst DATETIME_INPUTS = [\n    'cancelText',\n    'clearText',\n    'color',\n    'dayValues',\n    'disabled',\n    'doneText',\n    'firstDayOfWeek',\n    'formatOptions',\n    'highlightedDates',\n    'hourCycle',\n    'hourValues',\n    'isDateEnabled',\n    'locale',\n    'max',\n    'min',\n    'minuteValues',\n    'mode',\n    'monthValues',\n    'multiple',\n    'name',\n    'preferWheel',\n    'presentation',\n    'readonly',\n    'showAdjacentDays',\n    'showClearButton',\n    'showDefaultButtons',\n    'showDefaultTimeLabel',\n    'showDefaultTitle',\n    'size',\n    'titleSelectedDatesFormatter',\n    'value',\n    'yearValues',\n];\n/**\n * Pulling the provider into an object and using PURE works\n * around an ng-packagr issue that causes\n * components with multiple decorators and\n * a provider to be re-assigned. This re-assignment\n * is not supported by Webpack and causes treeshaking\n * to not work on these kinds of components.\n\n */\nconst accessorProvider$9 = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: /*@__PURE__*/ forwardRef(() => IonDatetime),\n    multi: true,\n};\nlet IonDatetime = class IonDatetime extends ValueAccessor {\n    z;\n    el;\n    constructor(c, r, z, injector) {\n        super(injector, r);\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionCancel', 'ionChange', 'ionFocus', 'ionBlur']);\n    }\n    handleIonChange(el) {\n        this.handleValueChange(el, el.value);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonDatetime, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonDatetime, isStandalone: true, selector: \"ion-datetime\", inputs: { cancelText: \"cancelText\", clearText: \"clearText\", color: \"color\", dayValues: \"dayValues\", disabled: \"disabled\", doneText: \"doneText\", firstDayOfWeek: \"firstDayOfWeek\", formatOptions: \"formatOptions\", highlightedDates: \"highlightedDates\", hourCycle: \"hourCycle\", hourValues: \"hourValues\", isDateEnabled: \"isDateEnabled\", locale: \"locale\", max: \"max\", min: \"min\", minuteValues: \"minuteValues\", mode: \"mode\", monthValues: \"monthValues\", multiple: \"multiple\", name: \"name\", preferWheel: \"preferWheel\", presentation: \"presentation\", readonly: \"readonly\", showAdjacentDays: \"showAdjacentDays\", showClearButton: \"showClearButton\", showDefaultButtons: \"showDefaultButtons\", showDefaultTimeLabel: \"showDefaultTimeLabel\", showDefaultTitle: \"showDefaultTitle\", size: \"size\", titleSelectedDatesFormatter: \"titleSelectedDatesFormatter\", value: \"value\", yearValues: \"yearValues\" }, host: { listeners: { \"ionChange\": \"handleIonChange($event.target)\" } }, providers: [accessorProvider$9], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonDatetime = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$1h,\n        inputs: DATETIME_INPUTS,\n        methods: ['confirm', 'reset', 'cancel'],\n    })\n], IonDatetime);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonDatetime, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-datetime',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: DATETIME_INPUTS,\n                    providers: [accessorProvider$9],\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Injector }]; }, propDecorators: { handleIonChange: [{\n                type: HostListener,\n                args: ['ionChange', ['$event.target']]\n            }] } });\n\nlet IonIcon = class IonIcon {\n    z;\n    el;\n    constructor(c, r, z) {\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonIcon, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonIcon, isStandalone: true, selector: \"ion-icon\", inputs: { color: \"color\", flipRtl: \"flipRtl\", icon: \"icon\", ios: \"ios\", lazy: \"lazy\", md: \"md\", mode: \"mode\", name: \"name\", sanitize: \"sanitize\", size: \"size\", src: \"src\" }, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonIcon = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$1i,\n        inputs: ['color', 'flipRtl', 'icon', 'ios', 'lazy', 'md', 'mode', 'name', 'sanitize', 'size', 'src'],\n    })\n], IonIcon);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonIcon, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-icon',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: ['color', 'flipRtl', 'icon', 'ios', 'lazy', 'md', 'mode', 'name', 'sanitize', 'size', 'src'],\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }]; } });\n\nconst INPUT_INPUTS = [\n    'accept',\n    'autocapitalize',\n    'autocomplete',\n    'autocorrect',\n    'autofocus',\n    'clearInput',\n    'clearOnEdit',\n    'color',\n    'counter',\n    'counterFormatter',\n    'debounce',\n    'disabled',\n    'enterkeyhint',\n    'errorText',\n    'fill',\n    'helperText',\n    'inputmode',\n    'label',\n    'labelPlacement',\n    'max',\n    'maxlength',\n    'min',\n    'minlength',\n    'mode',\n    'multiple',\n    'name',\n    'pattern',\n    'placeholder',\n    'readonly',\n    'required',\n    'shape',\n    'size',\n    'spellcheck',\n    'step',\n    'type',\n    'value',\n];\n/**\n * Pulling the provider into an object and using PURE works\n * around an ng-packagr issue that causes\n * components with multiple decorators and\n * a provider to be re-assigned. This re-assignment\n * is not supported by Webpack and causes treeshaking\n * to not work on these kinds of components.\n */\nconst accessorProvider$8 = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: /*@__PURE__*/ forwardRef(() => IonInput),\n    multi: true,\n};\nlet IonInput = class IonInput extends ValueAccessor {\n    z;\n    el;\n    constructor(c, r, z, injector) {\n        super(injector, r);\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionInput', 'ionChange', 'ionBlur', 'ionFocus']);\n    }\n    handleIonInput(el) {\n        this.handleValueChange(el, el.value);\n    }\n    registerOnChange(fn) {\n        super.registerOnChange((value) => {\n            if (this.type === 'number') {\n                /**\n                 * If the input type is `number`, we need to convert the value to a number\n                 * when the value is not empty. If the value is empty, we want to treat\n                 * the value as null.\n                 */\n                fn(value === '' ? null : parseFloat(value));\n            }\n            else {\n                fn(value);\n            }\n        });\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonInput, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonInput, isStandalone: true, selector: \"ion-input\", inputs: { accept: \"accept\", autocapitalize: \"autocapitalize\", autocomplete: \"autocomplete\", autocorrect: \"autocorrect\", autofocus: \"autofocus\", clearInput: \"clearInput\", clearOnEdit: \"clearOnEdit\", color: \"color\", counter: \"counter\", counterFormatter: \"counterFormatter\", debounce: \"debounce\", disabled: \"disabled\", enterkeyhint: \"enterkeyhint\", errorText: \"errorText\", fill: \"fill\", helperText: \"helperText\", inputmode: \"inputmode\", label: \"label\", labelPlacement: \"labelPlacement\", max: \"max\", maxlength: \"maxlength\", min: \"min\", minlength: \"minlength\", mode: \"mode\", multiple: \"multiple\", name: \"name\", pattern: \"pattern\", placeholder: \"placeholder\", readonly: \"readonly\", required: \"required\", shape: \"shape\", size: \"size\", spellcheck: \"spellcheck\", step: \"step\", type: \"type\", value: \"value\" }, host: { listeners: { \"ionInput\": \"handleIonInput($event.target)\" } }, providers: [accessorProvider$8], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonInput = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$1j,\n        inputs: INPUT_INPUTS,\n        methods: ['setFocus', 'getInputElement'],\n    })\n], IonInput);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonInput, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-input',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: INPUT_INPUTS,\n                    providers: [accessorProvider$8],\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Injector }]; }, propDecorators: { handleIonInput: [{\n                type: HostListener,\n                args: ['ionInput', ['$event.target']]\n            }] } });\n\nconst INPUT_OTP_INPUTS = [\n    'autocapitalize',\n    'color',\n    'disabled',\n    'fill',\n    'inputmode',\n    'length',\n    'pattern',\n    'readonly',\n    'separators',\n    'shape',\n    'size',\n    'type',\n    'value',\n];\n/**\n * Pulling the provider into an object and using PURE works\n * around an ng-packagr issue that causes\n * components with multiple decorators and\n * a provider to be re-assigned. This re-assignment\n * is not supported by Webpack and causes treeshaking\n * to not work on these kinds of components.\n */\nconst accessorProvider$7 = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: /*@__PURE__*/ forwardRef(() => IonInputOtp),\n    multi: true,\n};\nlet IonInputOtp = class IonInputOtp extends ValueAccessor {\n    z;\n    el;\n    constructor(c, r, z, injector) {\n        super(injector, r);\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionInput', 'ionChange', 'ionComplete', 'ionBlur', 'ionFocus']);\n    }\n    handleIonInput(el) {\n        this.handleValueChange(el, el.value);\n    }\n    registerOnChange(fn) {\n        super.registerOnChange((value) => {\n            if (this.type === 'number') {\n                /**\n                 * If the input type is `number`, we need to convert the value to a number\n                 * when the value is not empty. If the value is empty, we want to treat\n                 * the value as null.\n                 */\n                fn(value === '' ? null : parseFloat(value));\n            }\n            else {\n                fn(value);\n            }\n        });\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonInputOtp, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonInputOtp, isStandalone: true, selector: \"ion-input-otp\", inputs: { autocapitalize: \"autocapitalize\", color: \"color\", disabled: \"disabled\", fill: \"fill\", inputmode: \"inputmode\", length: \"length\", pattern: \"pattern\", readonly: \"readonly\", separators: \"separators\", shape: \"shape\", size: \"size\", type: \"type\", value: \"value\" }, host: { listeners: { \"ionInput\": \"handleIonInput($event.target)\" } }, providers: [accessorProvider$7], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonInputOtp = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$1k,\n        inputs: INPUT_OTP_INPUTS,\n        methods: ['setFocus'],\n    })\n], IonInputOtp);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonInputOtp, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-input-otp',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: INPUT_OTP_INPUTS,\n                    providers: [accessorProvider$7],\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Injector }]; }, propDecorators: { handleIonInput: [{\n                type: HostListener,\n                args: ['ionInput', ['$event.target']]\n            }] } });\n\nconst RADIO_GROUP_INPUTS = ['allowEmptySelection', 'compareWith', 'errorText', 'helperText', 'name', 'value'];\n/**\n * Pulling the provider into an object and using PURE  works\n * around an ng-packagr issue that causes\n * components with multiple decorators and\n * a provider to be re-assigned. This re-assignment\n * is not supported by Webpack and causes treeshaking\n * to not work on these kinds of components.\n */\nconst accessorProvider$6 = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: /*@__PURE__*/ forwardRef(() => IonRadioGroup),\n    multi: true,\n};\nlet IonRadioGroup = class IonRadioGroup extends ValueAccessor {\n    z;\n    el;\n    constructor(c, r, z, injector) {\n        super(injector, r);\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionChange']);\n    }\n    handleIonChange(el) {\n        this.handleValueChange(el, el.value);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRadioGroup, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonRadioGroup, isStandalone: true, selector: \"ion-radio-group\", inputs: { allowEmptySelection: \"allowEmptySelection\", compareWith: \"compareWith\", errorText: \"errorText\", helperText: \"helperText\", name: \"name\", value: \"value\" }, host: { listeners: { \"ionChange\": \"handleIonChange($event.target)\" } }, providers: [accessorProvider$6], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonRadioGroup = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$1l,\n        inputs: RADIO_GROUP_INPUTS,\n    })\n], IonRadioGroup);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRadioGroup, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-radio-group',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: RADIO_GROUP_INPUTS,\n                    providers: [accessorProvider$6],\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Injector }]; }, propDecorators: { handleIonChange: [{\n                type: HostListener,\n                args: ['ionChange', ['$event.target']]\n            }] } });\n\nconst RANGE_INPUTS = [\n    'activeBarStart',\n    'color',\n    'debounce',\n    'disabled',\n    'dualKnobs',\n    'label',\n    'labelPlacement',\n    'max',\n    'min',\n    'mode',\n    'name',\n    'pin',\n    'pinFormatter',\n    'snaps',\n    'step',\n    'ticks',\n    'value',\n];\n/**\n * Pulling the provider into an object and using PURE works\n * around an ng-packagr issue that causes\n * components with multiple decorators and\n * a provider to be re-assigned. This re-assignment\n * is not supported by Webpack and causes treeshaking\n * to not work on these kinds of components.\n */\nconst accessorProvider$5 = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: /*@__PURE__*/ forwardRef(() => IonRange),\n    multi: true,\n};\nlet IonRange = class IonRange extends ValueAccessor {\n    z;\n    el;\n    constructor(c, r, z, injector) {\n        super(injector, r);\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionChange', 'ionInput', 'ionFocus', 'ionBlur', 'ionKnobMoveStart', 'ionKnobMoveEnd']);\n    }\n    handleIonInput(el) {\n        this.handleValueChange(el, el.value);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRange, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonRange, isStandalone: true, selector: \"ion-range\", inputs: { activeBarStart: \"activeBarStart\", color: \"color\", debounce: \"debounce\", disabled: \"disabled\", dualKnobs: \"dualKnobs\", label: \"label\", labelPlacement: \"labelPlacement\", max: \"max\", min: \"min\", mode: \"mode\", name: \"name\", pin: \"pin\", pinFormatter: \"pinFormatter\", snaps: \"snaps\", step: \"step\", ticks: \"ticks\", value: \"value\" }, host: { listeners: { \"ionInput\": \"handleIonInput($event.target)\" } }, providers: [accessorProvider$5], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonRange = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$1m,\n        inputs: RANGE_INPUTS,\n    })\n], IonRange);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonRange, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-range',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: RANGE_INPUTS,\n                    providers: [accessorProvider$5],\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Injector }]; }, propDecorators: { handleIonInput: [{\n                type: HostListener,\n                args: ['ionInput', ['$event.target']]\n            }] } });\n\nconst SEARCHBAR_INPUTS = [\n    'animated',\n    'autocomplete',\n    'autocorrect',\n    'cancelButtonIcon',\n    'cancelButtonText',\n    'clearIcon',\n    'color',\n    'debounce',\n    'disabled',\n    'enterkeyhint',\n    'inputmode',\n    'mode',\n    'name',\n    'placeholder',\n    'searchIcon',\n    'showCancelButton',\n    'showClearButton',\n    'spellcheck',\n    'type',\n    'value',\n];\n/**\n * Pulling the provider into an object and using PURE works\n * around an ng-packagr issue that causes\n * components with multiple decorators and\n * a provider to be re-assigned. This re-assignment\n * is not supported by Webpack and causes treeshaking\n * to not work on these kinds of components.\n */\nconst accessorProvider$4 = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: /*@__PURE__*/ forwardRef(() => IonSearchbar),\n    multi: true,\n};\nlet IonSearchbar = class IonSearchbar extends ValueAccessor {\n    z;\n    el;\n    constructor(c, r, z, injector) {\n        super(injector, r);\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionInput', 'ionChange', 'ionCancel', 'ionClear', 'ionBlur', 'ionFocus']);\n    }\n    handleIonInput(el) {\n        this.handleValueChange(el, el.value);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSearchbar, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonSearchbar, isStandalone: true, selector: \"ion-searchbar\", inputs: { animated: \"animated\", autocomplete: \"autocomplete\", autocorrect: \"autocorrect\", cancelButtonIcon: \"cancelButtonIcon\", cancelButtonText: \"cancelButtonText\", clearIcon: \"clearIcon\", color: \"color\", debounce: \"debounce\", disabled: \"disabled\", enterkeyhint: \"enterkeyhint\", inputmode: \"inputmode\", mode: \"mode\", name: \"name\", placeholder: \"placeholder\", searchIcon: \"searchIcon\", showCancelButton: \"showCancelButton\", showClearButton: \"showClearButton\", spellcheck: \"spellcheck\", type: \"type\", value: \"value\" }, host: { listeners: { \"ionInput\": \"handleIonInput($event.target)\" } }, providers: [accessorProvider$4], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonSearchbar = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$1n,\n        inputs: SEARCHBAR_INPUTS,\n        methods: ['setFocus', 'getInputElement'],\n    })\n], IonSearchbar);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSearchbar, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-searchbar',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: SEARCHBAR_INPUTS,\n                    providers: [accessorProvider$4],\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Injector }]; }, propDecorators: { handleIonInput: [{\n                type: HostListener,\n                args: ['ionInput', ['$event.target']]\n            }] } });\n\nconst SEGMENT_INPUTS = ['color', 'disabled', 'mode', 'scrollable', 'selectOnFocus', 'swipeGesture', 'value'];\n/**\n * Pulling the provider into an object and using PURE works\n * around an ng-packagr issue that causes\n * components with multiple decorators and\n * a provider to be re-assigned. This re-assignment\n * is not supported by Webpack and causes treeshaking\n * to not work on these kinds of components.\n */\nconst accessorProvider$3 = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: /*@__PURE__*/ forwardRef(() => IonSegment),\n    multi: true,\n};\nlet IonSegment = class IonSegment extends ValueAccessor {\n    z;\n    el;\n    constructor(c, r, z, injector) {\n        super(injector, r);\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionChange']);\n    }\n    handleIonChange(el) {\n        this.handleValueChange(el, el.value);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSegment, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonSegment, isStandalone: true, selector: \"ion-segment\", inputs: { color: \"color\", disabled: \"disabled\", mode: \"mode\", scrollable: \"scrollable\", selectOnFocus: \"selectOnFocus\", swipeGesture: \"swipeGesture\", value: \"value\" }, host: { listeners: { \"ionChange\": \"handleIonChange($event.target)\" } }, providers: [accessorProvider$3], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonSegment = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$1o,\n        inputs: SEGMENT_INPUTS,\n    })\n], IonSegment);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSegment, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-segment',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: SEGMENT_INPUTS,\n                    providers: [accessorProvider$3],\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Injector }]; }, propDecorators: { handleIonChange: [{\n                type: HostListener,\n                args: ['ionChange', ['$event.target']]\n            }] } });\n\nconst SELECT_INPUTS = [\n    'cancelText',\n    'color',\n    'compareWith',\n    'disabled',\n    'errorText',\n    'expandedIcon',\n    'fill',\n    'helperText',\n    'interface',\n    'interfaceOptions',\n    'justify',\n    'label',\n    'labelPlacement',\n    'mode',\n    'multiple',\n    'name',\n    'okText',\n    'placeholder',\n    'selectedText',\n    'shape',\n    'toggleIcon',\n    'value',\n];\n/**\n * Pulling the provider into an object and using PURE works\n * around an ng-packagr issue that causes\n * components with multiple decorators and\n * a provider to be re-assigned. This re-assignment\n * is not supported by Webpack and causes treeshaking\n * to not work on these kinds of components.\n */\nconst accessorProvider$2 = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: /*@__PURE__*/ forwardRef(() => IonSelect),\n    multi: true,\n};\nlet IonSelect = class IonSelect extends ValueAccessor {\n    z;\n    el;\n    constructor(c, r, z, injector) {\n        super(injector, r);\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionChange', 'ionCancel', 'ionDismiss', 'ionFocus', 'ionBlur']);\n    }\n    handleIonChange(el) {\n        this.handleValueChange(el, el.value);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSelect, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonSelect, isStandalone: true, selector: \"ion-select\", inputs: { cancelText: \"cancelText\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", errorText: \"errorText\", expandedIcon: \"expandedIcon\", fill: \"fill\", helperText: \"helperText\", interface: \"interface\", interfaceOptions: \"interfaceOptions\", justify: \"justify\", label: \"label\", labelPlacement: \"labelPlacement\", mode: \"mode\", multiple: \"multiple\", name: \"name\", okText: \"okText\", placeholder: \"placeholder\", selectedText: \"selectedText\", shape: \"shape\", toggleIcon: \"toggleIcon\", value: \"value\" }, host: { listeners: { \"ionChange\": \"handleIonChange($event.target)\" } }, providers: [accessorProvider$2], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonSelect = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$1p,\n        inputs: SELECT_INPUTS,\n        methods: ['open'],\n    })\n], IonSelect);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonSelect, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-select',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: SELECT_INPUTS,\n                    providers: [accessorProvider$2],\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Injector }]; }, propDecorators: { handleIonChange: [{\n                type: HostListener,\n                args: ['ionChange', ['$event.target']]\n            }] } });\n\nconst TEXTAREA_INPUTS = [\n    'autoGrow',\n    'autocapitalize',\n    'autofocus',\n    'clearOnEdit',\n    'color',\n    'cols',\n    'counter',\n    'counterFormatter',\n    'debounce',\n    'disabled',\n    'enterkeyhint',\n    'errorText',\n    'fill',\n    'helperText',\n    'inputmode',\n    'label',\n    'labelPlacement',\n    'maxlength',\n    'minlength',\n    'mode',\n    'name',\n    'placeholder',\n    'readonly',\n    'required',\n    'rows',\n    'shape',\n    'spellcheck',\n    'value',\n    'wrap',\n];\n/**\n * Pulling the provider into an object and using PURE works\n * around an ng-packagr issue that causes\n * components with multiple decorators and\n * a provider to be re-assigned. This re-assignment\n * is not supported by Webpack and causes treeshaking\n * to not work on these kinds of components.\n */\nconst accessorProvider$1 = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: /*@__PURE__*/ forwardRef(() => IonTextarea),\n    multi: true,\n};\nlet IonTextarea = class IonTextarea extends ValueAccessor {\n    z;\n    el;\n    constructor(c, r, z, injector) {\n        super(injector, r);\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionChange', 'ionInput', 'ionBlur', 'ionFocus']);\n    }\n    handleIonInput(el) {\n        this.handleValueChange(el, el.value);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonTextarea, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonTextarea, isStandalone: true, selector: \"ion-textarea\", inputs: { autoGrow: \"autoGrow\", autocapitalize: \"autocapitalize\", autofocus: \"autofocus\", clearOnEdit: \"clearOnEdit\", color: \"color\", cols: \"cols\", counter: \"counter\", counterFormatter: \"counterFormatter\", debounce: \"debounce\", disabled: \"disabled\", enterkeyhint: \"enterkeyhint\", errorText: \"errorText\", fill: \"fill\", helperText: \"helperText\", inputmode: \"inputmode\", label: \"label\", labelPlacement: \"labelPlacement\", maxlength: \"maxlength\", minlength: \"minlength\", mode: \"mode\", name: \"name\", placeholder: \"placeholder\", readonly: \"readonly\", required: \"required\", rows: \"rows\", shape: \"shape\", spellcheck: \"spellcheck\", value: \"value\", wrap: \"wrap\" }, host: { listeners: { \"ionInput\": \"handleIonInput($event.target)\" } }, providers: [accessorProvider$1], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonTextarea = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$1q,\n        inputs: TEXTAREA_INPUTS,\n        methods: ['setFocus', 'getInputElement'],\n    })\n], IonTextarea);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonTextarea, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-textarea',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: TEXTAREA_INPUTS,\n                    providers: [accessorProvider$1],\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Injector }]; }, propDecorators: { handleIonInput: [{\n                type: HostListener,\n                args: ['ionInput', ['$event.target']]\n            }] } });\n\nconst TOGGLE_INPUTS = [\n    'checked',\n    'color',\n    'disabled',\n    'enableOnOffLabels',\n    'errorText',\n    'helperText',\n    'justify',\n    'labelPlacement',\n    'mode',\n    'name',\n    'value',\n];\n/**\n * Pulling the provider into an object and using PURE works\n * around an ng-packagr issue that causes\n * components with multiple decorators and\n * a provider to be re-assigned. This re-assignment\n * is not supported by Webpack and causes treeshaking\n * to not work on these kinds of components.\n */\nconst accessorProvider = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: /*@__PURE__*/ forwardRef(() => IonToggle),\n    multi: true,\n};\nlet IonToggle = class IonToggle extends ValueAccessor {\n    z;\n    el;\n    constructor(c, r, z, injector) {\n        super(injector, r);\n        this.z = z;\n        c.detach();\n        this.el = r.nativeElement;\n        proxyOutputs(this, this.el, ['ionChange', 'ionFocus', 'ionBlur']);\n    }\n    writeValue(value) {\n        this.elementRef.nativeElement.checked = this.lastValue = value;\n        setIonicClasses(this.elementRef);\n    }\n    handleIonChange(el) {\n        this.handleValueChange(el, el.checked);\n    }\n    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonToggle, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\n    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: IonToggle, isStandalone: true, selector: \"ion-toggle\", inputs: { checked: \"checked\", color: \"color\", disabled: \"disabled\", enableOnOffLabels: \"enableOnOffLabels\", errorText: \"errorText\", helperText: \"helperText\", justify: \"justify\", labelPlacement: \"labelPlacement\", mode: \"mode\", name: \"name\", value: \"value\" }, host: { listeners: { \"ionChange\": \"handleIonChange($event.target)\" } }, providers: [accessorProvider], usesInheritance: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });\n};\nIonToggle = __decorate([\n    ProxyCmp({\n        defineCustomElementFn: defineCustomElement$1r,\n        inputs: TOGGLE_INPUTS,\n    })\n], IonToggle);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: IonToggle, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ion-toggle',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<ng-content></ng-content>',\n                    // eslint-disable-next-line @angular-eslint/no-inputs-metadata-property\n                    inputs: TOGGLE_INPUTS,\n                    providers: [accessorProvider],\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Injector }]; }, propDecorators: { handleIonChange: [{\n                type: HostListener,\n                args: ['ionChange', ['$event.target']]\n            }] } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ActionSheetController, AlertController, AnimationController, GestureController, IonAccordion, IonAccordionGroup, IonActionSheet, IonAlert, IonApp, IonAvatar, IonBackButton, IonBackdrop, IonBadge, IonBreadcrumb, IonBreadcrumbs, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonCardTitle, IonCheckbox, IonChip, IonCol, IonContent, IonDatetime, IonDatetimeButton, IonFab, IonFabButton, IonFabList, IonFooter, IonGrid, IonHeader, IonIcon, IonImg, IonInfiniteScroll, IonInfiniteScrollContent, IonInput, IonInputOtp, IonInputPasswordToggle, IonItem, IonItemDivider, IonItemGroup, IonItemOption, IonItemOptions, IonItemSliding, IonLabel, IonList, IonListHeader, IonLoading, IonMenu, IonMenuButton, IonMenuToggle, IonModal, IonNav, IonNavLink, IonNote, IonPicker, IonPickerColumn, IonPickerColumnOption, IonPickerLegacy, IonPopover, IonProgressBar, IonRadio, IonRadioGroup, IonRange, IonRefresher, IonRefresherContent, IonReorder, IonReorderGroup, IonRippleEffect, IonRouterLink, IonRouterLinkWithHref, IonRouterOutlet, IonRow, IonSearchbar, IonSegment, IonSegmentButton, IonSegmentContent, IonSegmentView, IonSelect, IonSelectModal, IonSelectOption, IonSkeletonText, IonSpinner, IonSplitPane, IonTab, IonTabBar, IonTabButton, IonTabs, IonText, IonTextarea, IonThumbnail, IonTitle, IonToast, IonToggle, IonToolbar, LoadingController, MenuController, ModalController, PickerController, PopoverController, ToastController, provideIonicAngular };\n","import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { ComponentesModule } from 'src/app/componentes/componentes.module';\r\nimport { AlertController } from '@ionic/angular/standalone';\r\nimport type { OverlayEventDetail } from '@ionic/core';\r\n\r\n@Component({\r\n  selector: 'app-alert',\r\n  templateUrl: './alert.page.html',\r\n  styleUrls: ['./alert.page.scss'],\r\n  imports: [IonicModule, CommonModule, RouterModule, ComponentesModule],\r\n})\r\n\r\nexport class AlertPage implements OnInit {\r\n  constructor(private alertController: AlertController) {}\r\n       \r\n  ngOnInit() {\r\n  }\r\n  \r\n  async funcionAlerta1() {\r\n    const alert = await this.alertController.create({\r\n      header: 'Un título corto es mejor',\r\n      subHeader: 'Un subheader es opcional',\r\n      message: 'Un mensaje debería ser corto',\r\n      buttons: ['Action'],\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  public alertInputs = [\r\n    {\r\n      placeholder: 'Nombre',\r\n    },\r\n    {\r\n      placeholder: 'Apellido Paterno',\r\n      attributes: {\r\n        maxlength: 20,\r\n      },\r\n    },\r\n    {\r\n      placeholder: 'Apellido Materno',\r\n      attributes: {\r\n        maxlength: 20,\r\n      },\r\n    },\r\n    {\r\n      type: 'number',\r\n      placeholder: 'Edad',\r\n      min: 1,\r\n      max: 100,\r\n    },\r\n  ];\r\n\r\n  async funcionConsole() {\r\n    const alert = await this.alertController.create({\r\n      header: 'Mensaje Consola',\r\n      subHeader: '',\r\n      message: '',\r\n      buttons: this.alertButtons,    \r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  public alertButtons = [\r\n    {\r\n      text: 'Cancel',\r\n      role: 'cancel',\r\n      handler: () => {\r\n        console.log('Alerta cancelada');\r\n      },\r\n    },\r\n   {\r\n    text: 'OK',\r\n    role: 'confirm',\r\n    handler: (datos: any) => {\r\n      console.log('Alerta aceptada');\r\n      console.log('Datos del formulario:', datos);\r\n    },\r\n  },\r\n];\r\n\r\n  setResult(event: CustomEvent<OverlayEventDetail>) {\r\n    console.log(`Dismissed with role: ${event.detail.role}`);\r\n  }\r\n\r\n  async showAlertPersonalizada() {\r\n    const alertPersonalizada = await this.alertController.create({\r\n      backdropDismiss: false, // Forzar que no se cierre la alerta, sin elegir una opción\r\n      header: '¿Qué quieres hacer con tu Producto?',\r\n      subHeader: 'Soy algo referente al producto que debes de elegir',\r\n      message: 'Selecciona una opción',\r\n\r\n      buttons: ['Guardar', 'Borrar', 'Cancelar'],\r\n    });\r\n\r\n    await alertPersonalizada.present();\r\n  }\r\n  \r\n}","<app-header titulo=\"Alerta\"></app-header>\r\n\r\n<ion-content>\r\n  <ion-button (click)=\"funcionAlerta1()\">Click Me</ion-button>\r\n\r\n  <ion-button id=\"funcionInputs\">Input</ion-button>\r\n\r\n  <ion-button (click)=\"funcionConsole()\">Console</ion-button>\r\n\r\n  <ion-button (click)=\"showAlertPersonalizada()\">Alerta personalizada</ion-button>\r\n\r\n  \r\n  <ion-alert\r\n    trigger=\"funcionInputs\"\r\n    header=\"Ingresa tus datos\"\r\n    [buttons]=\"alertButtons\"\r\n    [inputs]=\"alertInputs\"\r\n  ></ion-alert>\r\n  \r\n</ion-content>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AlertPage } from './alert.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AlertPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AlertPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AlertPageRoutingModule } from './alert-routing.module';\r\n\r\nimport { AlertPage } from './alert.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    AlertPageRoutingModule,\r\n    AlertPage,\r\n  ],\r\n})\r\nexport class AlertPageModule {}\r\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nclass GestureController {\n    constructor() {\n        this.gestureId = 0;\n        this.requestedStart = new Map();\n        this.disabledGestures = new Map();\n        this.disabledScroll = new Set();\n    }\n    /**\n     * Creates a gesture delegate based on the GestureConfig passed\n     */\n    createGesture(config) {\n        var _a;\n        return new GestureDelegate(this, this.newID(), config.name, (_a = config.priority) !== null && _a !== void 0 ? _a : 0, !!config.disableScroll);\n    }\n    /**\n     * Creates a blocker that will block any other gesture events from firing. Set in the ion-gesture component.\n     */\n    createBlocker(opts = {}) {\n        return new BlockerDelegate(this, this.newID(), opts.disable, !!opts.disableScroll);\n    }\n    start(gestureName, id, priority) {\n        if (!this.canStart(gestureName)) {\n            this.requestedStart.delete(id);\n            return false;\n        }\n        this.requestedStart.set(id, priority);\n        return true;\n    }\n    capture(gestureName, id, priority) {\n        if (!this.start(gestureName, id, priority)) {\n            return false;\n        }\n        const requestedStart = this.requestedStart;\n        let maxPriority = -1e4;\n        requestedStart.forEach((value) => {\n            maxPriority = Math.max(maxPriority, value);\n        });\n        if (maxPriority === priority) {\n            this.capturedId = id;\n            requestedStart.clear();\n            const event = new CustomEvent('ionGestureCaptured', { detail: { gestureName } });\n            document.dispatchEvent(event);\n            return true;\n        }\n        requestedStart.delete(id);\n        return false;\n    }\n    release(id) {\n        this.requestedStart.delete(id);\n        if (this.capturedId === id) {\n            this.capturedId = undefined;\n        }\n    }\n    disableGesture(gestureName, id) {\n        let set = this.disabledGestures.get(gestureName);\n        if (set === undefined) {\n            set = new Set();\n            this.disabledGestures.set(gestureName, set);\n        }\n        set.add(id);\n    }\n    enableGesture(gestureName, id) {\n        const set = this.disabledGestures.get(gestureName);\n        if (set !== undefined) {\n            set.delete(id);\n        }\n    }\n    disableScroll(id) {\n        this.disabledScroll.add(id);\n        if (this.disabledScroll.size === 1) {\n            document.body.classList.add(BACKDROP_NO_SCROLL);\n        }\n    }\n    enableScroll(id) {\n        this.disabledScroll.delete(id);\n        if (this.disabledScroll.size === 0) {\n            document.body.classList.remove(BACKDROP_NO_SCROLL);\n        }\n    }\n    canStart(gestureName) {\n        if (this.capturedId !== undefined) {\n            // a gesture already captured\n            return false;\n        }\n        if (this.isDisabled(gestureName)) {\n            return false;\n        }\n        return true;\n    }\n    isCaptured() {\n        return this.capturedId !== undefined;\n    }\n    isScrollDisabled() {\n        return this.disabledScroll.size > 0;\n    }\n    isDisabled(gestureName) {\n        const disabled = this.disabledGestures.get(gestureName);\n        if (disabled && disabled.size > 0) {\n            return true;\n        }\n        return false;\n    }\n    newID() {\n        this.gestureId++;\n        return this.gestureId;\n    }\n}\nclass GestureDelegate {\n    constructor(ctrl, id, name, priority, disableScroll) {\n        this.id = id;\n        this.name = name;\n        this.disableScroll = disableScroll;\n        this.priority = priority * 1000000 + id;\n        this.ctrl = ctrl;\n    }\n    canStart() {\n        if (!this.ctrl) {\n            return false;\n        }\n        return this.ctrl.canStart(this.name);\n    }\n    start() {\n        if (!this.ctrl) {\n            return false;\n        }\n        return this.ctrl.start(this.name, this.id, this.priority);\n    }\n    capture() {\n        if (!this.ctrl) {\n            return false;\n        }\n        const captured = this.ctrl.capture(this.name, this.id, this.priority);\n        if (captured && this.disableScroll) {\n            this.ctrl.disableScroll(this.id);\n        }\n        return captured;\n    }\n    release() {\n        if (this.ctrl) {\n            this.ctrl.release(this.id);\n            if (this.disableScroll) {\n                this.ctrl.enableScroll(this.id);\n            }\n        }\n    }\n    destroy() {\n        this.release();\n        this.ctrl = undefined;\n    }\n}\nclass BlockerDelegate {\n    constructor(ctrl, id, disable, disableScroll) {\n        this.id = id;\n        this.disable = disable;\n        this.disableScroll = disableScroll;\n        this.ctrl = ctrl;\n    }\n    block() {\n        if (!this.ctrl) {\n            return;\n        }\n        if (this.disable) {\n            for (const gesture of this.disable) {\n                this.ctrl.disableGesture(gesture, this.id);\n            }\n        }\n        if (this.disableScroll) {\n            this.ctrl.disableScroll(this.id);\n        }\n    }\n    unblock() {\n        if (!this.ctrl) {\n            return;\n        }\n        if (this.disable) {\n            for (const gesture of this.disable) {\n                this.ctrl.enableGesture(gesture, this.id);\n            }\n        }\n        if (this.disableScroll) {\n            this.ctrl.enableScroll(this.id);\n        }\n    }\n    destroy() {\n        this.unblock();\n        this.ctrl = undefined;\n    }\n}\nconst BACKDROP_NO_SCROLL = 'backdrop-no-scroll';\nconst GESTURE_CONTROLLER = new GestureController();\n\nexport { BACKDROP_NO_SCROLL as B, GESTURE_CONTROLLER as G };\n"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21]}