{"version":3,"file":"9160.a08274393af41316.js","mappings":"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","names":["hostContext","selector","el","closest","createColorClasses","color","cssClassMap","length","Object","assign","getClassMap","classes","map","getClassList","undefined","Array","isArray","split","filter","c","trim","forEach","SCHEME","openURL","_ref","_asyncToGenerator","url","ev","direction","animation","test","router","document","querySelector","preventDefault","push","_x","_x2","_x3","_x4","apply","this","arguments","Style","Dark","Light","Default","StatusBar","getEngine","capacitor","getCapacitor","isPluginAvailable","Plugins","setStyle","options","engine","getStyle","style","getInfo","getBackdropValueForSheet","x","backdropBreakpoint","slope","b","setCardStatusBarDark","win","innerWidth","setCardStatusBarDefault","defaultStyle","handleCanDismiss","_ref2","canDismiss","GESTURE","isRunning","onFinish","dismiss","oneTimeCallback","calculateSpringStep","t","computeDuration","remaining","velocity","clamp","Math","abs","createSheetEnterAnimation","opts","currentBreakpoint","expandToScroll","shouldShowBackdrop","initialBackdrop","backdropAnimation","createAnimation","fromTo","beforeStyles","afterClearStyles","wrapperAnimation","keyframes","offset","opacity","transform","contentAnimation","maxHeight","createSheetLeaveAnimation","backdropValue","defaultBackdrop","customBackdrop","iosEnterAnimation","baseEl","presentingEl","root","getElementRoot","addElement","querySelectorAll","baseAnimation","easing","duration","addAnimation","isPortrait","window","hasCardModal","tagName","presentingElement","presentingElRoot","presentingAnimation","overflow","bodyEl","body","transformOffset","CSS","supports","finalTransform","afterStyles","beforeAddWrite","setProperty","borderRadius","shadowAnimation","iosLeaveAnimation","beforeClearStyles","currentStep","from","m","mdEnterAnimation","mdLeaveAnimation","Modal","constructor","hostRef","registerInstance","didPresent","createEvent","willPresent","willDismiss","didDismiss","ionBreakpointDidChange","didPresentShorthand","willPresentShorthand","willDismissShorthand","didDismissShorthand","ionMount","lockController","createLockController","triggerController","createTriggerController","coreDelegate","CoreDelegate","isSheetModal","inheritedAttributes","inline","gestureAnimationDismissing","presented","hasController","keyboardClose","handleBehavior","backdropDismiss","showBackdrop","animated","isOpen","keepContentsMounted","focusTrap","onHandleClick","sheetTransition","moveToNextBreakpoint","onBackdropTap","BACKDROP","onLifecycle","modalEvent","usersElement","name","LIFECYCLE_MAP","type","CustomEvent","bubbles","cancelable","detail","dispatchEvent","onModalFocus","dragHandleEl","target","tabIndex","focus","onIsOpenChange","newValue","oldValue","present","triggerChanged","trigger","addClickListener","onWindowResize","getIonMode","enterAnimation","leaveAnimation","clearTimeout","resizeTimeout","setTimeout","handleViewTransition","breakpointsChanged","breakpoints","sortedBreakpoints","sort","a","connectedCallback","prepareOverlay","disconnectedCallback","removeClickListener","cleanupViewTransitionListener","componentWillLoad","_a","initialBreakpoint","htmlAttributes","attributesToInherit","inheritAttributes","attribute","r","includes","printIonWarning","id","setOverlayId","componentDidLoad","raf","getDelegate","force","workingDelegate","delegate","parentNode","checkCanDismiss","data","role","_this","_this2","unlock","lock","emit","attachComponent","component","componentProps","hasLazyBuild","deepReady","waitForMount","writeTask","classList","add","statusBarStyle","keyboardOpenCallback","gesture","enable","addEventListener","KEYBOARD_DID_OPEN","initSheetGesture","initSwipeToClose","initViewTransitionListener","_this3","animationBuilder","config","get","ani","findIonContent","printIonContentErrorMsg","createSwipeToCloseGesture","onDismiss","height","offsetHeight","canDismissBlocksGesture","contentEl","scrollEl","initialScrollY","lastStep","createGesture","gestureName","gesturePriority","OVERLAY_GESTURE_PRIORITY","threshold","canStart","event","findClosestIonContent","isIonContent","scrollTop","onStart","deltaY","scrollY","disableContentScrollY","progressStart","onMove","step","isAttemptingDismissWithCanDismiss","maxStep","processedStep","clampedStep","progressStep","DISMISS_THRESHOLD","onEnd","velocityY","shouldComplete","newStepValue","getTimeGivenProgression","resetContentScrollY","progressEnd","wrapperEl","moveSheetToBreakpoint","createSheetGesture","backdropEl","getCurrentBreakpoint","onBreakpointChange","SheetDefaults","WRAPPER_KEYFRAMES","BACKDROP_KEYFRAMES","CONTENT_KEYFRAMES","clientHeight","cachedScrollEl","cachedFooterEls","cachedFooterYPosition","currentFooterState","maxBreakpoint","minBreakpoint","childAnimations","find","enableBackdrop","remove","FOCUS_TRAP_DISABLE_CLASS","disableBackdrop","swapFooterPosition","newPosition","page","cachedFooterEl","removeProperty","appendChild","footerHeights","index","cachedFooterElRect","getBoundingClientRect","bodyRect","absoluteTop","top","absoluteLeft","left","clientWidth","header","breakpoint","breakpointOffset","shouldPreventDismiss","snapToBreakpoint","shouldRemainOpen","Promise","resolve","targetEl","currentY","secondToLastBreakpoint","diff","reduce","sheetOnDismiss","_this4","_this5","removeEventListener","dismissed","detachComponent","destroy","onDidDismiss","eventMethod","onWillDismiss","setCurrentBreakpoint","_this6","_this7","_this8","allowedBreakpoints","nextBreakpointIndex","indexOf","nextBreakpoint","currentViewIsPortrait","viewTransitionAnimation","transitionAnimation","portraitToLandscapeTransition","presentingElIsCardModal","fromTransform","toTransform","landscapeToPortraitTransition","play","then","reinitSwipeToClose","ensureCorrectModalPosition","render","handle","showHandle","mode","isCardModal","isHandleCycle","h","Host","key","zIndex","overlayIndex","class","cssClass","onIonBackdropTap","onIonModalDidPresent","onIonModalWillPresent","onIonModalWillDismiss","onIonModalDidDismiss","onFocus","ref","visible","tappable","part","onClick","getElement","watchers","ionModalDidPresent","ionModalWillPresent","ionModalWillDismiss","ionModalDidDismiss","ios","md"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/theme-DiVJyqlX.js","./node_modules/@ionic/core/dist/esm/ion-modal.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return typeof color === 'string' && color.length > 0\n        ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter((c) => c != null)\n            .map((c) => c.trim())\n            .filter((c) => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach((c) => (map[c] = true));\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, e as getIonMode, m as printIonWarning, w as writeTask, l as config, h, j as Host, k as getElement } from './index-B_U9CtaY.js';\nimport { f as findClosestIonContent, i as isIonContent, d as disableContentScrollY, r as resetContentScrollY, a as findIonContent, p as printIonContentErrorMsg } from './index-BlJTBdxG.js';\nimport { C as CoreDelegate, a as attachComponent, d as detachComponent } from './framework-delegate-DxcnWic_.js';\nimport { e as clamp, g as getElementRoot, r as raf, b as inheritAttributes, h as hasLazyBuild } from './helpers-1O4D2b7y.js';\nimport { c as createLockController } from './lock-controller-B-hirT0v.js';\nimport { g as getCapacitor } from './capacitor-CFERIeaU.js';\nimport { G as GESTURE, O as OVERLAY_GESTURE_PRIORITY, F as FOCUS_TRAP_DISABLE_CLASS, e as createTriggerController, B as BACKDROP, j as prepareOverlay, k as setOverlayId, f as present, g as dismiss, h as eventMethod } from './overlays-8Y2rA-ps.js';\nimport { g as getClassMap } from './theme-DiVJyqlX.js';\nimport { e as deepReady, w as waitForMount } from './index-DfBA5ztX.js';\nimport { KEYBOARD_DID_OPEN } from './keyboard-ywgs5efA.js';\nimport { c as createAnimation } from './animation-BWcUKtbn.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-hHmYLOfE.js';\nimport { createGesture } from './index-CfgBF1SE.js';\nimport { w as win } from './index-ZjP4CjeZ.js';\nimport './hardware-back-button-DcH0BbDp.js';\nimport './gesture-controller-BTEOs1at.js';\nimport './keyboard-CUw4ekVy.js';\n\nvar Style;\n(function (Style) {\n    Style[\"Dark\"] = \"DARK\";\n    Style[\"Light\"] = \"LIGHT\";\n    Style[\"Default\"] = \"DEFAULT\";\n})(Style || (Style = {}));\nconst StatusBar = {\n    getEngine() {\n        const capacitor = getCapacitor();\n        if (capacitor === null || capacitor === void 0 ? void 0 : capacitor.isPluginAvailable('StatusBar')) {\n            return capacitor.Plugins.StatusBar;\n        }\n        return undefined;\n    },\n    setStyle(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        engine.setStyle(options);\n    },\n    getStyle: async function () {\n        const engine = this.getEngine();\n        if (!engine) {\n            return Style.Default;\n        }\n        const { style } = await engine.getInfo();\n        return style;\n    },\n};\n\n/**\n * Use y = mx + b to\n * figure out the backdrop value\n * at a particular x coordinate. This\n * is useful when the backdrop does\n * not begin to fade in until after\n * the 0 breakpoint.\n */\nconst getBackdropValueForSheet = (x, backdropBreakpoint) => {\n    /**\n     * We will use these points:\n     * (backdropBreakpoint, 0)\n     * (maxBreakpoint, 1)\n     * We know that at the beginning breakpoint,\n     * the backdrop will be hidden. We also\n     * know that at the maxBreakpoint, the backdrop\n     * must be fully visible. maxBreakpoint should\n     * always be 1 even if the maximum value\n     * of the breakpoints array is not 1 since\n     * the animation runs from a progress of 0\n     * to a progress of 1.\n     * m = (y2 - y1) / (x2 - x1)\n     *\n     * This is simplified from:\n     * m = (1 - 0) / (maxBreakpoint - backdropBreakpoint)\n     *\n     * If the backdropBreakpoint is 1, we return 0 as the\n     * backdrop is completely hidden.\n     *\n     */\n    if (backdropBreakpoint === 1) {\n        return 0;\n    }\n    const slope = 1 / (1 - backdropBreakpoint);\n    /**\n     * From here, compute b which is\n     * the backdrop opacity if the offset\n     * is 0. If the backdrop does not\n     * begin to fade in until after the\n     * 0 breakpoint, this b value will be\n     * negative. This is fine as we never pass\n     * b directly into the animation keyframes.\n     * b = y - mx\n     * Use a known point: (backdropBreakpoint, 0)\n     * This is simplified from:\n     * b = 0 - (backdropBreakpoint * slope)\n     */\n    const b = -(backdropBreakpoint * slope);\n    /**\n     * Finally, we can now determine the\n     * backdrop offset given an arbitrary\n     * gesture offset.\n     */\n    return x * slope + b;\n};\n/**\n * The tablet/desktop card modal activates\n * when the window width is >= 768.\n * At that point, the presenting element\n * is not transformed, so we do not need to\n * adjust the status bar color.\n *\n */\nconst setCardStatusBarDark = () => {\n    if (!win || win.innerWidth >= 768) {\n        return;\n    }\n    StatusBar.setStyle({ style: Style.Dark });\n};\nconst setCardStatusBarDefault = (defaultStyle = Style.Default) => {\n    if (!win || win.innerWidth >= 768) {\n        return;\n    }\n    StatusBar.setStyle({ style: defaultStyle });\n};\n\nconst handleCanDismiss = async (el, animation) => {\n    /**\n     * If canDismiss is not a function\n     * then we can return early. If canDismiss is `true`,\n     * then canDismissBlocksGesture is `false` as canDismiss\n     * will never interrupt the gesture. As a result,\n     * this code block is never reached. If canDismiss is `false`,\n     * then we never dismiss.\n     */\n    if (typeof el.canDismiss !== 'function') {\n        return;\n    }\n    /**\n     * Run the canDismiss callback.\n     * If the function returns `true`,\n     * then we can proceed with dismiss.\n     */\n    const shouldDismiss = await el.canDismiss(undefined, GESTURE);\n    if (!shouldDismiss) {\n        return;\n    }\n    /**\n     * If canDismiss resolved after the snap\n     * back animation finished, we can\n     * dismiss immediately.\n     *\n     * If canDismiss resolved before the snap\n     * back animation finished, we need to\n     * wait until the snap back animation is\n     * done before dismissing.\n     */\n    if (animation.isRunning()) {\n        animation.onFinish(() => {\n            el.dismiss(undefined, 'handler');\n        }, { oneTimeCallback: true });\n    }\n    else {\n        el.dismiss(undefined, 'handler');\n    }\n};\n/**\n * This function lets us simulate a realistic spring-like animation\n * when swiping down on the modal.\n * There are two forces that we need to use to compute the spring physics:\n *\n * 1. Stiffness, k: This is a measure of resistance applied a spring.\n * 2. Dampening, c: This value has the effect of reducing or preventing oscillation.\n *\n * Using these two values, we can calculate the Spring Force and the Dampening Force\n * to compute the total force applied to a spring.\n *\n * Spring Force: This force pulls a spring back into its equilibrium position.\n * Hooke's Law tells us that that spring force (FS) = kX.\n * k is the stiffness of a spring, and X is the displacement of the spring from its\n * equilibrium position. In this case, it is the amount by which the free end\n * of a spring was displaced (stretched/pushed) from its \"relaxed\" position.\n *\n * Dampening Force: This force slows down motion. Without it, a spring would oscillate forever.\n * The dampening force, FD, can be found via this formula: FD = -cv\n * where c the dampening value and v is velocity.\n *\n * Therefore, the resulting force that is exerted on the block is:\n * F = FS + FD = -kX - cv\n *\n * Newton's 2nd Law tells us that F = ma:\n * ma = -kX - cv.\n *\n * For Ionic's purposes, we can assume that m = 1:\n * a = -kX - cv\n *\n * Imagine a block attached to the end of a spring. At equilibrium\n * the block is at position x = 1.\n * Pressing on the block moves it to position x = 0;\n * So, to calculate the displacement, we need to take the\n * current position and subtract the previous position from it.\n * X = x - x0 = 0 - 1 = -1.\n *\n * For Ionic's purposes, we are only pushing on the spring modal\n * so we have a max position of 1.\n * As a result, we can expand displacement to this formula:\n * X = x - 1\n *\n * a = -k(x - 1) - cv\n *\n * We can represent the motion of something as a function of time: f(t) = x.\n * The derivative of position gives us the velocity: f'(t)\n * The derivative of the velocity gives us the acceleration: f''(t)\n *\n * We can substitute the formula above with these values:\n *\n * f\"(t) = -k * (f(t) - 1) - c * f'(t)\n *\n * This is called a differential equation.\n *\n * We know that at t = 0, we are at x = 0 because the modal does not move: f(0) = 0\n * This means our velocity is also zero: f'(0) = 0.\n *\n * We can cheat a bit and plug the formula into Wolfram Alpha.\n * However, we need to pick stiffness and dampening values:\n * k = 0.57\n * c = 15\n *\n * I picked these as they are fairly close to native iOS's spring effect\n * with the modal.\n *\n * What we plug in is this: f(0) = 0; f'(0) = 0; f''(t) = -0.57(f(t) - 1) - 15f'(t)\n *\n * The result is a formula that lets us calculate the acceleration\n * for a given time t.\n * Note: This is the approximate form of the solution. Wolfram Alpha will\n * give you a complex differential equation too.\n */\nconst calculateSpringStep = (t) => {\n    return 0.00255275 * 2.71828 ** (-14.9619 * t) - 1.00255 * 2.71828 ** (-0.0380968 * t) + 1;\n};\n\n// Defaults for the card swipe animation\nconst SwipeToCloseDefaults = {\n    MIN_PRESENTING_SCALE: 0.915,\n};\nconst createSwipeToCloseGesture = (el, animation, statusBarStyle, onDismiss) => {\n    /**\n     * The step value at which a card modal\n     * is eligible for dismissing via gesture.\n     */\n    const DISMISS_THRESHOLD = 0.5;\n    const height = el.offsetHeight;\n    let isOpen = false;\n    let canDismissBlocksGesture = false;\n    let contentEl = null;\n    let scrollEl = null;\n    const canDismissMaxStep = 0.2;\n    let initialScrollY = true;\n    let lastStep = 0;\n    const getScrollY = () => {\n        if (contentEl && isIonContent(contentEl)) {\n            return contentEl.scrollY;\n            /**\n             * Custom scroll containers are intended to be\n             * used with virtual scrolling, so we assume\n             * there is scrolling in this case.\n             */\n        }\n        else {\n            return true;\n        }\n    };\n    const canStart = (detail) => {\n        const target = detail.event.target;\n        if (target === null || !target.closest) {\n            return true;\n        }\n        /**\n         * If we are swiping on the content,\n         * swiping should only be possible if\n         * the content is scrolled all the way\n         * to the top so that we do not interfere\n         * with scrolling.\n         *\n         * We cannot assume that the `ion-content`\n         * target will remain consistent between\n         * swipes. For example, when using\n         * ion-nav within a card modal it is\n         * possible to swipe, push a view, and then\n         * swipe again. The target content will not\n         * be the same between swipes.\n         */\n        contentEl = findClosestIonContent(target);\n        if (contentEl) {\n            /**\n             * The card should never swipe to close\n             * on the content with a refresher.\n             * Note: We cannot solve this by making the\n             * swipeToClose gesture have a higher priority\n             * than the refresher gesture as the iOS native\n             * refresh gesture uses a scroll listener in\n             * addition to a gesture.\n             *\n             * Note: Do not use getScrollElement here\n             * because we need this to be a synchronous\n             * operation, and getScrollElement is\n             * asynchronous.\n             */\n            if (isIonContent(contentEl)) {\n                const root = getElementRoot(contentEl);\n                scrollEl = root.querySelector('.inner-scroll');\n            }\n            else {\n                scrollEl = contentEl;\n            }\n            const hasRefresherInContent = !!contentEl.querySelector('ion-refresher');\n            return !hasRefresherInContent && scrollEl.scrollTop === 0;\n        }\n        /**\n         * Card should be swipeable on all\n         * parts of the modal except for the footer.\n         */\n        const footer = target.closest('ion-footer');\n        if (footer === null) {\n            return true;\n        }\n        return false;\n    };\n    const onStart = (detail) => {\n        const { deltaY } = detail;\n        /**\n         * Get the initial scrollY value so\n         * that we can correctly reset the scrollY\n         * prop when the gesture ends.\n         */\n        initialScrollY = getScrollY();\n        /**\n         * If canDismiss is anything other than `true`\n         * then users should be able to swipe down\n         * until a threshold is hit. At that point,\n         * the card modal should not proceed any further.\n         * TODO (FW-937)\n         * Remove undefined check\n         */\n        canDismissBlocksGesture = el.canDismiss !== undefined && el.canDismiss !== true;\n        /**\n         * If we are pulling down, then\n         * it is possible we are pulling on the\n         * content. We do not want scrolling to\n         * happen at the same time as the gesture.\n         */\n        if (deltaY > 0 && contentEl) {\n            disableContentScrollY(contentEl);\n        }\n        animation.progressStart(true, isOpen ? 1 : 0);\n    };\n    const onMove = (detail) => {\n        const { deltaY } = detail;\n        /**\n         * If we are pulling down, then\n         * it is possible we are pulling on the\n         * content. We do not want scrolling to\n         * happen at the same time as the gesture.\n         */\n        if (deltaY > 0 && contentEl) {\n            disableContentScrollY(contentEl);\n        }\n        /**\n         * If we are swiping on the content\n         * then the swipe gesture should only\n         * happen if we are pulling down.\n         *\n         * However, if we pull up and\n         * then down such that the scroll position\n         * returns to 0, we should be able to swipe\n         * the card.\n         */\n        const step = detail.deltaY / height;\n        /**\n         * Check if user is swiping down and\n         * if we have a canDismiss value that\n         * should block the gesture from\n         * proceeding,\n         */\n        const isAttemptingDismissWithCanDismiss = step >= 0 && canDismissBlocksGesture;\n        /**\n         * If we are blocking the gesture from dismissing,\n         * set the max step value so that the sheet cannot be\n         * completely hidden.\n         */\n        const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n        /**\n         * If we are blocking the gesture from\n         * dismissing, calculate the spring modifier value\n         * this will be added to the starting breakpoint\n         * value to give the gesture a spring-like feeling.\n         * Note that the starting breakpoint is always 0,\n         * so we omit adding 0 to the result.\n         */\n        const processedStep = isAttemptingDismissWithCanDismiss ? calculateSpringStep(step / maxStep) : step;\n        const clampedStep = clamp(0.0001, processedStep, maxStep);\n        animation.progressStep(clampedStep);\n        /**\n         * When swiping down half way, the status bar style\n         * should be reset to its default value.\n         *\n         * We track lastStep so that we do not fire these\n         * functions on every onMove, only when the user has\n         * crossed a certain threshold.\n         */\n        if (clampedStep >= DISMISS_THRESHOLD && lastStep < DISMISS_THRESHOLD) {\n            setCardStatusBarDefault(statusBarStyle);\n            /**\n             * However, if we swipe back up, then the\n             * status bar style should be set to have light\n             * text on a dark background.\n             */\n        }\n        else if (clampedStep < DISMISS_THRESHOLD && lastStep >= DISMISS_THRESHOLD) {\n            setCardStatusBarDark();\n        }\n        lastStep = clampedStep;\n    };\n    const onEnd = (detail) => {\n        const velocity = detail.velocityY;\n        const step = detail.deltaY / height;\n        const isAttemptingDismissWithCanDismiss = step >= 0 && canDismissBlocksGesture;\n        const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n        const processedStep = isAttemptingDismissWithCanDismiss ? calculateSpringStep(step / maxStep) : step;\n        const clampedStep = clamp(0.0001, processedStep, maxStep);\n        const threshold = (detail.deltaY + velocity * 1000) / height;\n        /**\n         * If canDismiss blocks\n         * the swipe gesture, then the\n         * animation can never complete until\n         * canDismiss is checked.\n         */\n        const shouldComplete = !isAttemptingDismissWithCanDismiss && threshold >= DISMISS_THRESHOLD;\n        let newStepValue = shouldComplete ? -1e-3 : 0.001;\n        if (!shouldComplete) {\n            animation.easing('cubic-bezier(1, 0, 0.68, 0.28)');\n            newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], clampedStep)[0];\n        }\n        else {\n            animation.easing('cubic-bezier(0.32, 0.72, 0, 1)');\n            newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], clampedStep)[0];\n        }\n        const duration = shouldComplete\n            ? computeDuration(step * height, velocity)\n            : computeDuration((1 - clampedStep) * height, velocity);\n        isOpen = shouldComplete;\n        gesture.enable(false);\n        if (contentEl) {\n            resetContentScrollY(contentEl, initialScrollY);\n        }\n        animation\n            .onFinish(() => {\n            if (!shouldComplete) {\n                gesture.enable(true);\n            }\n        })\n            .progressEnd(shouldComplete ? 1 : 0, newStepValue, duration);\n        /**\n         * If the canDismiss value blocked the gesture\n         * from proceeding, then we should ignore whatever\n         * shouldComplete is. Whether or not the modal\n         * animation should complete is now determined by\n         * canDismiss.\n         *\n         * If the user swiped >25% of the way\n         * to the max step, then we should\n         * check canDismiss. 25% was chosen\n         * to avoid accidental swipes.\n         */\n        if (isAttemptingDismissWithCanDismiss && clampedStep > maxStep / 4) {\n            handleCanDismiss(el, animation);\n        }\n        else if (shouldComplete) {\n            onDismiss();\n        }\n    };\n    const gesture = createGesture({\n        el,\n        gestureName: 'modalSwipeToClose',\n        gesturePriority: OVERLAY_GESTURE_PRIORITY,\n        direction: 'y',\n        threshold: 10,\n        canStart,\n        onStart,\n        onMove,\n        onEnd,\n    });\n    return gesture;\n};\nconst computeDuration = (remaining, velocity) => {\n    return clamp(400, remaining / Math.abs(velocity * 1.1), 500);\n};\n\nconst createSheetEnterAnimation = (opts) => {\n    const { currentBreakpoint, backdropBreakpoint, expandToScroll } = opts;\n    /**\n     * If the backdropBreakpoint is undefined, then the backdrop\n     * should always fade in. If the backdropBreakpoint came before the\n     * current breakpoint, then the backdrop should be fading in.\n     */\n    const shouldShowBackdrop = backdropBreakpoint === undefined || backdropBreakpoint < currentBreakpoint;\n    const initialBackdrop = shouldShowBackdrop ? `calc(var(--backdrop-opacity) * ${currentBreakpoint})` : '0';\n    const backdropAnimation = createAnimation('backdropAnimation').fromTo('opacity', 0, initialBackdrop);\n    if (shouldShowBackdrop) {\n        backdropAnimation\n            .beforeStyles({\n            'pointer-events': 'none',\n        })\n            .afterClearStyles(['pointer-events']);\n    }\n    const wrapperAnimation = createAnimation('wrapperAnimation').keyframes([\n        { offset: 0, opacity: 1, transform: 'translateY(100%)' },\n        { offset: 1, opacity: 1, transform: `translateY(${100 - currentBreakpoint * 100}%)` },\n    ]);\n    /**\n     * This allows the content to be scrollable at any breakpoint.\n     */\n    const contentAnimation = !expandToScroll\n        ? createAnimation('contentAnimation').keyframes([\n            { offset: 0, opacity: 1, maxHeight: `${(1 - currentBreakpoint) * 100}%` },\n            { offset: 1, opacity: 1, maxHeight: `${currentBreakpoint * 100}%` },\n        ])\n        : undefined;\n    return { wrapperAnimation, backdropAnimation, contentAnimation };\n};\nconst createSheetLeaveAnimation = (opts) => {\n    const { currentBreakpoint, backdropBreakpoint } = opts;\n    /**\n     * Backdrop does not always fade in from 0 to 1 if backdropBreakpoint\n     * is defined, so we need to account for that offset by figuring out\n     * what the current backdrop value should be.\n     */\n    const backdropValue = `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(currentBreakpoint, backdropBreakpoint)})`;\n    const defaultBackdrop = [\n        { offset: 0, opacity: backdropValue },\n        { offset: 1, opacity: 0 },\n    ];\n    const customBackdrop = [\n        { offset: 0, opacity: backdropValue },\n        { offset: backdropBreakpoint, opacity: 0 },\n        { offset: 1, opacity: 0 },\n    ];\n    const backdropAnimation = createAnimation('backdropAnimation').keyframes(backdropBreakpoint !== 0 ? customBackdrop : defaultBackdrop);\n    const wrapperAnimation = createAnimation('wrapperAnimation').keyframes([\n        { offset: 0, opacity: 1, transform: `translateY(${100 - currentBreakpoint * 100}%)` },\n        { offset: 1, opacity: 1, transform: `translateY(100%)` },\n    ]);\n    return { wrapperAnimation, backdropAnimation };\n};\n\nconst createEnterAnimation$1 = () => {\n    const backdropAnimation = createAnimation()\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    const wrapperAnimation = createAnimation().fromTo('transform', 'translateY(100vh)', 'translateY(0vh)');\n    return { backdropAnimation, wrapperAnimation, contentAnimation: undefined };\n};\n/**\n * iOS Modal Enter Animation for the Card presentation style\n */\nconst iosEnterAnimation = (baseEl, opts) => {\n    const { presentingEl, currentBreakpoint, expandToScroll } = opts;\n    const root = getElementRoot(baseEl);\n    const { wrapperAnimation, backdropAnimation, contentAnimation } = currentBreakpoint !== undefined ? createSheetEnterAnimation(opts) : createEnterAnimation$1();\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n    wrapperAnimation.addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({ opacity: 1 });\n    // The content animation is only added if scrolling is enabled for\n    // all the breakpoints.\n    !expandToScroll && (contentAnimation === null || contentAnimation === void 0 ? void 0 : contentAnimation.addElement(baseEl.querySelector('.ion-page')));\n    const baseAnimation = createAnimation('entering-base')\n        .addElement(baseEl)\n        .easing('cubic-bezier(0.32,0.72,0,1)')\n        .duration(500)\n        .addAnimation([wrapperAnimation]);\n    if (contentAnimation) {\n        baseAnimation.addAnimation(contentAnimation);\n    }\n    if (presentingEl) {\n        const isPortrait = window.innerWidth < 768;\n        const hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n        const presentingElRoot = getElementRoot(presentingEl);\n        const presentingAnimation = createAnimation().beforeStyles({\n            transform: 'translateY(0)',\n            'transform-origin': 'top center',\n            overflow: 'hidden',\n        });\n        const bodyEl = document.body;\n        if (isPortrait) {\n            /**\n             * Fallback for browsers that does not support `max()` (ex: Firefox)\n             * No need to worry about statusbar padding since engines like Gecko\n             * are not used as the engine for standalone Cordova/Capacitor apps\n             */\n            const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n            const modalTransform = hasCardModal ? '-10px' : transformOffset;\n            const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n            const finalTransform = `translateY(${modalTransform}) scale(${toPresentingScale})`;\n            presentingAnimation\n                .afterStyles({\n                transform: finalTransform,\n            })\n                .beforeAddWrite(() => bodyEl.style.setProperty('background-color', 'black'))\n                .addElement(presentingEl)\n                .keyframes([\n                { offset: 0, filter: 'contrast(1)', transform: 'translateY(0px) scale(1)', borderRadius: '0px' },\n                { offset: 1, filter: 'contrast(0.85)', transform: finalTransform, borderRadius: '10px 10px 0 0' },\n            ]);\n            baseAnimation.addAnimation(presentingAnimation);\n        }\n        else {\n            baseAnimation.addAnimation(backdropAnimation);\n            if (!hasCardModal) {\n                wrapperAnimation.fromTo('opacity', '0', '1');\n            }\n            else {\n                const toPresentingScale = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;\n                const finalTransform = `translateY(-10px) scale(${toPresentingScale})`;\n                presentingAnimation\n                    .afterStyles({\n                    transform: finalTransform,\n                })\n                    .addElement(presentingElRoot.querySelector('.modal-wrapper'))\n                    .keyframes([\n                    { offset: 0, filter: 'contrast(1)', transform: 'translateY(0) scale(1)' },\n                    { offset: 1, filter: 'contrast(0.85)', transform: finalTransform },\n                ]);\n                const shadowAnimation = createAnimation()\n                    .afterStyles({\n                    transform: finalTransform,\n                })\n                    .addElement(presentingElRoot.querySelector('.modal-shadow'))\n                    .keyframes([\n                    { offset: 0, opacity: '1', transform: 'translateY(0) scale(1)' },\n                    { offset: 1, opacity: '0', transform: finalTransform },\n                ]);\n                baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n            }\n        }\n    }\n    else {\n        baseAnimation.addAnimation(backdropAnimation);\n    }\n    return baseAnimation;\n};\n\nconst createLeaveAnimation$1 = () => {\n    const backdropAnimation = createAnimation().fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    const wrapperAnimation = createAnimation().fromTo('transform', 'translateY(0vh)', 'translateY(100vh)');\n    return { backdropAnimation, wrapperAnimation };\n};\n/**\n * iOS Modal Leave Animation\n */\nconst iosLeaveAnimation = (baseEl, opts, duration = 500) => {\n    const { presentingEl, currentBreakpoint } = opts;\n    const root = getElementRoot(baseEl);\n    const { wrapperAnimation, backdropAnimation } = currentBreakpoint !== undefined ? createSheetLeaveAnimation(opts) : createLeaveAnimation$1();\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n    wrapperAnimation.addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow')).beforeStyles({ opacity: 1 });\n    const baseAnimation = createAnimation('leaving-base')\n        .addElement(baseEl)\n        .easing('cubic-bezier(0.32,0.72,0,1)')\n        .duration(duration)\n        .addAnimation(wrapperAnimation);\n    if (presentingEl) {\n        const isPortrait = window.innerWidth < 768;\n        const hasCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n        const presentingElRoot = getElementRoot(presentingEl);\n        const presentingAnimation = createAnimation()\n            .beforeClearStyles(['transform'])\n            .afterClearStyles(['transform'])\n            .onFinish((currentStep) => {\n            // only reset background color if this is the last card-style modal\n            if (currentStep !== 1) {\n                return;\n            }\n            presentingEl.style.setProperty('overflow', '');\n            const numModals = Array.from(bodyEl.querySelectorAll('ion-modal:not(.overlay-hidden)')).filter((m) => m.presentingElement !== undefined).length;\n            if (numModals <= 1) {\n                bodyEl.style.setProperty('background-color', '');\n            }\n        });\n        const bodyEl = document.body;\n        if (isPortrait) {\n            const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n            const modalTransform = hasCardModal ? '-10px' : transformOffset;\n            const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n            const finalTransform = `translateY(${modalTransform}) scale(${toPresentingScale})`;\n            presentingAnimation.addElement(presentingEl).keyframes([\n                { offset: 0, filter: 'contrast(0.85)', transform: finalTransform, borderRadius: '10px 10px 0 0' },\n                { offset: 1, filter: 'contrast(1)', transform: 'translateY(0px) scale(1)', borderRadius: '0px' },\n            ]);\n            baseAnimation.addAnimation(presentingAnimation);\n        }\n        else {\n            baseAnimation.addAnimation(backdropAnimation);\n            if (!hasCardModal) {\n                wrapperAnimation.fromTo('opacity', '1', '0');\n            }\n            else {\n                const toPresentingScale = hasCardModal ? SwipeToCloseDefaults.MIN_PRESENTING_SCALE : 1;\n                const finalTransform = `translateY(-10px) scale(${toPresentingScale})`;\n                presentingAnimation\n                    .addElement(presentingElRoot.querySelector('.modal-wrapper'))\n                    .afterStyles({\n                    transform: 'translate3d(0, 0, 0)',\n                })\n                    .keyframes([\n                    { offset: 0, filter: 'contrast(0.85)', transform: finalTransform },\n                    { offset: 1, filter: 'contrast(1)', transform: 'translateY(0) scale(1)' },\n                ]);\n                const shadowAnimation = createAnimation()\n                    .addElement(presentingElRoot.querySelector('.modal-shadow'))\n                    .afterStyles({\n                    transform: 'translateY(0) scale(1)',\n                })\n                    .keyframes([\n                    { offset: 0, opacity: '0', transform: finalTransform },\n                    { offset: 1, opacity: '1', transform: 'translateY(0) scale(1)' },\n                ]);\n                baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n            }\n        }\n    }\n    else {\n        baseAnimation.addAnimation(backdropAnimation);\n    }\n    return baseAnimation;\n};\n\n/**\n * Transition animation from portrait view to landscape view\n * This handles the case where a card modal is open in portrait view\n * and the user switches to landscape view\n */\nconst portraitToLandscapeTransition = (baseEl, opts, duration = 300) => {\n    const { presentingEl } = opts;\n    if (!presentingEl) {\n        // No transition needed for non-card modals\n        return createAnimation('portrait-to-landscape-transition');\n    }\n    const presentingElIsCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n    const presentingElRoot = getElementRoot(presentingEl);\n    const bodyEl = document.body;\n    const baseAnimation = createAnimation('portrait-to-landscape-transition')\n        .addElement(baseEl)\n        .easing('cubic-bezier(0.32,0.72,0,1)')\n        .duration(duration);\n    const presentingAnimation = createAnimation().beforeStyles({\n        transform: 'translateY(0)',\n        'transform-origin': 'top center',\n        overflow: 'hidden',\n    });\n    if (!presentingElIsCardModal) {\n        // The presenting element is not a card modal, so we do not\n        // need to care about layering and modal-specific styles.\n        const root = getElementRoot(baseEl);\n        const wrapperAnimation = createAnimation()\n            .addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow'))\n            .fromTo('opacity', '1', '1'); // Keep wrapper visible in landscape\n        const backdropAnimation = createAnimation()\n            .addElement(root.querySelector('ion-backdrop'))\n            .fromTo('opacity', 'var(--backdrop-opacity)', 'var(--backdrop-opacity)'); // Keep backdrop visible\n        // Animate presentingEl from portrait state back to normal\n        const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n        const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n        const fromTransform = `translateY(${transformOffset}) scale(${toPresentingScale})`;\n        presentingAnimation\n            .addElement(presentingEl)\n            .afterStyles({\n            transform: 'translateY(0px) scale(1)',\n            'border-radius': '0px',\n        })\n            .beforeAddWrite(() => bodyEl.style.setProperty('background-color', ''))\n            .fromTo('transform', fromTransform, 'translateY(0px) scale(1)')\n            .fromTo('filter', 'contrast(0.85)', 'contrast(1)')\n            .fromTo('border-radius', '10px 10px 0 0', '0px');\n        baseAnimation.addAnimation([presentingAnimation, wrapperAnimation, backdropAnimation]);\n    }\n    else {\n        // The presenting element is a card modal, so we do\n        // need to care about layering and modal-specific styles.\n        const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n        const fromTransform = `translateY(-10px) scale(${toPresentingScale})`;\n        const toTransform = `translateY(-10px) scale(${toPresentingScale})`;\n        presentingAnimation\n            .addElement(presentingElRoot.querySelector('.modal-wrapper'))\n            .afterStyles({\n            transform: toTransform,\n        })\n            .fromTo('transform', fromTransform, toTransform)\n            .fromTo('filter', 'contrast(0.85)', 'contrast(0.85)'); // Keep same contrast for card\n        const shadowAnimation = createAnimation()\n            .addElement(presentingElRoot.querySelector('.modal-shadow'))\n            .afterStyles({\n            transform: toTransform,\n        })\n            .fromTo('opacity', '0', '0') // Shadow stays hidden in landscape for card modals\n            .fromTo('transform', fromTransform, toTransform);\n        baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n    }\n    return baseAnimation;\n};\n/**\n * Transition animation from landscape view to portrait view\n * This handles the case where a card modal is open in landscape view\n * and the user switches to portrait view\n */\nconst landscapeToPortraitTransition = (baseEl, opts, duration = 300) => {\n    const { presentingEl } = opts;\n    if (!presentingEl) {\n        // No transition needed for non-card modals\n        return createAnimation('landscape-to-portrait-transition');\n    }\n    const presentingElIsCardModal = presentingEl.tagName === 'ION-MODAL' && presentingEl.presentingElement !== undefined;\n    const presentingElRoot = getElementRoot(presentingEl);\n    const bodyEl = document.body;\n    const baseAnimation = createAnimation('landscape-to-portrait-transition')\n        .addElement(baseEl)\n        .easing('cubic-bezier(0.32,0.72,0,1)')\n        .duration(duration);\n    const presentingAnimation = createAnimation().beforeStyles({\n        transform: 'translateY(0)',\n        'transform-origin': 'top center',\n        overflow: 'hidden',\n    });\n    if (!presentingElIsCardModal) {\n        // The presenting element is not a card modal, so we do not\n        // need to care about layering and modal-specific styles.\n        const root = getElementRoot(baseEl);\n        const wrapperAnimation = createAnimation()\n            .addElement(root.querySelectorAll('.modal-wrapper, .modal-shadow'))\n            .fromTo('opacity', '1', '1'); // Keep wrapper visible\n        const backdropAnimation = createAnimation()\n            .addElement(root.querySelector('ion-backdrop'))\n            .fromTo('opacity', 'var(--backdrop-opacity)', 'var(--backdrop-opacity)'); // Keep backdrop visible\n        // Animate presentingEl from normal state to portrait state\n        const transformOffset = !CSS.supports('width', 'max(0px, 1px)') ? '30px' : 'max(30px, var(--ion-safe-area-top))';\n        const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n        const toTransform = `translateY(${transformOffset}) scale(${toPresentingScale})`;\n        presentingAnimation\n            .addElement(presentingEl)\n            .beforeStyles({\n            transform: 'translateY(0px) scale(1)',\n            'transform-origin': 'top center',\n            overflow: 'hidden',\n        })\n            .afterStyles({\n            transform: toTransform,\n            'border-radius': '10px 10px 0 0',\n            filter: 'contrast(0.85)',\n            overflow: 'hidden',\n            'transform-origin': 'top center',\n        })\n            .beforeAddWrite(() => bodyEl.style.setProperty('background-color', 'black'))\n            .keyframes([\n            { offset: 0, transform: 'translateY(0px) scale(1)', filter: 'contrast(1)', borderRadius: '0px' },\n            { offset: 0.2, transform: 'translateY(0px) scale(1)', filter: 'contrast(1)', borderRadius: '10px 10px 0 0' },\n            { offset: 1, transform: toTransform, filter: 'contrast(0.85)', borderRadius: '10px 10px 0 0' },\n        ]);\n        baseAnimation.addAnimation([presentingAnimation, wrapperAnimation, backdropAnimation]);\n    }\n    else {\n        // The presenting element is also a card modal, so we need\n        // to handle layering and modal-specific styles.\n        const toPresentingScale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n        const fromTransform = `translateY(-10px) scale(${toPresentingScale})`;\n        const toTransform = `translateY(-10px) scale(${toPresentingScale})`;\n        presentingAnimation\n            .addElement(presentingElRoot.querySelector('.modal-wrapper'))\n            .afterStyles({\n            transform: toTransform,\n        })\n            .fromTo('transform', fromTransform, toTransform)\n            .fromTo('filter', 'contrast(0.85)', 'contrast(0.85)'); // Keep same contrast for card\n        const shadowAnimation = createAnimation()\n            .addElement(presentingElRoot.querySelector('.modal-shadow'))\n            .afterStyles({\n            transform: toTransform,\n        })\n            .fromTo('opacity', '0', '0') // Shadow stays hidden\n            .fromTo('transform', fromTransform, toTransform);\n        baseAnimation.addAnimation([presentingAnimation, shadowAnimation]);\n    }\n    return baseAnimation;\n};\n\nconst createEnterAnimation = () => {\n    const backdropAnimation = createAnimation()\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    const wrapperAnimation = createAnimation().keyframes([\n        { offset: 0, opacity: 0.01, transform: 'translateY(40px)' },\n        { offset: 1, opacity: 1, transform: `translateY(0px)` },\n    ]);\n    return { backdropAnimation, wrapperAnimation, contentAnimation: undefined };\n};\n/**\n * Md Modal Enter Animation\n */\nconst mdEnterAnimation = (baseEl, opts) => {\n    const { currentBreakpoint, expandToScroll } = opts;\n    const root = getElementRoot(baseEl);\n    const { wrapperAnimation, backdropAnimation, contentAnimation } = currentBreakpoint !== undefined ? createSheetEnterAnimation(opts) : createEnterAnimation();\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n    wrapperAnimation.addElement(root.querySelector('.modal-wrapper'));\n    // The content animation is only added if scrolling is enabled for\n    // all the breakpoints.\n    !expandToScroll && (contentAnimation === null || contentAnimation === void 0 ? void 0 : contentAnimation.addElement(baseEl.querySelector('.ion-page')));\n    const baseAnimation = createAnimation()\n        .addElement(baseEl)\n        .easing('cubic-bezier(0.36,0.66,0.04,1)')\n        .duration(280)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n    if (contentAnimation) {\n        baseAnimation.addAnimation(contentAnimation);\n    }\n    return baseAnimation;\n};\n\nconst createLeaveAnimation = () => {\n    const backdropAnimation = createAnimation().fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    const wrapperAnimation = createAnimation().keyframes([\n        { offset: 0, opacity: 0.99, transform: `translateY(0px)` },\n        { offset: 1, opacity: 0, transform: 'translateY(40px)' },\n    ]);\n    return { backdropAnimation, wrapperAnimation };\n};\n/**\n * Md Modal Leave Animation\n */\nconst mdLeaveAnimation = (baseEl, opts) => {\n    const { currentBreakpoint } = opts;\n    const root = getElementRoot(baseEl);\n    const { wrapperAnimation, backdropAnimation } = currentBreakpoint !== undefined ? createSheetLeaveAnimation(opts) : createLeaveAnimation();\n    backdropAnimation.addElement(root.querySelector('ion-backdrop'));\n    wrapperAnimation.addElement(root.querySelector('.modal-wrapper'));\n    const baseAnimation = createAnimation()\n        .easing('cubic-bezier(0.47,0,0.745,0.715)')\n        .duration(200)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n    return baseAnimation;\n};\n\nconst createSheetGesture = (baseEl, backdropEl, wrapperEl, initialBreakpoint, backdropBreakpoint, animation, breakpoints = [], expandToScroll, getCurrentBreakpoint, onDismiss, onBreakpointChange) => {\n    // Defaults for the sheet swipe animation\n    const defaultBackdrop = [\n        { offset: 0, opacity: 'var(--backdrop-opacity)' },\n        { offset: 1, opacity: 0.01 },\n    ];\n    const customBackdrop = [\n        { offset: 0, opacity: 'var(--backdrop-opacity)' },\n        { offset: 1 - backdropBreakpoint, opacity: 0 },\n        { offset: 1, opacity: 0 },\n    ];\n    const SheetDefaults = {\n        WRAPPER_KEYFRAMES: [\n            { offset: 0, transform: 'translateY(0%)' },\n            { offset: 1, transform: 'translateY(100%)' },\n        ],\n        BACKDROP_KEYFRAMES: backdropBreakpoint !== 0 ? customBackdrop : defaultBackdrop,\n        CONTENT_KEYFRAMES: [\n            { offset: 0, maxHeight: '100%' },\n            { offset: 1, maxHeight: '0%' },\n        ],\n    };\n    const contentEl = baseEl.querySelector('ion-content');\n    const height = wrapperEl.clientHeight;\n    let currentBreakpoint = initialBreakpoint;\n    let offset = 0;\n    let canDismissBlocksGesture = false;\n    let cachedScrollEl = null;\n    let cachedFooterEls = null;\n    let cachedFooterYPosition = null;\n    let currentFooterState = null;\n    const canDismissMaxStep = 0.95;\n    const maxBreakpoint = breakpoints[breakpoints.length - 1];\n    const minBreakpoint = breakpoints[0];\n    const wrapperAnimation = animation.childAnimations.find((ani) => ani.id === 'wrapperAnimation');\n    const backdropAnimation = animation.childAnimations.find((ani) => ani.id === 'backdropAnimation');\n    const contentAnimation = animation.childAnimations.find((ani) => ani.id === 'contentAnimation');\n    const enableBackdrop = () => {\n        baseEl.style.setProperty('pointer-events', 'auto');\n        backdropEl.style.setProperty('pointer-events', 'auto');\n        /**\n         * When the backdrop is enabled, elements such\n         * as inputs should not be focusable outside\n         * the sheet.\n         */\n        baseEl.classList.remove(FOCUS_TRAP_DISABLE_CLASS);\n    };\n    const disableBackdrop = () => {\n        baseEl.style.setProperty('pointer-events', 'none');\n        backdropEl.style.setProperty('pointer-events', 'none');\n        /**\n         * When the backdrop is enabled, elements such\n         * as inputs should not be focusable outside\n         * the sheet.\n         * Adding this class disables focus trapping\n         * for the sheet temporarily.\n         */\n        baseEl.classList.add(FOCUS_TRAP_DISABLE_CLASS);\n    };\n    /**\n     * Toggles the footer to an absolute position while moving to prevent\n     * it from shaking while the sheet is being dragged.\n     * @param newPosition Whether the footer is in a moving or stationary position.\n     */\n    const swapFooterPosition = (newPosition) => {\n        if (!cachedFooterEls) {\n            cachedFooterEls = Array.from(baseEl.querySelectorAll('ion-footer'));\n            if (!cachedFooterEls.length) {\n                return;\n            }\n        }\n        const page = baseEl.querySelector('.ion-page');\n        currentFooterState = newPosition;\n        if (newPosition === 'stationary') {\n            cachedFooterEls.forEach((cachedFooterEl) => {\n                // Reset positioning styles to allow normal document flow\n                cachedFooterEl.classList.remove('modal-footer-moving');\n                cachedFooterEl.style.removeProperty('position');\n                cachedFooterEl.style.removeProperty('width');\n                cachedFooterEl.style.removeProperty('height');\n                cachedFooterEl.style.removeProperty('top');\n                cachedFooterEl.style.removeProperty('left');\n                page === null || page === void 0 ? void 0 : page.style.removeProperty('padding-bottom');\n                // Move to page\n                page === null || page === void 0 ? void 0 : page.appendChild(cachedFooterEl);\n            });\n        }\n        else {\n            let footerHeights = 0;\n            cachedFooterEls.forEach((cachedFooterEl, index) => {\n                // Get both the footer and document body positions\n                const cachedFooterElRect = cachedFooterEl.getBoundingClientRect();\n                const bodyRect = document.body.getBoundingClientRect();\n                // Calculate the total height of all footers\n                // so we can add padding to the page element\n                footerHeights += cachedFooterEl.clientHeight;\n                // Calculate absolute position relative to body\n                // We need to subtract the body's offsetTop to get true position within document.body\n                const absoluteTop = cachedFooterElRect.top - bodyRect.top;\n                const absoluteLeft = cachedFooterElRect.left - bodyRect.left;\n                // Capture the footer's current dimensions and store them in CSS variables for\n                // later use when applying absolute positioning.\n                cachedFooterEl.style.setProperty('--pinned-width', `${cachedFooterEl.clientWidth}px`);\n                cachedFooterEl.style.setProperty('--pinned-height', `${cachedFooterEl.clientHeight}px`);\n                cachedFooterEl.style.setProperty('--pinned-top', `${absoluteTop}px`);\n                cachedFooterEl.style.setProperty('--pinned-left', `${absoluteLeft}px`);\n                // Only cache the first footer's Y position\n                // This is used to determine if the sheet has been moved below the footer\n                // and needs to be swapped back to stationary so it collapses correctly.\n                if (index === 0) {\n                    cachedFooterYPosition = absoluteTop;\n                    // If there's a header, we need to combine the header height with the footer position\n                    // because the header moves with the drag handle, so when it starts overlapping the footer,\n                    // we need to account for that.\n                    const header = baseEl.querySelector('ion-header');\n                    if (header) {\n                        cachedFooterYPosition -= header.clientHeight;\n                    }\n                }\n            });\n            // Apply the pinning of styles after we've calculated everything\n            // so that we don't cause layouts to shift while calculating the footer positions.\n            // Otherwise, with multiple footers we'll end up capturing the wrong positions.\n            cachedFooterEls.forEach((cachedFooterEl) => {\n                // Add padding to the parent element to prevent content from being hidden\n                // when the footer is positioned absolutely. This has to be done before we\n                // make the footer absolutely positioned or we may accidentally cause the\n                // sheet to scroll.\n                page === null || page === void 0 ? void 0 : page.style.setProperty('padding-bottom', `${footerHeights}px`);\n                // Apply positioning styles to keep footer at bottom\n                cachedFooterEl.classList.add('modal-footer-moving');\n                // Apply our preserved styles to pin the footer\n                cachedFooterEl.style.setProperty('position', 'absolute');\n                cachedFooterEl.style.setProperty('width', 'var(--pinned-width)');\n                cachedFooterEl.style.setProperty('height', 'var(--pinned-height)');\n                cachedFooterEl.style.setProperty('top', 'var(--pinned-top)');\n                cachedFooterEl.style.setProperty('left', 'var(--pinned-left)');\n                // Move the element to the body when everything else is done\n                document.body.appendChild(cachedFooterEl);\n            });\n        }\n    };\n    /**\n     * After the entering animation completes,\n     * we need to set the animation to go from\n     * offset 0 to offset 1 so that users can\n     * swipe in any direction. We then set the\n     * animation offset to the current breakpoint\n     * so there is no flickering.\n     */\n    if (wrapperAnimation && backdropAnimation) {\n        wrapperAnimation.keyframes([...SheetDefaults.WRAPPER_KEYFRAMES]);\n        backdropAnimation.keyframes([...SheetDefaults.BACKDROP_KEYFRAMES]);\n        contentAnimation === null || contentAnimation === void 0 ? void 0 : contentAnimation.keyframes([...SheetDefaults.CONTENT_KEYFRAMES]);\n        animation.progressStart(true, 1 - currentBreakpoint);\n        /**\n         * If backdrop is not enabled, then content\n         * behind modal should be clickable. To do this, we need\n         * to remove pointer-events from ion-modal as a whole.\n         * ion-backdrop and .modal-wrapper always have pointer-events: auto\n         * applied, so the modal content can still be interacted with.\n         */\n        const shouldEnableBackdrop = currentBreakpoint > backdropBreakpoint;\n        if (shouldEnableBackdrop) {\n            enableBackdrop();\n        }\n        else {\n            disableBackdrop();\n        }\n    }\n    if (contentEl && currentBreakpoint !== maxBreakpoint && expandToScroll) {\n        contentEl.scrollY = false;\n    }\n    const canStart = (detail) => {\n        /**\n         * If we are swiping on the content, swiping should only be possible if the content\n         * is scrolled all the way to the top so that we do not interfere with scrolling.\n         *\n         * We cannot assume that the `ion-content` target will remain consistent between swipes.\n         * For example, when using ion-nav within a modal it is possible to swipe, push a view,\n         * and then swipe again. The target content will not be the same between swipes.\n         */\n        const contentEl = findClosestIonContent(detail.event.target);\n        currentBreakpoint = getCurrentBreakpoint();\n        /**\n         * If `expandToScroll` is disabled, we should not allow the swipe gesture\n         * to start if the content is not scrolled to the top.\n         */\n        if (!expandToScroll && contentEl) {\n            const scrollEl = isIonContent(contentEl) ? getElementRoot(contentEl).querySelector('.inner-scroll') : contentEl;\n            return scrollEl.scrollTop === 0;\n        }\n        if (currentBreakpoint === 1 && contentEl) {\n            /**\n             * The modal should never swipe to close on the content with a refresher.\n             * Note 1: We cannot solve this by making this gesture have a higher priority than\n             * the refresher gesture as the iOS native refresh gesture uses a scroll listener in\n             * addition to a gesture.\n             *\n             * Note 2: Do not use getScrollElement here because we need this to be a synchronous\n             * operation, and getScrollElement is asynchronous.\n             */\n            const scrollEl = isIonContent(contentEl) ? getElementRoot(contentEl).querySelector('.inner-scroll') : contentEl;\n            const hasRefresherInContent = !!contentEl.querySelector('ion-refresher');\n            return !hasRefresherInContent && scrollEl.scrollTop === 0;\n        }\n        return true;\n    };\n    const onStart = (detail) => {\n        /**\n         * If canDismiss is anything other than `true`\n         * then users should be able to swipe down\n         * until a threshold is hit. At that point,\n         * the card modal should not proceed any further.\n         *\n         * canDismiss is never fired via gesture if there is\n         * no 0 breakpoint. However, it can be fired if the user\n         * presses Esc or the hardware back button.\n         * TODO (FW-937)\n         * Remove undefined check\n         */\n        canDismissBlocksGesture = baseEl.canDismiss !== undefined && baseEl.canDismiss !== true && minBreakpoint === 0;\n        /**\n         * Cache the scroll element reference when the gesture starts,\n         * this allows us to avoid querying the DOM for the target in onMove,\n         * which would impact performance significantly.\n         */\n        if (!expandToScroll) {\n            const targetEl = findClosestIonContent(detail.event.target);\n            cachedScrollEl =\n                targetEl && isIonContent(targetEl) ? getElementRoot(targetEl).querySelector('.inner-scroll') : targetEl;\n        }\n        /**\n         * If expandToScroll is disabled, we need to swap\n         * the footer position to moving so that it doesn't shake\n         * while the sheet is being dragged.\n         */\n        if (!expandToScroll) {\n            swapFooterPosition('moving');\n        }\n        /**\n         * If we are pulling down, then it is possible we are pulling on the content.\n         * We do not want scrolling to happen at the same time as the gesture.\n         */\n        if (detail.deltaY > 0 && contentEl) {\n            contentEl.scrollY = false;\n        }\n        raf(() => {\n            /**\n             * Dismisses the open keyboard when the sheet drag gesture is started.\n             * Sets the focus onto the modal element.\n             */\n            baseEl.focus();\n        });\n        animation.progressStart(true, 1 - currentBreakpoint);\n    };\n    const onMove = (detail) => {\n        /**\n         * If `expandToScroll` is disabled, we need to see if we're currently below\n         * the footer element and the footer is in a stationary position. If so,\n         * we need to make the stationary the original position so that the footer\n         * collapses with the sheet.\n         */\n        if (!expandToScroll && cachedFooterYPosition !== null && currentFooterState !== null) {\n            // Check if we need to swap the footer position\n            if (detail.currentY >= cachedFooterYPosition && currentFooterState === 'moving') {\n                swapFooterPosition('stationary');\n            }\n            else if (detail.currentY < cachedFooterYPosition && currentFooterState === 'stationary') {\n                swapFooterPosition('moving');\n            }\n        }\n        /**\n         * If `expandToScroll` is disabled, and an upwards swipe gesture is done within\n         * the scrollable content, we should not allow the swipe gesture to continue.\n         */\n        if (!expandToScroll && detail.deltaY <= 0 && cachedScrollEl) {\n            return;\n        }\n        /**\n         * If we are pulling down, then it is possible we are pulling on the content.\n         * We do not want scrolling to happen at the same time as the gesture.\n         * This accounts for when the user scrolls down, scrolls all the way up, and then\n         * pulls down again such that the modal should start to move.\n         */\n        if (detail.deltaY > 0 && contentEl) {\n            contentEl.scrollY = false;\n        }\n        /**\n         * Given the change in gesture position on the Y axis,\n         * compute where the offset of the animation should be\n         * relative to where the user dragged.\n         */\n        const initialStep = 1 - currentBreakpoint;\n        const secondToLastBreakpoint = breakpoints.length > 1 ? 1 - breakpoints[1] : undefined;\n        const step = initialStep + detail.deltaY / height;\n        const isAttemptingDismissWithCanDismiss = secondToLastBreakpoint !== undefined && step >= secondToLastBreakpoint && canDismissBlocksGesture;\n        /**\n         * If we are blocking the gesture from dismissing,\n         * set the max step value so that the sheet cannot be\n         * completely hidden.\n         */\n        const maxStep = isAttemptingDismissWithCanDismiss ? canDismissMaxStep : 0.9999;\n        /**\n         * If we are blocking the gesture from\n         * dismissing, calculate the spring modifier value\n         * this will be added to the starting breakpoint\n         * value to give the gesture a spring-like feeling.\n         * Note that when isAttemptingDismissWithCanDismiss is true,\n         * the modifier is always added to the breakpoint that\n         * appears right after the 0 breakpoint.\n         *\n         * Note that this modifier is essentially the progression\n         * between secondToLastBreakpoint and maxStep which is\n         * why we subtract secondToLastBreakpoint. This lets us get\n         * the result as a value from 0 to 1.\n         */\n        const processedStep = isAttemptingDismissWithCanDismiss && secondToLastBreakpoint !== undefined\n            ? secondToLastBreakpoint +\n                calculateSpringStep((step - secondToLastBreakpoint) / (maxStep - secondToLastBreakpoint))\n            : step;\n        offset = clamp(0.0001, processedStep, maxStep);\n        animation.progressStep(offset);\n    };\n    const onEnd = (detail) => {\n        /**\n         * If expandToScroll is disabled, we should not allow the moveSheetToBreakpoint\n         * function to be called if the user is trying to swipe content upwards and the content\n         * is not scrolled to the top.\n         */\n        if (!expandToScroll && detail.deltaY <= 0 && cachedScrollEl && cachedScrollEl.scrollTop > 0) {\n            /**\n             * If expand to scroll is disabled, we need to make sure we swap the footer position\n             * back to stationary so that it will collapse correctly if the modal is dismissed without\n             * dragging (e.g. through a dismiss button).\n             * This can cause issues if the user has a modal with content that can be dragged, as we'll\n             * swap to moving on drag and if we don't swap back here then the footer will get stuck.\n             */\n            swapFooterPosition('stationary');\n            return;\n        }\n        /**\n         * When the gesture releases, we need to determine\n         * the closest breakpoint to snap to.\n         */\n        const velocity = detail.velocityY;\n        const threshold = (detail.deltaY + velocity * 350) / height;\n        const diff = currentBreakpoint - threshold;\n        const closest = breakpoints.reduce((a, b) => {\n            return Math.abs(b - diff) < Math.abs(a - diff) ? b : a;\n        });\n        moveSheetToBreakpoint({\n            breakpoint: closest,\n            breakpointOffset: offset,\n            canDismiss: canDismissBlocksGesture,\n            /**\n             * The swipe is user-driven, so we should\n             * always animate when the gesture ends.\n             */\n            animated: true,\n        });\n    };\n    const moveSheetToBreakpoint = (options) => {\n        const { breakpoint, canDismiss, breakpointOffset, animated } = options;\n        /**\n         * canDismiss should only prevent snapping\n         * when users are trying to dismiss. If canDismiss\n         * is present but the user is trying to swipe upwards,\n         * we should allow that to happen,\n         */\n        const shouldPreventDismiss = canDismiss && breakpoint === 0;\n        const snapToBreakpoint = shouldPreventDismiss ? currentBreakpoint : breakpoint;\n        const shouldRemainOpen = snapToBreakpoint !== 0;\n        currentBreakpoint = 0;\n        /**\n         * Update the animation so that it plays from\n         * the last offset to the closest snap point.\n         */\n        if (wrapperAnimation && backdropAnimation) {\n            wrapperAnimation.keyframes([\n                { offset: 0, transform: `translateY(${breakpointOffset * 100}%)` },\n                { offset: 1, transform: `translateY(${(1 - snapToBreakpoint) * 100}%)` },\n            ]);\n            backdropAnimation.keyframes([\n                {\n                    offset: 0,\n                    opacity: `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(1 - breakpointOffset, backdropBreakpoint)})`,\n                },\n                {\n                    offset: 1,\n                    opacity: `calc(var(--backdrop-opacity) * ${getBackdropValueForSheet(snapToBreakpoint, backdropBreakpoint)})`,\n                },\n            ]);\n            if (contentAnimation) {\n                /**\n                 * The modal content should scroll at any breakpoint when expandToScroll\n                 * is disabled. In order to do this, the content needs to be completely\n                 * viewable so scrolling can access everything. Otherwise, the default\n                 * behavior would show the content off the screen and only allow\n                 * scrolling when the sheet is fully expanded.\n                 */\n                contentAnimation.keyframes([\n                    { offset: 0, maxHeight: `${(1 - breakpointOffset) * 100}%` },\n                    { offset: 1, maxHeight: `${snapToBreakpoint * 100}%` },\n                ]);\n            }\n            animation.progressStep(0);\n        }\n        /**\n         * Gesture should remain disabled until the\n         * snapping animation completes.\n         */\n        gesture.enable(false);\n        if (shouldPreventDismiss) {\n            handleCanDismiss(baseEl, animation);\n        }\n        else if (!shouldRemainOpen) {\n            onDismiss();\n        }\n        /**\n         * Enables scrolling immediately if the sheet is about to fully expand\n         * or if it allows scrolling at any breakpoint. Without this, there would\n         * be a ~500ms delay while the modal animation completes, causing a\n         * noticeable lag. Native iOS allows scrolling as soon as the gesture is\n         * released, so we align with that behavior.\n         */\n        if (contentEl && (snapToBreakpoint === breakpoints[breakpoints.length - 1] || !expandToScroll)) {\n            contentEl.scrollY = true;\n        }\n        /**\n         * If expandToScroll is disabled and we're animating\n         * to close the sheet, we need to swap\n         * the footer position to stationary so that it\n         * will collapse correctly. We cannot just always swap\n         * here or it'll be jittery while animating movement.\n         */\n        if (!expandToScroll && snapToBreakpoint === 0) {\n            swapFooterPosition('stationary');\n        }\n        return new Promise((resolve) => {\n            animation\n                .onFinish(() => {\n                if (shouldRemainOpen) {\n                    /**\n                     * If expandToScroll is disabled, we need to swap\n                     * the footer position to stationary so that it\n                     * will act as it would by default.\n                     */\n                    if (!expandToScroll) {\n                        swapFooterPosition('stationary');\n                    }\n                    /**\n                     * Once the snapping animation completes,\n                     * we need to reset the animation to go\n                     * from 0 to 1 so users can swipe in any direction.\n                     * We then set the animation offset to the current\n                     * breakpoint so that it starts at the snapped position.\n                     */\n                    if (wrapperAnimation && backdropAnimation) {\n                        raf(() => {\n                            wrapperAnimation.keyframes([...SheetDefaults.WRAPPER_KEYFRAMES]);\n                            backdropAnimation.keyframes([...SheetDefaults.BACKDROP_KEYFRAMES]);\n                            contentAnimation === null || contentAnimation === void 0 ? void 0 : contentAnimation.keyframes([...SheetDefaults.CONTENT_KEYFRAMES]);\n                            animation.progressStart(true, 1 - snapToBreakpoint);\n                            currentBreakpoint = snapToBreakpoint;\n                            onBreakpointChange(currentBreakpoint);\n                            /**\n                             * Backdrop should become enabled\n                             * after the backdropBreakpoint value\n                             */\n                            const shouldEnableBackdrop = currentBreakpoint > backdropBreakpoint;\n                            if (shouldEnableBackdrop) {\n                                enableBackdrop();\n                            }\n                            else {\n                                disableBackdrop();\n                            }\n                            gesture.enable(true);\n                            resolve();\n                        });\n                    }\n                    else {\n                        gesture.enable(true);\n                        resolve();\n                    }\n                }\n                else {\n                    resolve();\n                }\n                /**\n                 * This must be a one time callback\n                 * otherwise a new callback will\n                 * be added every time onEnd runs.\n                 */\n            }, { oneTimeCallback: true })\n                .progressEnd(1, 0, animated ? 500 : 0);\n        });\n    };\n    const gesture = createGesture({\n        el: wrapperEl,\n        gestureName: 'modalSheet',\n        gesturePriority: 40,\n        direction: 'y',\n        threshold: 10,\n        canStart,\n        onStart,\n        onMove,\n        onEnd,\n    });\n    return {\n        gesture,\n        moveSheetToBreakpoint,\n    };\n};\n\nconst modalIosCss = \":host{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;color:var(--ion-text-color, #000);contain:strict}.modal-wrapper,ion-backdrop{pointer-events:auto}:host(.overlay-hidden){display:none}.modal-wrapper,.modal-shadow{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){:host{--width:600px;--height:600px}}.modal-handle{left:0px;right:0px;top:5px;border-radius:8px;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;position:absolute;width:36px;height:5px;-webkit-transform:translateZ(0);transform:translateZ(0);border:0;background:var(--ion-color-step-350, var(--ion-background-color-step-350, #c0c0be));cursor:pointer;z-index:11}.modal-handle::before{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;position:absolute;width:36px;height:5px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\"\\\"}:host(.modal-sheet){--height:calc(100% - (var(--ion-safe-area-top) + 10px))}:host(.modal-sheet) .modal-wrapper,:host(.modal-sheet) .modal-shadow{position:absolute;bottom:0}:host(.modal-sheet.modal-no-expand-scroll) ion-footer{position:absolute;bottom:0;width:var(--width)}:host{--backdrop-opacity:var(--ion-backdrop-opacity, 0.4)}:host(.modal-card),:host(.modal-sheet){--border-radius:10px}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--border-radius:10px}}.modal-wrapper{-webkit-transform:translate3d(0,  100%,  0);transform:translate3d(0,  100%,  0)}@media screen and (max-width: 767px){@supports (width: max(0px, 1px)){:host(.modal-card){--height:calc(100% - max(30px, var(--ion-safe-area-top)) - 10px)}}@supports not (width: max(0px, 1px)){:host(.modal-card){--height:calc(100% - 40px)}}:host(.modal-card) .modal-wrapper{border-start-start-radius:var(--border-radius);border-start-end-radius:var(--border-radius);border-end-end-radius:0;border-end-start-radius:0}:host(.modal-card){--backdrop-opacity:0;--width:100%;-ms-flex-align:end;align-items:flex-end}:host(.modal-card) .modal-shadow{display:none}:host(.modal-card) ion-backdrop{pointer-events:none}}@media screen and (min-width: 768px){:host(.modal-card){--width:calc(100% - 120px);--height:calc(100% - (120px + var(--ion-safe-area-top) + var(--ion-safe-area-bottom)));--max-width:720px;--max-height:1000px;--backdrop-opacity:0;--box-shadow:0px 0px 30px 10px rgba(0, 0, 0, 0.1);-webkit-transition:all 0.5s ease-in-out;transition:all 0.5s ease-in-out}:host(.modal-card) .modal-wrapper{-webkit-box-shadow:none;box-shadow:none}:host(.modal-card) .modal-shadow{-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow)}}:host(.modal-sheet) .modal-wrapper{border-start-start-radius:var(--border-radius);border-start-end-radius:var(--border-radius);border-end-end-radius:0;border-end-start-radius:0}\";\n\nconst modalMdCss = \":host{--width:100%;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--overflow:hidden;--border-radius:0;--border-width:0;--border-style:none;--border-color:transparent;--background:var(--ion-background-color, #fff);--box-shadow:none;--backdrop-opacity:0;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;outline:none;color:var(--ion-text-color, #000);contain:strict}.modal-wrapper,ion-backdrop{pointer-events:auto}:host(.overlay-hidden){display:none}.modal-wrapper,.modal-shadow{border-radius:var(--border-radius);width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-shadow:var(--box-shadow);box-shadow:var(--box-shadow);overflow:var(--overflow);z-index:10}.modal-shadow{position:absolute;background:transparent}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--width:600px;--height:500px;--ion-safe-area-top:0px;--ion-safe-area-bottom:0px;--ion-safe-area-right:0px;--ion-safe-area-left:0px}}@media only screen and (min-width: 768px) and (min-height: 768px){:host{--width:600px;--height:600px}}.modal-handle{left:0px;right:0px;top:5px;border-radius:8px;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;position:absolute;width:36px;height:5px;-webkit-transform:translateZ(0);transform:translateZ(0);border:0;background:var(--ion-color-step-350, var(--ion-background-color-step-350, #c0c0be));cursor:pointer;z-index:11}.modal-handle::before{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;position:absolute;width:36px;height:5px;-webkit-transform:translate(-50%, -50%);transform:translate(-50%, -50%);content:\\\"\\\"}:host(.modal-sheet){--height:calc(100% - (var(--ion-safe-area-top) + 10px))}:host(.modal-sheet) .modal-wrapper,:host(.modal-sheet) .modal-shadow{position:absolute;bottom:0}:host(.modal-sheet.modal-no-expand-scroll) ion-footer{position:absolute;bottom:0;width:var(--width)}:host{--backdrop-opacity:var(--ion-backdrop-opacity, 0.32)}@media only screen and (min-width: 768px) and (min-height: 600px){:host{--border-radius:2px;--box-shadow:0 28px 48px rgba(0, 0, 0, 0.4)}}.modal-wrapper{-webkit-transform:translate3d(0,  40px,  0);transform:translate3d(0,  40px,  0);opacity:0.01}\";\n\nconst Modal = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.didPresent = createEvent(this, \"ionModalDidPresent\", 7);\n        this.willPresent = createEvent(this, \"ionModalWillPresent\", 7);\n        this.willDismiss = createEvent(this, \"ionModalWillDismiss\", 7);\n        this.didDismiss = createEvent(this, \"ionModalDidDismiss\", 7);\n        this.ionBreakpointDidChange = createEvent(this, \"ionBreakpointDidChange\", 7);\n        this.didPresentShorthand = createEvent(this, \"didPresent\", 7);\n        this.willPresentShorthand = createEvent(this, \"willPresent\", 7);\n        this.willDismissShorthand = createEvent(this, \"willDismiss\", 7);\n        this.didDismissShorthand = createEvent(this, \"didDismiss\", 7);\n        this.ionMount = createEvent(this, \"ionMount\", 7);\n        this.lockController = createLockController();\n        this.triggerController = createTriggerController();\n        this.coreDelegate = CoreDelegate();\n        this.isSheetModal = false;\n        this.inheritedAttributes = {};\n        this.inline = false;\n        // Whether or not modal is being dismissed via gesture\n        this.gestureAnimationDismissing = false;\n        this.presented = false;\n        /** @internal */\n        this.hasController = false;\n        /**\n         * If `true`, the keyboard will be automatically dismissed when the overlay is presented.\n         */\n        this.keyboardClose = true;\n        /**\n         * Controls whether scrolling or dragging within the sheet modal expands\n         * it to a larger breakpoint. This only takes effect when `breakpoints`\n         * and `initialBreakpoint` are set.\n         *\n         * If `true`, scrolling or dragging anywhere in the modal will first expand\n         * it to the next breakpoint. Once fully expanded, scrolling will affect the\n         * content.\n         * If `false`, scrolling will always affect the content. The modal will\n         * only expand when dragging the header or handle. The modal will close when\n         * dragging the header or handle. It can also be closed when dragging the\n         * content, but only if the content is scrolled to the top.\n         */\n        this.expandToScroll = true;\n        /**\n         * A decimal value between 0 and 1 that indicates the\n         * point after which the backdrop will begin to fade in\n         * when using a sheet modal. Prior to this point, the\n         * backdrop will be hidden and the content underneath\n         * the sheet can be interacted with. This value is exclusive\n         * meaning the backdrop will become active after the value\n         * specified.\n         */\n        this.backdropBreakpoint = 0;\n        /**\n         * The interaction behavior for the sheet modal when the handle is pressed.\n         *\n         * Defaults to `\"none\"`, which  means the modal will not change size or position when the handle is pressed.\n         * Set to `\"cycle\"` to let the modal cycle between available breakpoints when pressed.\n         *\n         * Handle behavior is unavailable when the `handle` property is set to `false` or\n         * when the `breakpoints` property is not set (using a fullscreen or card modal).\n         */\n        this.handleBehavior = 'none';\n        /**\n         * If `true`, the modal will be dismissed when the backdrop is clicked.\n         */\n        this.backdropDismiss = true;\n        /**\n         * If `true`, a backdrop will be displayed behind the modal.\n         * This property controls whether or not the backdrop\n         * darkens the screen when the modal is presented.\n         * It does not control whether or not the backdrop\n         * is active or present in the DOM.\n         */\n        this.showBackdrop = true;\n        /**\n         * If `true`, the modal will animate.\n         */\n        this.animated = true;\n        /**\n         * If `true`, the modal will open. If `false`, the modal will close.\n         * Use this if you need finer grained control over presentation, otherwise\n         * just use the modalController or the `trigger` property.\n         * Note: `isOpen` will not automatically be set back to `false` when\n         * the modal dismisses. You will need to do that in your code.\n         */\n        this.isOpen = false;\n        /**\n         * If `true`, the component passed into `ion-modal` will\n         * automatically be mounted when the modal is created. The\n         * component will remain mounted even when the modal is dismissed.\n         * However, the component will be destroyed when the modal is\n         * destroyed. This property is not reactive and should only be\n         * used when initially creating a modal.\n         *\n         * Note: This feature only applies to inline modals in JavaScript\n         * frameworks such as Angular, React, and Vue.\n         */\n        this.keepContentsMounted = false;\n        /**\n         * If `true`, focus will not be allowed to move outside of this overlay.\n         * If `false`, focus will be allowed to move outside of the overlay.\n         *\n         * In most scenarios this property should remain set to `true`. Setting\n         * this property to `false` can cause severe accessibility issues as users\n         * relying on assistive technologies may be able to move focus into\n         * a confusing state. We recommend only setting this to `false` when\n         * absolutely necessary.\n         *\n         * Developers may want to consider disabling focus trapping if this\n         * overlay presents a non-Ionic overlay from a 3rd party library.\n         * Developers would disable focus trapping on the Ionic overlay\n         * when presenting the 3rd party overlay and then re-enable\n         * focus trapping when dismissing the 3rd party overlay and moving\n         * focus back to the Ionic overlay.\n         */\n        this.focusTrap = true;\n        /**\n         * Determines whether or not a modal can dismiss\n         * when calling the `dismiss` method.\n         *\n         * If the value is `true` or the value's function returns `true`, the modal will close when trying to dismiss.\n         * If the value is `false` or the value's function returns `false`, the modal will not close when trying to dismiss.\n         *\n         * See https://ionicframework.com/docs/troubleshooting/runtime#accessing-this\n         * if you need to access `this` from within the callback.\n         */\n        this.canDismiss = true;\n        this.onHandleClick = () => {\n            const { sheetTransition, handleBehavior } = this;\n            if (handleBehavior !== 'cycle' || sheetTransition !== undefined) {\n                /**\n                 * The sheet modal should not advance to the next breakpoint\n                 * if the handle behavior is not `cycle` or if the handle\n                 * is clicked while the sheet is moving to a breakpoint.\n                 */\n                return;\n            }\n            this.moveToNextBreakpoint();\n        };\n        this.onBackdropTap = () => {\n            const { sheetTransition } = this;\n            if (sheetTransition !== undefined) {\n                /**\n                 * When the handle is double clicked at the largest breakpoint,\n                 * it will start to move to the first breakpoint. While transitioning,\n                 * the backdrop will often receive the second click. We prevent the\n                 * backdrop from dismissing the modal while moving between breakpoints.\n                 */\n                return;\n            }\n            this.dismiss(undefined, BACKDROP);\n        };\n        this.onLifecycle = (modalEvent) => {\n            const el = this.usersElement;\n            const name = LIFECYCLE_MAP[modalEvent.type];\n            if (el && name) {\n                const ev = new CustomEvent(name, {\n                    bubbles: false,\n                    cancelable: false,\n                    detail: modalEvent.detail,\n                });\n                el.dispatchEvent(ev);\n            }\n        };\n        /**\n         * When the modal receives focus directly, pass focus to the handle\n         * if it exists and is focusable, otherwise let the focus trap handle it.\n         */\n        this.onModalFocus = (ev) => {\n            const { dragHandleEl, el } = this;\n            // Only handle focus if the modal itself was focused (not a child element)\n            if (ev.target === el && dragHandleEl && dragHandleEl.tabIndex !== -1) {\n                dragHandleEl.focus();\n            }\n        };\n    }\n    onIsOpenChange(newValue, oldValue) {\n        if (newValue === true && oldValue === false) {\n            this.present();\n        }\n        else if (newValue === false && oldValue === true) {\n            this.dismiss();\n        }\n    }\n    triggerChanged() {\n        const { trigger, el, triggerController } = this;\n        if (trigger) {\n            triggerController.addClickListener(el, trigger);\n        }\n    }\n    onWindowResize() {\n        // Only handle resize for iOS card modals when no custom animations are provided\n        if (getIonMode(this) !== 'ios' || !this.presentingElement || this.enterAnimation || this.leaveAnimation) {\n            return;\n        }\n        clearTimeout(this.resizeTimeout);\n        this.resizeTimeout = setTimeout(() => {\n            this.handleViewTransition();\n        }, 50); // Debounce to avoid excessive calls during active resizing\n    }\n    breakpointsChanged(breakpoints) {\n        if (breakpoints !== undefined) {\n            this.sortedBreakpoints = breakpoints.sort((a, b) => a - b);\n        }\n    }\n    connectedCallback() {\n        const { el } = this;\n        prepareOverlay(el);\n        this.triggerChanged();\n    }\n    disconnectedCallback() {\n        this.triggerController.removeClickListener();\n        this.cleanupViewTransitionListener();\n    }\n    componentWillLoad() {\n        var _a;\n        const { breakpoints, initialBreakpoint, el, htmlAttributes } = this;\n        const isSheetModal = (this.isSheetModal = breakpoints !== undefined && initialBreakpoint !== undefined);\n        const attributesToInherit = ['aria-label', 'role'];\n        this.inheritedAttributes = inheritAttributes(el, attributesToInherit);\n        /**\n         * When using a controller modal you can set attributes\n         * using the htmlAttributes property. Since the above attributes\n         * need to be inherited inside of the modal, we need to look\n         * and see if these attributes are being set via htmlAttributes.\n         *\n         * We could alternatively move this to componentDidLoad to simplify the work\n         * here, but we'd then need to make inheritedAttributes a State variable,\n         * thus causing another render to always happen after the first render.\n         */\n        if (htmlAttributes !== undefined) {\n            attributesToInherit.forEach((attribute) => {\n                const attributeValue = htmlAttributes[attribute];\n                if (attributeValue) {\n                    /**\n                     * If an attribute we need to inherit was\n                     * set using htmlAttributes then add it to\n                     * inheritedAttributes and remove it from htmlAttributes.\n                     * This ensures the attribute is inherited and not\n                     * set on the host.\n                     *\n                     * In this case, if an inherited attribute is set\n                     * on the host element and using htmlAttributes then\n                     * htmlAttributes wins, but that's not a pattern that we recommend.\n                     * The only time you'd need htmlAttributes is when using modalController.\n                     */\n                    this.inheritedAttributes = Object.assign(Object.assign({}, this.inheritedAttributes), { [attribute]: htmlAttributes[attribute] });\n                    delete htmlAttributes[attribute];\n                }\n            });\n        }\n        if (isSheetModal) {\n            this.currentBreakpoint = this.initialBreakpoint;\n        }\n        if (breakpoints !== undefined && initialBreakpoint !== undefined && !breakpoints.includes(initialBreakpoint)) {\n            printIonWarning('[ion-modal] - Your breakpoints array must include the initialBreakpoint value.');\n        }\n        if (!((_a = this.htmlAttributes) === null || _a === void 0 ? void 0 : _a.id)) {\n            setOverlayId(this.el);\n        }\n    }\n    componentDidLoad() {\n        /**\n         * If modal was rendered with isOpen=\"true\"\n         * then we should open modal immediately.\n         */\n        if (this.isOpen === true) {\n            raf(() => this.present());\n        }\n        this.breakpointsChanged(this.breakpoints);\n        /**\n         * When binding values in frameworks such as Angular\n         * it is possible for the value to be set after the Web Component\n         * initializes but before the value watcher is set up in Stencil.\n         * As a result, the watcher callback may not be fired.\n         * We work around this by manually calling the watcher\n         * callback when the component has loaded and the watcher\n         * is configured.\n         */\n        this.triggerChanged();\n    }\n    /**\n     * Determines whether or not an overlay\n     * is being used inline or via a controller/JS\n     * and returns the correct delegate.\n     * By default, subsequent calls to getDelegate\n     * will use a cached version of the delegate.\n     * This is useful for calling dismiss after\n     * present so that the correct delegate is given.\n     */\n    getDelegate(force = false) {\n        if (this.workingDelegate && !force) {\n            return {\n                delegate: this.workingDelegate,\n                inline: this.inline,\n            };\n        }\n        /**\n         * If using overlay inline\n         * we potentially need to use the coreDelegate\n         * so that this works in vanilla JS apps.\n         * If a developer has presented this component\n         * via a controller, then we can assume\n         * the component is already in the\n         * correct place.\n         */\n        const parentEl = this.el.parentNode;\n        const inline = (this.inline = parentEl !== null && !this.hasController);\n        const delegate = (this.workingDelegate = inline ? this.delegate || this.coreDelegate : this.delegate);\n        return { inline, delegate };\n    }\n    /**\n     * Determines whether or not the\n     * modal is allowed to dismiss based\n     * on the state of the canDismiss prop.\n     */\n    async checkCanDismiss(data, role) {\n        const { canDismiss } = this;\n        if (typeof canDismiss === 'function') {\n            return canDismiss(data, role);\n        }\n        return canDismiss;\n    }\n    /**\n     * Present the modal overlay after it has been created.\n     */\n    async present() {\n        const unlock = await this.lockController.lock();\n        if (this.presented) {\n            unlock();\n            return;\n        }\n        const { presentingElement, el } = this;\n        /**\n         * If the modal is presented multiple times (inline modals), we\n         * need to reset the current breakpoint to the initial breakpoint.\n         */\n        this.currentBreakpoint = this.initialBreakpoint;\n        const { inline, delegate } = this.getDelegate(true);\n        /**\n         * Emit ionMount so JS Frameworks have an opportunity\n         * to add the child component to the DOM. The child\n         * component will be assigned to this.usersElement below.\n         */\n        this.ionMount.emit();\n        this.usersElement = await attachComponent(delegate, el, this.component, ['ion-page'], this.componentProps, inline);\n        /**\n         * When using the lazy loaded build of Stencil, we need to wait\n         * for every Stencil component instance to be ready before presenting\n         * otherwise there can be a flash of unstyled content. With the\n         * custom elements bundle we need to wait for the JS framework\n         * mount the inner contents of the overlay otherwise WebKit may\n         * get the transition incorrect.\n         */\n        if (hasLazyBuild(el)) {\n            await deepReady(this.usersElement);\n            /**\n             * If keepContentsMounted=\"true\" then the\n             * JS Framework has already mounted the inner\n             * contents so there is no need to wait.\n             * Otherwise, we need to wait for the JS\n             * Framework to mount the inner contents\n             * of this component.\n             */\n        }\n        else if (!this.keepContentsMounted) {\n            await waitForMount();\n        }\n        writeTask(() => this.el.classList.add('show-modal'));\n        const hasCardModal = presentingElement !== undefined;\n        /**\n         * We need to change the status bar at the\n         * start of the animation so that it completes\n         * by the time the card animation is done.\n         */\n        if (hasCardModal && getIonMode(this) === 'ios') {\n            // Cache the original status bar color before the modal is presented\n            this.statusBarStyle = await StatusBar.getStyle();\n            setCardStatusBarDark();\n        }\n        await present(this, 'modalEnter', iosEnterAnimation, mdEnterAnimation, {\n            presentingEl: presentingElement,\n            currentBreakpoint: this.initialBreakpoint,\n            backdropBreakpoint: this.backdropBreakpoint,\n            expandToScroll: this.expandToScroll,\n        });\n        /* tslint:disable-next-line */\n        if (typeof window !== 'undefined') {\n            /**\n             * This needs to be setup before any\n             * non-transition async work so it can be dereferenced\n             * in the dismiss method. The dismiss method\n             * only waits for the entering transition\n             * to finish. It does not wait for all of the `present`\n             * method to resolve.\n             */\n            this.keyboardOpenCallback = () => {\n                if (this.gesture) {\n                    /**\n                     * When the native keyboard is opened and the webview\n                     * is resized, the gesture implementation will become unresponsive\n                     * and enter a free-scroll mode.\n                     *\n                     * When the keyboard is opened, we disable the gesture for\n                     * a single frame and re-enable once the contents have repositioned\n                     * from the keyboard placement.\n                     */\n                    this.gesture.enable(false);\n                    raf(() => {\n                        if (this.gesture) {\n                            this.gesture.enable(true);\n                        }\n                    });\n                }\n            };\n            window.addEventListener(KEYBOARD_DID_OPEN, this.keyboardOpenCallback);\n        }\n        if (this.isSheetModal) {\n            this.initSheetGesture();\n        }\n        else if (hasCardModal) {\n            this.initSwipeToClose();\n        }\n        // Initialize view transition listener for iOS card modals\n        this.initViewTransitionListener();\n        unlock();\n    }\n    initSwipeToClose() {\n        var _a;\n        if (getIonMode(this) !== 'ios') {\n            return;\n        }\n        const { el } = this;\n        // All of the elements needed for the swipe gesture\n        // should be in the DOM and referenced by now, except\n        // for the presenting el\n        const animationBuilder = this.leaveAnimation || config.get('modalLeave', iosLeaveAnimation);\n        const ani = (this.animation = animationBuilder(el, {\n            presentingEl: this.presentingElement,\n            expandToScroll: this.expandToScroll,\n        }));\n        const contentEl = findIonContent(el);\n        if (!contentEl) {\n            printIonContentErrorMsg(el);\n            return;\n        }\n        const statusBarStyle = (_a = this.statusBarStyle) !== null && _a !== void 0 ? _a : Style.Default;\n        this.gesture = createSwipeToCloseGesture(el, ani, statusBarStyle, () => {\n            /**\n             * While the gesture animation is finishing\n             * it is possible for a user to tap the backdrop.\n             * This would result in the dismiss animation\n             * being played again. Typically this is avoided\n             * by setting `presented = false` on the overlay\n             * component; however, we cannot do that here as\n             * that would prevent the element from being\n             * removed from the DOM.\n             */\n            this.gestureAnimationDismissing = true;\n            /**\n             * Reset the status bar style as the dismiss animation\n             * starts otherwise the status bar will be the wrong\n             * color for the duration of the dismiss animation.\n             * The dismiss method does this as well, but\n             * in this case it's only called once the animation\n             * has finished.\n             */\n            setCardStatusBarDefault(this.statusBarStyle);\n            this.animation.onFinish(async () => {\n                await this.dismiss(undefined, GESTURE);\n                this.gestureAnimationDismissing = false;\n            });\n        });\n        this.gesture.enable(true);\n    }\n    initSheetGesture() {\n        const { wrapperEl, initialBreakpoint, backdropBreakpoint } = this;\n        if (!wrapperEl || initialBreakpoint === undefined) {\n            return;\n        }\n        const animationBuilder = this.enterAnimation || config.get('modalEnter', iosEnterAnimation);\n        const ani = (this.animation = animationBuilder(this.el, {\n            presentingEl: this.presentingElement,\n            currentBreakpoint: initialBreakpoint,\n            backdropBreakpoint,\n            expandToScroll: this.expandToScroll,\n        }));\n        ani.progressStart(true, 1);\n        const { gesture, moveSheetToBreakpoint } = createSheetGesture(this.el, this.backdropEl, wrapperEl, initialBreakpoint, backdropBreakpoint, ani, this.sortedBreakpoints, this.expandToScroll, () => { var _a; return (_a = this.currentBreakpoint) !== null && _a !== void 0 ? _a : 0; }, () => this.sheetOnDismiss(), (breakpoint) => {\n            if (this.currentBreakpoint !== breakpoint) {\n                this.currentBreakpoint = breakpoint;\n                this.ionBreakpointDidChange.emit({ breakpoint });\n            }\n        });\n        this.gesture = gesture;\n        this.moveSheetToBreakpoint = moveSheetToBreakpoint;\n        this.gesture.enable(true);\n    }\n    sheetOnDismiss() {\n        /**\n         * While the gesture animation is finishing\n         * it is possible for a user to tap the backdrop.\n         * This would result in the dismiss animation\n         * being played again. Typically this is avoided\n         * by setting `presented = false` on the overlay\n         * component; however, we cannot do that here as\n         * that would prevent the element from being\n         * removed from the DOM.\n         */\n        this.gestureAnimationDismissing = true;\n        this.animation.onFinish(async () => {\n            this.currentBreakpoint = 0;\n            this.ionBreakpointDidChange.emit({ breakpoint: this.currentBreakpoint });\n            await this.dismiss(undefined, GESTURE);\n            this.gestureAnimationDismissing = false;\n        });\n    }\n    /**\n     * Dismiss the modal overlay after it has been presented.\n     * This is a no-op if the overlay has not been presented yet. If you want\n     * to remove an overlay from the DOM that was never presented, use the\n     * [remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the modal.\n     * For example, `cancel` or `backdrop`.\n     */\n    async dismiss(data, role) {\n        var _a;\n        if (this.gestureAnimationDismissing && role !== GESTURE) {\n            return false;\n        }\n        /**\n         * Because the canDismiss check below is async,\n         * we need to claim a lock before the check happens,\n         * in case the dismiss transition does run.\n         */\n        const unlock = await this.lockController.lock();\n        /**\n         * If a canDismiss handler is responsible\n         * for calling the dismiss method, we should\n         * not run the canDismiss check again.\n         */\n        if (role !== 'handler' && !(await this.checkCanDismiss(data, role))) {\n            unlock();\n            return false;\n        }\n        const { presentingElement } = this;\n        /**\n         * We need to start the status bar change\n         * before the animation so that the change\n         * finishes when the dismiss animation does.\n         */\n        const hasCardModal = presentingElement !== undefined;\n        if (hasCardModal && getIonMode(this) === 'ios') {\n            setCardStatusBarDefault(this.statusBarStyle);\n        }\n        /* tslint:disable-next-line */\n        if (typeof window !== 'undefined' && this.keyboardOpenCallback) {\n            window.removeEventListener(KEYBOARD_DID_OPEN, this.keyboardOpenCallback);\n            this.keyboardOpenCallback = undefined;\n        }\n        const dismissed = await dismiss(this, data, role, 'modalLeave', iosLeaveAnimation, mdLeaveAnimation, {\n            presentingEl: presentingElement,\n            currentBreakpoint: (_a = this.currentBreakpoint) !== null && _a !== void 0 ? _a : this.initialBreakpoint,\n            backdropBreakpoint: this.backdropBreakpoint,\n            expandToScroll: this.expandToScroll,\n        });\n        if (dismissed) {\n            const { delegate } = this.getDelegate();\n            await detachComponent(delegate, this.usersElement);\n            writeTask(() => this.el.classList.remove('show-modal'));\n            if (this.animation) {\n                this.animation.destroy();\n            }\n            if (this.gesture) {\n                this.gesture.destroy();\n            }\n            this.cleanupViewTransitionListener();\n        }\n        this.currentBreakpoint = undefined;\n        this.animation = undefined;\n        unlock();\n        return dismissed;\n    }\n    /**\n     * Returns a promise that resolves when the modal did dismiss.\n     */\n    onDidDismiss() {\n        return eventMethod(this.el, 'ionModalDidDismiss');\n    }\n    /**\n     * Returns a promise that resolves when the modal will dismiss.\n     */\n    onWillDismiss() {\n        return eventMethod(this.el, 'ionModalWillDismiss');\n    }\n    /**\n     * Move a sheet style modal to a specific breakpoint.\n     *\n     * @param breakpoint The breakpoint value to move the sheet modal to.\n     * Must be a value defined in your `breakpoints` array.\n     */\n    async setCurrentBreakpoint(breakpoint) {\n        if (!this.isSheetModal) {\n            printIonWarning('[ion-modal] - setCurrentBreakpoint is only supported on sheet modals.');\n            return;\n        }\n        if (!this.breakpoints.includes(breakpoint)) {\n            printIonWarning(`[ion-modal] - Attempted to set invalid breakpoint value ${breakpoint}. Please double check that the breakpoint value is part of your defined breakpoints.`);\n            return;\n        }\n        const { currentBreakpoint, moveSheetToBreakpoint, canDismiss, breakpoints, animated } = this;\n        if (currentBreakpoint === breakpoint) {\n            return;\n        }\n        if (moveSheetToBreakpoint) {\n            this.sheetTransition = moveSheetToBreakpoint({\n                breakpoint,\n                breakpointOffset: 1 - currentBreakpoint,\n                canDismiss: canDismiss !== undefined && canDismiss !== true && breakpoints[0] === 0,\n                animated,\n            });\n            await this.sheetTransition;\n            this.sheetTransition = undefined;\n        }\n    }\n    /**\n     * Returns the current breakpoint of a sheet style modal\n     */\n    async getCurrentBreakpoint() {\n        return this.currentBreakpoint;\n    }\n    async moveToNextBreakpoint() {\n        const { breakpoints, currentBreakpoint } = this;\n        if (!breakpoints || currentBreakpoint == null) {\n            /**\n             * If the modal does not have breakpoints and/or the current\n             * breakpoint is not set, we can't move to the next breakpoint.\n             */\n            return false;\n        }\n        const allowedBreakpoints = breakpoints.filter((b) => b !== 0);\n        const currentBreakpointIndex = allowedBreakpoints.indexOf(currentBreakpoint);\n        const nextBreakpointIndex = (currentBreakpointIndex + 1) % allowedBreakpoints.length;\n        const nextBreakpoint = allowedBreakpoints[nextBreakpointIndex];\n        /**\n         * Sets the current breakpoint to the next available breakpoint.\n         * If the current breakpoint is the last breakpoint, we set the current\n         * breakpoint to the first non-zero breakpoint to avoid dismissing the sheet.\n         */\n        await this.setCurrentBreakpoint(nextBreakpoint);\n        return true;\n    }\n    initViewTransitionListener() {\n        // Only enable for iOS card modals when no custom animations are provided\n        if (getIonMode(this) !== 'ios' || !this.presentingElement || this.enterAnimation || this.leaveAnimation) {\n            return;\n        }\n        // Set initial view state\n        this.currentViewIsPortrait = window.innerWidth < 768;\n    }\n    handleViewTransition() {\n        const isPortrait = window.innerWidth < 768;\n        // Only transition if view state actually changed\n        if (this.currentViewIsPortrait === isPortrait) {\n            return;\n        }\n        // Cancel any ongoing transition animation\n        if (this.viewTransitionAnimation) {\n            this.viewTransitionAnimation.destroy();\n            this.viewTransitionAnimation = undefined;\n        }\n        const { presentingElement } = this;\n        if (!presentingElement) {\n            return;\n        }\n        // Create transition animation\n        let transitionAnimation;\n        if (this.currentViewIsPortrait && !isPortrait) {\n            // Portrait to landscape transition\n            transitionAnimation = portraitToLandscapeTransition(this.el, {\n                presentingEl: presentingElement});\n        }\n        else {\n            // Landscape to portrait transition\n            transitionAnimation = landscapeToPortraitTransition(this.el, {\n                presentingEl: presentingElement});\n        }\n        // Update state and play animation\n        this.currentViewIsPortrait = isPortrait;\n        this.viewTransitionAnimation = transitionAnimation;\n        transitionAnimation.play().then(() => {\n            this.viewTransitionAnimation = undefined;\n            // After orientation transition, recreate the swipe-to-close gesture\n            // with updated animation that reflects the new presenting element state\n            this.reinitSwipeToClose();\n        });\n    }\n    cleanupViewTransitionListener() {\n        // Clear any pending resize timeout\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n            this.resizeTimeout = undefined;\n        }\n        if (this.viewTransitionAnimation) {\n            this.viewTransitionAnimation.destroy();\n            this.viewTransitionAnimation = undefined;\n        }\n    }\n    reinitSwipeToClose() {\n        // Only reinitialize if we have a presenting element and are on iOS\n        if (getIonMode(this) !== 'ios' || !this.presentingElement) {\n            return;\n        }\n        // Clean up existing gesture and animation\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        if (this.animation) {\n            // Properly end the progress-based animation at initial state before destroying\n            // to avoid leaving modal in intermediate swipe position\n            this.animation.progressEnd(0, 0, 0);\n            this.animation.destroy();\n            this.animation = undefined;\n        }\n        // Force the modal back to the correct position or it could end up\n        // in a weird state after destroying the animation\n        raf(() => {\n            this.ensureCorrectModalPosition();\n            this.initSwipeToClose();\n        });\n    }\n    ensureCorrectModalPosition() {\n        const { el, presentingElement } = this;\n        const root = getElementRoot(el);\n        const wrapperEl = root.querySelector('.modal-wrapper');\n        if (wrapperEl) {\n            wrapperEl.style.transform = 'translateY(0vh)';\n            wrapperEl.style.opacity = '1';\n        }\n        if (presentingElement) {\n            const isPortrait = window.innerWidth < 768;\n            if (isPortrait) {\n                const transformOffset = !CSS.supports('width', 'max(0px, 1px)')\n                    ? '30px'\n                    : 'max(30px, var(--ion-safe-area-top))';\n                const scale = SwipeToCloseDefaults.MIN_PRESENTING_SCALE;\n                presentingElement.style.transform = `translateY(${transformOffset}) scale(${scale})`;\n            }\n            else {\n                presentingElement.style.transform = 'translateY(0px) scale(1)';\n            }\n        }\n    }\n    render() {\n        const { handle, isSheetModal, presentingElement, htmlAttributes, handleBehavior, inheritedAttributes, focusTrap, expandToScroll, } = this;\n        const showHandle = handle !== false && isSheetModal;\n        const mode = getIonMode(this);\n        const isCardModal = presentingElement !== undefined && mode === 'ios';\n        const isHandleCycle = handleBehavior === 'cycle';\n        const isSheetModalWithHandle = isSheetModal && showHandle;\n        return (h(Host, Object.assign({ key: '1980fa23331381c568a2be8091d888e09754fc52', \"no-router\": true,\n            // Allow the modal to be navigable when the handle is focusable\n            tabIndex: isHandleCycle && isSheetModalWithHandle ? 0 : -1 }, htmlAttributes, { style: {\n                zIndex: `${20000 + this.overlayIndex}`,\n            }, class: Object.assign({ [mode]: true, ['modal-default']: !isCardModal && !isSheetModal, [`modal-card`]: isCardModal, [`modal-sheet`]: isSheetModal, [`modal-no-expand-scroll`]: isSheetModal && !expandToScroll, 'overlay-hidden': true, [FOCUS_TRAP_DISABLE_CLASS]: focusTrap === false }, getClassMap(this.cssClass)), onIonBackdropTap: this.onBackdropTap, onIonModalDidPresent: this.onLifecycle, onIonModalWillPresent: this.onLifecycle, onIonModalWillDismiss: this.onLifecycle, onIonModalDidDismiss: this.onLifecycle, onFocus: this.onModalFocus }), h(\"ion-backdrop\", { key: 'ba94b055c064e2907eabbe6d7a43cb52adff1048', ref: (el) => (this.backdropEl = el), visible: this.showBackdrop, tappable: this.backdropDismiss, part: \"backdrop\" }), mode === 'ios' && h(\"div\", { key: '991f47859250d2143275ebb9b0b01a6ea8c491c0', class: \"modal-shadow\" }), h(\"div\", Object.assign({ key: '02ecf8ac6a5bdb309ff993cc74a3911e99502a89',\n            /*\n              role and aria-modal must be used on the\n              same element. They must also be set inside the\n              shadow DOM otherwise ion-button will not be highlighted\n              when using VoiceOver: https://bugs.webkit.org/show_bug.cgi?id=247134\n            */\n            role: \"dialog\" }, inheritedAttributes, { \"aria-modal\": \"true\", class: \"modal-wrapper ion-overlay-wrapper\", part: \"content\", ref: (el) => (this.wrapperEl = el) }), showHandle && (h(\"button\", { key: '0180a4d6952e41bfd736272d1a49d47d86ca7fef', class: \"modal-handle\",\n            // Prevents the handle from receiving keyboard focus when it does not cycle\n            tabIndex: !isHandleCycle ? -1 : 0, \"aria-label\": \"Activate to adjust the size of the dialog overlaying the screen\", onClick: isHandleCycle ? this.onHandleClick : undefined, part: \"handle\", ref: (el) => (this.dragHandleEl = el) })), h(\"slot\", { key: 'd062f330675f730ad70c23267baed200ca9b43b0' }))));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"isOpen\": [\"onIsOpenChange\"],\n        \"trigger\": [\"triggerChanged\"]\n    }; }\n};\nconst LIFECYCLE_MAP = {\n    ionModalDidPresent: 'ionViewDidEnter',\n    ionModalWillPresent: 'ionViewWillEnter',\n    ionModalWillDismiss: 'ionViewWillLeave',\n    ionModalDidDismiss: 'ionViewDidLeave',\n};\nModal.style = {\n    ios: modalIosCss,\n    md: modalMdCss\n};\n\nexport { Modal as ion_modal };\n"],"x_google_ignoreList":[0,1]}