{"version":3,"file":"2511.0afad38a504553f4.js","mappings":"qRAwBUA,MAAA,qBAA4CA,MAAA,yBAAAC,GAAAD,MAAAE,GAAA,MAAAC,EAAAH,qBAAAG,EAAAC,aAAAC,KAAAJ,KAAAE,EAAAC,aAAAC,KAAAJ,GAAAD,MAAAC,EAAA,GAA5CD,gCAA4CA,MAAA,UAAAG,EAAAC,aAAAC,OCP/C,IAAMC,EAAgB,UAAAC,EAAvB,MAAOD,EANbE,cAOUC,KAAAC,uBAA2CC,OAAOC,KAClDH,KAAAI,mBAAmCF,OAAOG,MAE3CL,KAAAL,aAA8B,CACnCW,MAAO,GACPC,KAAM,GACNX,KAAMY,IAASC,OAAO,uBACtBC,IAAK,IAGPC,mBAAgB,IAAAC,EAAAZ,KACda,QAAQC,IAAId,KAAKL,cACjBK,KAAKC,oBAAoBU,iBAAiBX,KAAKL,cAAcoB,KAAI,eAAAC,KAAAC,KAAE,UAAOC,GACrEA,cACmBN,EAAKR,gBAAgBe,OAAO,CAC9CC,QAAS,gCACTC,SAAU,IACVC,SAAU,SAEAC,sBAEQX,EAAKR,gBAAgBe,OAAO,CAC9CC,QAAS,mCACTC,SAAU,IACVC,SAAU,SAEAC,SAEhB,GAAC,gBAAAC,GAAA,OAAAR,EAAAS,MAAAzB,KAAA0B,UAAA,EAhBgE,IAgB9DC,MAAK,eAAAC,KAAAX,KAAC,UAAMY,eACOjB,EAAKR,gBAAgBe,OAAO,CAC9CC,QAAS,8CAAgDU,KAAKC,UAAUF,GACxER,SAAU,IACVC,SAAU,SAEAC,SACd,GAAC,gBAAAS,GAAA,OAAAJ,EAAAH,MAAAzB,KAAA0B,UAAA,EAPO,GAQV,WArCW7B,yCAAgB,0BAAhBA,EAAgBoC,UAAA,uBAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,weAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDjB7B/C,MAAA,kBAIEA,MAFF,kBAEEA,CAF+B,YAEzBA,MAAA,6BAAYgD,EAAA5B,kBAAkB,GAGhCpB,MADF,aACEA,CADQ,iBAC4CA,MAAA,yBAAAC,GAAAD,aAAAgD,EAAA5C,aAAAW,MAAAd,KAAA+C,EAAA5C,aAAAW,MAAAd,IAAA,GACtDD,UAGEA,MADF,aACEA,CADQ,oBAC8CA,MAAA,yBAAAC,GAAAD,aAAAgD,EAAA5C,aAAAY,KAAAf,KAAA+C,EAAA5C,aAAAY,KAAAf,IAAA,GACxDD,UAGEA,MADF,aACEA,CADQ,iBACmEA,MAAA,yBAAAC,GAAAD,aAAAgD,EAAA5C,aAAAe,IAAAlB,KAAA+C,EAAA5C,aAAAe,IAAAlB,IAAA,GAC7ED,UAGEA,MADF,aACEA,CADQ,gBACGA,MAAA,kBAAWA,QACtBA,MAAA,4BAEAA,MAAA,kBACEA,MAAA,GAAAiD,EAAA,mBAIJjD,UAGEA,MADF,gBACEA,CADqB,mBACgBA,MAAA,aAK3CA,qBAjCaA,cAAA,iBAK6CA,MAAA,GAAAA,MAAA,UAAAgD,EAAA5C,aAAAW,OAIEf,MAAA,GAAAA,MAAA,UAAAgD,EAAA5C,aAAAY,MAIqBhB,MAAA,GAAAA,MAAA,UAAAgD,EAAA5C,aAAAe,KAOhEnB,MAAA,GAAAA,MAAA,0CCPLkD,KAAWC,uDAAEC,KAAcC,KAAcC,KAAWC,yBAAEC,IAAiBC,KAAAC,cAAA,IAEtEpD,CAAgB,KCZ7B,MAAMqD,EAAiB,CACrB,CACEC,KAAM,GACNC,UAAWvD,IAQR,IAAMwD,EAA6B,UAAAC,EAApC,MAAOD,qDAA6B,yBAA7BA,gCAHDT,KAAaW,SAASL,GACtBN,QAECS,CAA6B,KCG7BG,EAAsB,UAAAC,EAA7B,MAAOD,qDAAsB,yBAAtBA,gCAPTb,KACAE,KACAJ,KACAY,EACAxD,KAGS2D,CAAsB","names":["i0","$event","_r1","ctx_r1","notification","date","NotificationPage","_NotificationPage","constructor","this","notificationService","inject","NotificationService","toastController","ToastController","title","body","moment","format","url","sendNotification","_this","console","log","then","_ref","_asyncToGenerator","responseStatus","create","message","duration","position","present","_x","apply","arguments","catch","_ref2","err","JSON","stringify","_x2","selectors","decls","vars","consts","template","rf","ctx","NotificationPage_ng_template_14_Template","IonicModule","i1","CommonModule","RouterModule","FormsModule","i2","ComponentesModule","i3","encapsulation","routes","path","component","NotificationPageRoutingModule","_NotificationPageRoutingModule","forChild","NotificationPageModule","_NotificationPageModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/app/paginas/notification/notification.page.html","./src/app/paginas/notification/notification.page.ts","./src/app/paginas/notification/notification-routing.module.ts","./src/app/paginas/notification/notification.module.ts"],"sourcesContent":["<app-header titulo=\"Notificaciones\"></app-header>\r\n\r\n<ion-content [fullscreen]=\"true\">\r\n\r\n  <form (ngSubmit)=\"sendNotification()\">\r\n \r\n    <ion-item>\r\n      <ion-input name=\"title\" label=\"Titulo notificacion\" [(ngModel)]=\"notification.title\" />\r\n    </ion-item>\r\n  \r\n    <ion-item>\r\n      <ion-textarea name=\"body\" label=\"Cuerpo notificacion\" [(ngModel)]=\"notification.body\"></ion-textarea>\r\n    </ion-item>\r\n\r\n    <ion-item>\r\n      <ion-input name=\"body\" type=\"url\" inputmode=\"url\" label=\"URL notificacion\" [(ngModel)]=\"notification.url\"/>\r\n    </ion-item>\r\n  \r\n    <ion-item>\r\n      <ion-label>Fecha envio</ion-label>\r\n      <ion-datetime-button slot=\"end\" datetime=\"datetime\"/>\r\n      \r\n      <ion-modal [keepContentsMounted]=\"true\">\r\n        <ng-template>\r\n          <ion-datetime id=\"datetime\" name=\"datetime\" [(ngModel)]=\"notification.date\" />\r\n        </ng-template>\r\n      </ion-modal>  \r\n    </ion-item>\r\n  \r\n    <ion-item lines=\"none\">\r\n      <ion-button type=\"submit\" slot=\"end\">Enviar</ion-button>\r\n    </ion-item>\r\n  \r\n  </form>\r\n  \r\n</ion-content>\r\n","import { Component, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { IonicModule, ToastController } from '@ionic/angular';\r\nimport { ComponentesModule } from 'src/app/componentes/componentes.module';\r\nimport * as moment from 'moment-timezone';\r\nimport { INotification } from 'src/app/models/notification.model';\r\nimport { NotificationService } from 'src/app/services/notification.service';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.page.html',\r\n  styleUrls: ['./notification.page.scss'],\r\n  imports: [IonicModule, CommonModule, RouterModule, FormsModule, ComponentesModule],\r\n})\r\nexport class NotificationPage {\r\n  private notificationService: NotificationService = inject(NotificationService)\r\n  private toastController: ToastController = inject(ToastController)\r\n\r\n  public notification: INotification = {\r\n    title: '',\r\n    body: '',\r\n    date: moment().format('YYYY-MM-DDTHH:mm:ss'),\r\n    url: ''\r\n  }\r\n\r\n  sendNotification() {\r\n    console.log(this.notification);\r\n    this.notificationService.sendNotification(this.notification).then( async (responseStatus: boolean) => {\r\n      if(responseStatus){\r\n        const toast = await this.toastController.create({\r\n          message: 'Se ha enviado la notificacion',\r\n          duration: 5000,\r\n          position: 'top'\r\n        })\r\n        await toast.present();\r\n      }else{\r\n        const toast = await this.toastController.create({\r\n          message: 'No se ha enviado la notificacion',\r\n          duration: 5000,\r\n          position: 'top'\r\n        })\r\n        await toast.present();\r\n      }\r\n    }).catch(async err => {\r\n      const toast = await this.toastController.create({\r\n        message: 'No se ha enviado la notificacion por error ' + JSON.stringify(err),\r\n        duration: 5000,\r\n        position: 'top'\r\n      })\r\n      await toast.present();\r\n    })\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotificationPage } from './notification.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotificationPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NotificationPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NotificationPageRoutingModule } from './notification-routing.module';\r\n\r\nimport { NotificationPage } from './notification.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    NotificationPageRoutingModule,\r\n    NotificationPage\r\n  ],\r\n})\r\nexport class NotificationPageModule {}\r\n"],"x_google_ignoreList":[]}